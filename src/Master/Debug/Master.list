
Master.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000a064  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000005f4  0800a208  0800a208  0001a208  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800a7fc  0800a7fc  000201d8  2**0
                  CONTENTS
  4 .ARM          00000008  0800a7fc  0800a7fc  0001a7fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800a804  0800a804  000201d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800a804  0800a804  0001a804  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800a808  0800a808  0001a808  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d8  20000000  0800a80c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00004da4  200001d8  0800a9e4  000201d8  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  20004f7c  0800a9e4  00024f7c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201d8  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020208  2**0
                  CONTENTS, READONLY
 13 .debug_info   00018cbc  00000000  00000000  0002024b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00003983  00000000  00000000  00038f07  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000015b0  00000000  00000000  0003c890  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000010cc  00000000  00000000  0003de40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00019ac3  00000000  00000000  0003ef0c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000185ed  00000000  00000000  000589cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0009a0dc  00000000  00000000  00070fbc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00006b44  00000000  00000000  0010b098  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006d  00000000  00000000  00111bdc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001d8 	.word	0x200001d8
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800a1ec 	.word	0x0800a1ec

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001dc 	.word	0x200001dc
 80001dc:	0800a1ec 	.word	0x0800a1ec

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_uldivmod>:
 8000bb8:	b953      	cbnz	r3, 8000bd0 <__aeabi_uldivmod+0x18>
 8000bba:	b94a      	cbnz	r2, 8000bd0 <__aeabi_uldivmod+0x18>
 8000bbc:	2900      	cmp	r1, #0
 8000bbe:	bf08      	it	eq
 8000bc0:	2800      	cmpeq	r0, #0
 8000bc2:	bf1c      	itt	ne
 8000bc4:	f04f 31ff 	movne.w	r1, #4294967295
 8000bc8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bcc:	f000 b970 	b.w	8000eb0 <__aeabi_idiv0>
 8000bd0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bd4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bd8:	f000 f806 	bl	8000be8 <__udivmoddi4>
 8000bdc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000be0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000be4:	b004      	add	sp, #16
 8000be6:	4770      	bx	lr

08000be8 <__udivmoddi4>:
 8000be8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bec:	9e08      	ldr	r6, [sp, #32]
 8000bee:	460d      	mov	r5, r1
 8000bf0:	4604      	mov	r4, r0
 8000bf2:	460f      	mov	r7, r1
 8000bf4:	2b00      	cmp	r3, #0
 8000bf6:	d14a      	bne.n	8000c8e <__udivmoddi4+0xa6>
 8000bf8:	428a      	cmp	r2, r1
 8000bfa:	4694      	mov	ip, r2
 8000bfc:	d965      	bls.n	8000cca <__udivmoddi4+0xe2>
 8000bfe:	fab2 f382 	clz	r3, r2
 8000c02:	b143      	cbz	r3, 8000c16 <__udivmoddi4+0x2e>
 8000c04:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c08:	f1c3 0220 	rsb	r2, r3, #32
 8000c0c:	409f      	lsls	r7, r3
 8000c0e:	fa20 f202 	lsr.w	r2, r0, r2
 8000c12:	4317      	orrs	r7, r2
 8000c14:	409c      	lsls	r4, r3
 8000c16:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000c1a:	fa1f f58c 	uxth.w	r5, ip
 8000c1e:	fbb7 f1fe 	udiv	r1, r7, lr
 8000c22:	0c22      	lsrs	r2, r4, #16
 8000c24:	fb0e 7711 	mls	r7, lr, r1, r7
 8000c28:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000c2c:	fb01 f005 	mul.w	r0, r1, r5
 8000c30:	4290      	cmp	r0, r2
 8000c32:	d90a      	bls.n	8000c4a <__udivmoddi4+0x62>
 8000c34:	eb1c 0202 	adds.w	r2, ip, r2
 8000c38:	f101 37ff 	add.w	r7, r1, #4294967295
 8000c3c:	f080 811c 	bcs.w	8000e78 <__udivmoddi4+0x290>
 8000c40:	4290      	cmp	r0, r2
 8000c42:	f240 8119 	bls.w	8000e78 <__udivmoddi4+0x290>
 8000c46:	3902      	subs	r1, #2
 8000c48:	4462      	add	r2, ip
 8000c4a:	1a12      	subs	r2, r2, r0
 8000c4c:	b2a4      	uxth	r4, r4
 8000c4e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000c52:	fb0e 2210 	mls	r2, lr, r0, r2
 8000c56:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000c5a:	fb00 f505 	mul.w	r5, r0, r5
 8000c5e:	42a5      	cmp	r5, r4
 8000c60:	d90a      	bls.n	8000c78 <__udivmoddi4+0x90>
 8000c62:	eb1c 0404 	adds.w	r4, ip, r4
 8000c66:	f100 32ff 	add.w	r2, r0, #4294967295
 8000c6a:	f080 8107 	bcs.w	8000e7c <__udivmoddi4+0x294>
 8000c6e:	42a5      	cmp	r5, r4
 8000c70:	f240 8104 	bls.w	8000e7c <__udivmoddi4+0x294>
 8000c74:	4464      	add	r4, ip
 8000c76:	3802      	subs	r0, #2
 8000c78:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000c7c:	1b64      	subs	r4, r4, r5
 8000c7e:	2100      	movs	r1, #0
 8000c80:	b11e      	cbz	r6, 8000c8a <__udivmoddi4+0xa2>
 8000c82:	40dc      	lsrs	r4, r3
 8000c84:	2300      	movs	r3, #0
 8000c86:	e9c6 4300 	strd	r4, r3, [r6]
 8000c8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c8e:	428b      	cmp	r3, r1
 8000c90:	d908      	bls.n	8000ca4 <__udivmoddi4+0xbc>
 8000c92:	2e00      	cmp	r6, #0
 8000c94:	f000 80ed 	beq.w	8000e72 <__udivmoddi4+0x28a>
 8000c98:	2100      	movs	r1, #0
 8000c9a:	e9c6 0500 	strd	r0, r5, [r6]
 8000c9e:	4608      	mov	r0, r1
 8000ca0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ca4:	fab3 f183 	clz	r1, r3
 8000ca8:	2900      	cmp	r1, #0
 8000caa:	d149      	bne.n	8000d40 <__udivmoddi4+0x158>
 8000cac:	42ab      	cmp	r3, r5
 8000cae:	d302      	bcc.n	8000cb6 <__udivmoddi4+0xce>
 8000cb0:	4282      	cmp	r2, r0
 8000cb2:	f200 80f8 	bhi.w	8000ea6 <__udivmoddi4+0x2be>
 8000cb6:	1a84      	subs	r4, r0, r2
 8000cb8:	eb65 0203 	sbc.w	r2, r5, r3
 8000cbc:	2001      	movs	r0, #1
 8000cbe:	4617      	mov	r7, r2
 8000cc0:	2e00      	cmp	r6, #0
 8000cc2:	d0e2      	beq.n	8000c8a <__udivmoddi4+0xa2>
 8000cc4:	e9c6 4700 	strd	r4, r7, [r6]
 8000cc8:	e7df      	b.n	8000c8a <__udivmoddi4+0xa2>
 8000cca:	b902      	cbnz	r2, 8000cce <__udivmoddi4+0xe6>
 8000ccc:	deff      	udf	#255	; 0xff
 8000cce:	fab2 f382 	clz	r3, r2
 8000cd2:	2b00      	cmp	r3, #0
 8000cd4:	f040 8090 	bne.w	8000df8 <__udivmoddi4+0x210>
 8000cd8:	1a8a      	subs	r2, r1, r2
 8000cda:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cde:	fa1f fe8c 	uxth.w	lr, ip
 8000ce2:	2101      	movs	r1, #1
 8000ce4:	fbb2 f5f7 	udiv	r5, r2, r7
 8000ce8:	fb07 2015 	mls	r0, r7, r5, r2
 8000cec:	0c22      	lsrs	r2, r4, #16
 8000cee:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000cf2:	fb0e f005 	mul.w	r0, lr, r5
 8000cf6:	4290      	cmp	r0, r2
 8000cf8:	d908      	bls.n	8000d0c <__udivmoddi4+0x124>
 8000cfa:	eb1c 0202 	adds.w	r2, ip, r2
 8000cfe:	f105 38ff 	add.w	r8, r5, #4294967295
 8000d02:	d202      	bcs.n	8000d0a <__udivmoddi4+0x122>
 8000d04:	4290      	cmp	r0, r2
 8000d06:	f200 80cb 	bhi.w	8000ea0 <__udivmoddi4+0x2b8>
 8000d0a:	4645      	mov	r5, r8
 8000d0c:	1a12      	subs	r2, r2, r0
 8000d0e:	b2a4      	uxth	r4, r4
 8000d10:	fbb2 f0f7 	udiv	r0, r2, r7
 8000d14:	fb07 2210 	mls	r2, r7, r0, r2
 8000d18:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000d1c:	fb0e fe00 	mul.w	lr, lr, r0
 8000d20:	45a6      	cmp	lr, r4
 8000d22:	d908      	bls.n	8000d36 <__udivmoddi4+0x14e>
 8000d24:	eb1c 0404 	adds.w	r4, ip, r4
 8000d28:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d2c:	d202      	bcs.n	8000d34 <__udivmoddi4+0x14c>
 8000d2e:	45a6      	cmp	lr, r4
 8000d30:	f200 80bb 	bhi.w	8000eaa <__udivmoddi4+0x2c2>
 8000d34:	4610      	mov	r0, r2
 8000d36:	eba4 040e 	sub.w	r4, r4, lr
 8000d3a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000d3e:	e79f      	b.n	8000c80 <__udivmoddi4+0x98>
 8000d40:	f1c1 0720 	rsb	r7, r1, #32
 8000d44:	408b      	lsls	r3, r1
 8000d46:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d4a:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d4e:	fa05 f401 	lsl.w	r4, r5, r1
 8000d52:	fa20 f307 	lsr.w	r3, r0, r7
 8000d56:	40fd      	lsrs	r5, r7
 8000d58:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d5c:	4323      	orrs	r3, r4
 8000d5e:	fbb5 f8f9 	udiv	r8, r5, r9
 8000d62:	fa1f fe8c 	uxth.w	lr, ip
 8000d66:	fb09 5518 	mls	r5, r9, r8, r5
 8000d6a:	0c1c      	lsrs	r4, r3, #16
 8000d6c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000d70:	fb08 f50e 	mul.w	r5, r8, lr
 8000d74:	42a5      	cmp	r5, r4
 8000d76:	fa02 f201 	lsl.w	r2, r2, r1
 8000d7a:	fa00 f001 	lsl.w	r0, r0, r1
 8000d7e:	d90b      	bls.n	8000d98 <__udivmoddi4+0x1b0>
 8000d80:	eb1c 0404 	adds.w	r4, ip, r4
 8000d84:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d88:	f080 8088 	bcs.w	8000e9c <__udivmoddi4+0x2b4>
 8000d8c:	42a5      	cmp	r5, r4
 8000d8e:	f240 8085 	bls.w	8000e9c <__udivmoddi4+0x2b4>
 8000d92:	f1a8 0802 	sub.w	r8, r8, #2
 8000d96:	4464      	add	r4, ip
 8000d98:	1b64      	subs	r4, r4, r5
 8000d9a:	b29d      	uxth	r5, r3
 8000d9c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000da0:	fb09 4413 	mls	r4, r9, r3, r4
 8000da4:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000da8:	fb03 fe0e 	mul.w	lr, r3, lr
 8000dac:	45a6      	cmp	lr, r4
 8000dae:	d908      	bls.n	8000dc2 <__udivmoddi4+0x1da>
 8000db0:	eb1c 0404 	adds.w	r4, ip, r4
 8000db4:	f103 35ff 	add.w	r5, r3, #4294967295
 8000db8:	d26c      	bcs.n	8000e94 <__udivmoddi4+0x2ac>
 8000dba:	45a6      	cmp	lr, r4
 8000dbc:	d96a      	bls.n	8000e94 <__udivmoddi4+0x2ac>
 8000dbe:	3b02      	subs	r3, #2
 8000dc0:	4464      	add	r4, ip
 8000dc2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000dc6:	fba3 9502 	umull	r9, r5, r3, r2
 8000dca:	eba4 040e 	sub.w	r4, r4, lr
 8000dce:	42ac      	cmp	r4, r5
 8000dd0:	46c8      	mov	r8, r9
 8000dd2:	46ae      	mov	lr, r5
 8000dd4:	d356      	bcc.n	8000e84 <__udivmoddi4+0x29c>
 8000dd6:	d053      	beq.n	8000e80 <__udivmoddi4+0x298>
 8000dd8:	b156      	cbz	r6, 8000df0 <__udivmoddi4+0x208>
 8000dda:	ebb0 0208 	subs.w	r2, r0, r8
 8000dde:	eb64 040e 	sbc.w	r4, r4, lr
 8000de2:	fa04 f707 	lsl.w	r7, r4, r7
 8000de6:	40ca      	lsrs	r2, r1
 8000de8:	40cc      	lsrs	r4, r1
 8000dea:	4317      	orrs	r7, r2
 8000dec:	e9c6 7400 	strd	r7, r4, [r6]
 8000df0:	4618      	mov	r0, r3
 8000df2:	2100      	movs	r1, #0
 8000df4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000df8:	f1c3 0120 	rsb	r1, r3, #32
 8000dfc:	fa02 fc03 	lsl.w	ip, r2, r3
 8000e00:	fa20 f201 	lsr.w	r2, r0, r1
 8000e04:	fa25 f101 	lsr.w	r1, r5, r1
 8000e08:	409d      	lsls	r5, r3
 8000e0a:	432a      	orrs	r2, r5
 8000e0c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e10:	fa1f fe8c 	uxth.w	lr, ip
 8000e14:	fbb1 f0f7 	udiv	r0, r1, r7
 8000e18:	fb07 1510 	mls	r5, r7, r0, r1
 8000e1c:	0c11      	lsrs	r1, r2, #16
 8000e1e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000e22:	fb00 f50e 	mul.w	r5, r0, lr
 8000e26:	428d      	cmp	r5, r1
 8000e28:	fa04 f403 	lsl.w	r4, r4, r3
 8000e2c:	d908      	bls.n	8000e40 <__udivmoddi4+0x258>
 8000e2e:	eb1c 0101 	adds.w	r1, ip, r1
 8000e32:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e36:	d22f      	bcs.n	8000e98 <__udivmoddi4+0x2b0>
 8000e38:	428d      	cmp	r5, r1
 8000e3a:	d92d      	bls.n	8000e98 <__udivmoddi4+0x2b0>
 8000e3c:	3802      	subs	r0, #2
 8000e3e:	4461      	add	r1, ip
 8000e40:	1b49      	subs	r1, r1, r5
 8000e42:	b292      	uxth	r2, r2
 8000e44:	fbb1 f5f7 	udiv	r5, r1, r7
 8000e48:	fb07 1115 	mls	r1, r7, r5, r1
 8000e4c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e50:	fb05 f10e 	mul.w	r1, r5, lr
 8000e54:	4291      	cmp	r1, r2
 8000e56:	d908      	bls.n	8000e6a <__udivmoddi4+0x282>
 8000e58:	eb1c 0202 	adds.w	r2, ip, r2
 8000e5c:	f105 38ff 	add.w	r8, r5, #4294967295
 8000e60:	d216      	bcs.n	8000e90 <__udivmoddi4+0x2a8>
 8000e62:	4291      	cmp	r1, r2
 8000e64:	d914      	bls.n	8000e90 <__udivmoddi4+0x2a8>
 8000e66:	3d02      	subs	r5, #2
 8000e68:	4462      	add	r2, ip
 8000e6a:	1a52      	subs	r2, r2, r1
 8000e6c:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000e70:	e738      	b.n	8000ce4 <__udivmoddi4+0xfc>
 8000e72:	4631      	mov	r1, r6
 8000e74:	4630      	mov	r0, r6
 8000e76:	e708      	b.n	8000c8a <__udivmoddi4+0xa2>
 8000e78:	4639      	mov	r1, r7
 8000e7a:	e6e6      	b.n	8000c4a <__udivmoddi4+0x62>
 8000e7c:	4610      	mov	r0, r2
 8000e7e:	e6fb      	b.n	8000c78 <__udivmoddi4+0x90>
 8000e80:	4548      	cmp	r0, r9
 8000e82:	d2a9      	bcs.n	8000dd8 <__udivmoddi4+0x1f0>
 8000e84:	ebb9 0802 	subs.w	r8, r9, r2
 8000e88:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000e8c:	3b01      	subs	r3, #1
 8000e8e:	e7a3      	b.n	8000dd8 <__udivmoddi4+0x1f0>
 8000e90:	4645      	mov	r5, r8
 8000e92:	e7ea      	b.n	8000e6a <__udivmoddi4+0x282>
 8000e94:	462b      	mov	r3, r5
 8000e96:	e794      	b.n	8000dc2 <__udivmoddi4+0x1da>
 8000e98:	4640      	mov	r0, r8
 8000e9a:	e7d1      	b.n	8000e40 <__udivmoddi4+0x258>
 8000e9c:	46d0      	mov	r8, sl
 8000e9e:	e77b      	b.n	8000d98 <__udivmoddi4+0x1b0>
 8000ea0:	3d02      	subs	r5, #2
 8000ea2:	4462      	add	r2, ip
 8000ea4:	e732      	b.n	8000d0c <__udivmoddi4+0x124>
 8000ea6:	4608      	mov	r0, r1
 8000ea8:	e70a      	b.n	8000cc0 <__udivmoddi4+0xd8>
 8000eaa:	4464      	add	r4, ip
 8000eac:	3802      	subs	r0, #2
 8000eae:	e742      	b.n	8000d36 <__udivmoddi4+0x14e>

08000eb0 <__aeabi_idiv0>:
 8000eb0:	4770      	bx	lr
 8000eb2:	bf00      	nop

08000eb4 <Ultrasound>:
  .name = "Mutex"
};


static void Ultrasound( void *pvParameters )
{
 8000eb4:	b590      	push	{r4, r7, lr}
 8000eb6:	b083      	sub	sp, #12
 8000eb8:	af00      	add	r7, sp, #0
 8000eba:	6078      	str	r0, [r7, #4]


    #if(VERBOSE == 1)
        printf("Begin Ultrasound at %ld\r\n", pdMS_TO_TICKS(xTaskGetTickCount()));
 8000ebc:	f004 fe02 	bl	8005ac4 <xTaskGetTickCount>
 8000ec0:	4603      	mov	r3, r0
 8000ec2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000ec6:	fb02 f303 	mul.w	r3, r2, r3
 8000eca:	4a2a      	ldr	r2, [pc, #168]	; (8000f74 <Ultrasound+0xc0>)
 8000ecc:	fba2 2303 	umull	r2, r3, r2, r3
 8000ed0:	099b      	lsrs	r3, r3, #6
 8000ed2:	4619      	mov	r1, r3
 8000ed4:	4828      	ldr	r0, [pc, #160]	; (8000f78 <Ultrasound+0xc4>)
 8000ed6:	f007 f931 	bl	800813c <iprintf>
    /*
        The value 60.010 is chosen because of the Ultrasound's behavior: it needs to wait
        60 ms in order to receive the echo signal and 10 microseconds because of putting
        down the trigger from 1 to 0
    */
    HAL_Delay(60.010);
 8000eda:	203c      	movs	r0, #60	; 0x3c
 8000edc:	f001 fa3e 	bl	800235c <HAL_Delay>

    /*
        Randomly chooses the distance of the obstacle, according to the
        value of the tick count, if even or odd.
    */
    if(pdMS_TO_TICKS(xTaskGetTickCount()) % 2 == 0)
 8000ee0:	f004 fdf0 	bl	8005ac4 <xTaskGetTickCount>
 8000ee4:	4603      	mov	r3, r0
 8000ee6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000eea:	fb02 f303 	mul.w	r3, r2, r3
 8000eee:	4a21      	ldr	r2, [pc, #132]	; (8000f74 <Ultrasound+0xc0>)
 8000ef0:	fba2 2303 	umull	r2, r3, r2, r3
 8000ef4:	099b      	lsrs	r3, r3, #6
 8000ef6:	f003 0301 	and.w	r3, r3, #1
 8000efa:	2b00      	cmp	r3, #0
 8000efc:	d103      	bne.n	8000f06 <Ultrasound+0x52>
        Global_Struct.Distance = 80;
 8000efe:	4b1f      	ldr	r3, [pc, #124]	; (8000f7c <Ultrasound+0xc8>)
 8000f00:	4a1f      	ldr	r2, [pc, #124]	; (8000f80 <Ultrasound+0xcc>)
 8000f02:	601a      	str	r2, [r3, #0]
 8000f04:	e002      	b.n	8000f0c <Ultrasound+0x58>
    else
        Global_Struct.Distance = 60;
 8000f06:	4b1d      	ldr	r3, [pc, #116]	; (8000f7c <Ultrasound+0xc8>)
 8000f08:	4a1e      	ldr	r2, [pc, #120]	; (8000f84 <Ultrasound+0xd0>)
 8000f0a:	601a      	str	r2, [r3, #0]


    /*
        As previously said, checks the mutex before trying to edit the value.
    */
    osMutexAcquire(MutexHandle, osWaitForever);
 8000f0c:	4b1e      	ldr	r3, [pc, #120]	; (8000f88 <Ultrasound+0xd4>)
 8000f0e:	681b      	ldr	r3, [r3, #0]
 8000f10:	f04f 31ff 	mov.w	r1, #4294967295
 8000f14:	4618      	mov	r0, r3
 8000f16:	f003 f88b 	bl	8004030 <osMutexAcquire>
    if(Global_Struct.Distance < CRITICAL_DISTANCE)
 8000f1a:	4b18      	ldr	r3, [pc, #96]	; (8000f7c <Ultrasound+0xc8>)
 8000f1c:	edd3 7a00 	vldr	s15, [r3]
 8000f20:	ed9f 7a1a 	vldr	s14, [pc, #104]	; 8000f8c <Ultrasound+0xd8>
 8000f24:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000f28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f2c:	d503      	bpl.n	8000f36 <Ultrasound+0x82>
        Global_Struct.Control_Var = 1;
 8000f2e:	4b13      	ldr	r3, [pc, #76]	; (8000f7c <Ultrasound+0xc8>)
 8000f30:	2201      	movs	r2, #1
 8000f32:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
    osMutexRelease(MutexHandle);
 8000f36:	4b14      	ldr	r3, [pc, #80]	; (8000f88 <Ultrasound+0xd4>)
 8000f38:	681b      	ldr	r3, [r3, #0]
 8000f3a:	4618      	mov	r0, r3
 8000f3c:	f003 f8c3 	bl	80040c6 <osMutexRelease>




    #if(VERBOSE == 1)
        printf("Exit Ultrasound at %ld. Distance Value: %f\r\n", pdMS_TO_TICKS(xTaskGetTickCount()), Global_Struct.Distance);
 8000f40:	f004 fdc0 	bl	8005ac4 <xTaskGetTickCount>
 8000f44:	4603      	mov	r3, r0
 8000f46:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000f4a:	fb02 f303 	mul.w	r3, r2, r3
 8000f4e:	4a09      	ldr	r2, [pc, #36]	; (8000f74 <Ultrasound+0xc0>)
 8000f50:	fba2 2303 	umull	r2, r3, r2, r3
 8000f54:	099c      	lsrs	r4, r3, #6
 8000f56:	4b09      	ldr	r3, [pc, #36]	; (8000f7c <Ultrasound+0xc8>)
 8000f58:	681b      	ldr	r3, [r3, #0]
 8000f5a:	4618      	mov	r0, r3
 8000f5c:	f7ff fafc 	bl	8000558 <__aeabi_f2d>
 8000f60:	4602      	mov	r2, r0
 8000f62:	460b      	mov	r3, r1
 8000f64:	4621      	mov	r1, r4
 8000f66:	480a      	ldr	r0, [pc, #40]	; (8000f90 <Ultrasound+0xdc>)
 8000f68:	f007 f8e8 	bl	800813c <iprintf>
    #endif


}
 8000f6c:	bf00      	nop
 8000f6e:	370c      	adds	r7, #12
 8000f70:	46bd      	mov	sp, r7
 8000f72:	bd90      	pop	{r4, r7, pc}
 8000f74:	10624dd3 	.word	0x10624dd3
 8000f78:	0800a210 	.word	0x0800a210
 8000f7c:	20000200 	.word	0x20000200
 8000f80:	42a00000 	.word	0x42a00000
 8000f84:	42700000 	.word	0x42700000
 8000f88:	20000238 	.word	0x20000238
 8000f8c:	428c0000 	.word	0x428c0000
 8000f90:	0800a22c 	.word	0x0800a22c

08000f94 <Check_Danger>:



static void Check_Danger( void *pvParameters )
{
 8000f94:	b580      	push	{r7, lr}
 8000f96:	b082      	sub	sp, #8
 8000f98:	af00      	add	r7, sp, #0
 8000f9a:	6078      	str	r0, [r7, #4]


    #if(VERBOSE == 1)
        printf("Begin Check Danger at %ld\r\n", pdMS_TO_TICKS(xTaskGetTickCount()));
 8000f9c:	f004 fd92 	bl	8005ac4 <xTaskGetTickCount>
 8000fa0:	4603      	mov	r3, r0
 8000fa2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000fa6:	fb02 f303 	mul.w	r3, r2, r3
 8000faa:	4a25      	ldr	r2, [pc, #148]	; (8001040 <Check_Danger+0xac>)
 8000fac:	fba2 2303 	umull	r2, r3, r2, r3
 8000fb0:	099b      	lsrs	r3, r3, #6
 8000fb2:	4619      	mov	r1, r3
 8000fb4:	4823      	ldr	r0, [pc, #140]	; (8001044 <Check_Danger+0xb0>)
 8000fb6:	f007 f8c1 	bl	800813c <iprintf>
        This task creates the aperiodic tasks, based on the control var value.
        This variable was set to 1 in case of critical values detected by the sensors;
        if set to 1, it directly proceeds to execution,
        otherwise, it continues normally with the "standard" control cycle.
    */
    osMutexAcquire(MutexHandle, osWaitForever);
 8000fba:	4b23      	ldr	r3, [pc, #140]	; (8001048 <Check_Danger+0xb4>)
 8000fbc:	681b      	ldr	r3, [r3, #0]
 8000fbe:	f04f 31ff 	mov.w	r1, #4294967295
 8000fc2:	4618      	mov	r0, r3
 8000fc4:	f003 f834 	bl	8004030 <osMutexAcquire>
    if(Global_Struct.Control_Var == 0){
 8000fc8:	4b20      	ldr	r3, [pc, #128]	; (800104c <Check_Danger+0xb8>)
 8000fca:	f993 3030 	ldrsb.w	r3, [r3, #48]	; 0x30
 8000fce:	2b00      	cmp	r3, #0
 8000fd0:	d118      	bne.n	8001004 <Check_Danger+0x70>
        vSchedulerAperiodicJobCreate(Psx, "Psx", NULL, pdMS_TO_TICKS( 10 ) );
 8000fd2:	230a      	movs	r3, #10
 8000fd4:	2200      	movs	r2, #0
 8000fd6:	491e      	ldr	r1, [pc, #120]	; (8001050 <Check_Danger+0xbc>)
 8000fd8:	481e      	ldr	r0, [pc, #120]	; (8001054 <Check_Danger+0xc0>)
 8000fda:	f000 fded 	bl	8001bb8 <vSchedulerAperiodicJobCreate>
        vSchedulerAperiodicJobCreate(Accelerometer, "Accelerometer", NULL, pdMS_TO_TICKS( 10 ) );
 8000fde:	230a      	movs	r3, #10
 8000fe0:	2200      	movs	r2, #0
 8000fe2:	491d      	ldr	r1, [pc, #116]	; (8001058 <Check_Danger+0xc4>)
 8000fe4:	481d      	ldr	r0, [pc, #116]	; (800105c <Check_Danger+0xc8>)
 8000fe6:	f000 fde7 	bl	8001bb8 <vSchedulerAperiodicJobCreate>
        vSchedulerAperiodicJobCreate(Communication, "Communication", NULL, pdMS_TO_TICKS(30 ) );
 8000fea:	231e      	movs	r3, #30
 8000fec:	2200      	movs	r2, #0
 8000fee:	491c      	ldr	r1, [pc, #112]	; (8001060 <Check_Danger+0xcc>)
 8000ff0:	481c      	ldr	r0, [pc, #112]	; (8001064 <Check_Danger+0xd0>)
 8000ff2:	f000 fde1 	bl	8001bb8 <vSchedulerAperiodicJobCreate>
        vSchedulerAperiodicJobCreate(Execution, "Execution", NULL, pdMS_TO_TICKS(10 ) );
 8000ff6:	230a      	movs	r3, #10
 8000ff8:	2200      	movs	r2, #0
 8000ffa:	491b      	ldr	r1, [pc, #108]	; (8001068 <Check_Danger+0xd4>)
 8000ffc:	481b      	ldr	r0, [pc, #108]	; (800106c <Check_Danger+0xd8>)
 8000ffe:	f000 fddb 	bl	8001bb8 <vSchedulerAperiodicJobCreate>
 8001002:	e005      	b.n	8001010 <Check_Danger+0x7c>
    }
    else{
        vSchedulerAperiodicJobCreate(Execution, "Execution", NULL, pdMS_TO_TICKS(10 ) );
 8001004:	230a      	movs	r3, #10
 8001006:	2200      	movs	r2, #0
 8001008:	4917      	ldr	r1, [pc, #92]	; (8001068 <Check_Danger+0xd4>)
 800100a:	4818      	ldr	r0, [pc, #96]	; (800106c <Check_Danger+0xd8>)
 800100c:	f000 fdd4 	bl	8001bb8 <vSchedulerAperiodicJobCreate>
    }
    osMutexRelease(MutexHandle);
 8001010:	4b0d      	ldr	r3, [pc, #52]	; (8001048 <Check_Danger+0xb4>)
 8001012:	681b      	ldr	r3, [r3, #0]
 8001014:	4618      	mov	r0, r3
 8001016:	f003 f856 	bl	80040c6 <osMutexRelease>



    #if(VERBOSE == 1)
        printf("Exit Check Danger at %ld\r\n", pdMS_TO_TICKS(xTaskGetTickCount()));
 800101a:	f004 fd53 	bl	8005ac4 <xTaskGetTickCount>
 800101e:	4603      	mov	r3, r0
 8001020:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001024:	fb02 f303 	mul.w	r3, r2, r3
 8001028:	4a05      	ldr	r2, [pc, #20]	; (8001040 <Check_Danger+0xac>)
 800102a:	fba2 2303 	umull	r2, r3, r2, r3
 800102e:	099b      	lsrs	r3, r3, #6
 8001030:	4619      	mov	r1, r3
 8001032:	480f      	ldr	r0, [pc, #60]	; (8001070 <Check_Danger+0xdc>)
 8001034:	f007 f882 	bl	800813c <iprintf>
    #endif

}
 8001038:	bf00      	nop
 800103a:	3708      	adds	r7, #8
 800103c:	46bd      	mov	sp, r7
 800103e:	bd80      	pop	{r7, pc}
 8001040:	10624dd3 	.word	0x10624dd3
 8001044:	0800a25c 	.word	0x0800a25c
 8001048:	20000238 	.word	0x20000238
 800104c:	20000200 	.word	0x20000200
 8001050:	0800a278 	.word	0x0800a278
 8001054:	080010d9 	.word	0x080010d9
 8001058:	0800a27c 	.word	0x0800a27c
 800105c:	08001075 	.word	0x08001075
 8001060:	0800a28c 	.word	0x0800a28c
 8001064:	08001171 	.word	0x08001171
 8001068:	0800a29c 	.word	0x0800a29c
 800106c:	08001205 	.word	0x08001205
 8001070:	0800a2a8 	.word	0x0800a2a8

08001074 <Accelerometer>:

//--------------------------APERIODICI---------------------------------


static void Accelerometer( void *pvParameters )
{
 8001074:	b580      	push	{r7, lr}
 8001076:	b082      	sub	sp, #8
 8001078:	af00      	add	r7, sp, #0
 800107a:	6078      	str	r0, [r7, #4]
    #if(VERBOSE == 1)
        printf("Begin Accelerometer at %ld\r\n", pdMS_TO_TICKS(xTaskGetTickCount()));
 800107c:	f004 fd22 	bl	8005ac4 <xTaskGetTickCount>
 8001080:	4603      	mov	r3, r0
 8001082:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001086:	fb02 f303 	mul.w	r3, r2, r3
 800108a:	4a0f      	ldr	r2, [pc, #60]	; (80010c8 <Accelerometer+0x54>)
 800108c:	fba2 2303 	umull	r2, r3, r2, r3
 8001090:	099b      	lsrs	r3, r3, #6
 8001092:	4619      	mov	r1, r3
 8001094:	480d      	ldr	r0, [pc, #52]	; (80010cc <Accelerometer+0x58>)
 8001096:	f007 f851 	bl	800813c <iprintf>
    #endif


    /* Dummy value for the accelerometer. */
    Global_Struct.Accelerometer = 10;
 800109a:	4b0d      	ldr	r3, [pc, #52]	; (80010d0 <Accelerometer+0x5c>)
 800109c:	220a      	movs	r2, #10
 800109e:	859a      	strh	r2, [r3, #44]	; 0x2c


    #if(VERBOSE == 1)
        printf("Exit Accelerometer at %ld\r\n", pdMS_TO_TICKS(xTaskGetTickCount()));
 80010a0:	f004 fd10 	bl	8005ac4 <xTaskGetTickCount>
 80010a4:	4603      	mov	r3, r0
 80010a6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80010aa:	fb02 f303 	mul.w	r3, r2, r3
 80010ae:	4a06      	ldr	r2, [pc, #24]	; (80010c8 <Accelerometer+0x54>)
 80010b0:	fba2 2303 	umull	r2, r3, r2, r3
 80010b4:	099b      	lsrs	r3, r3, #6
 80010b6:	4619      	mov	r1, r3
 80010b8:	4806      	ldr	r0, [pc, #24]	; (80010d4 <Accelerometer+0x60>)
 80010ba:	f007 f83f 	bl	800813c <iprintf>
    #endif

}
 80010be:	bf00      	nop
 80010c0:	3708      	adds	r7, #8
 80010c2:	46bd      	mov	sp, r7
 80010c4:	bd80      	pop	{r7, pc}
 80010c6:	bf00      	nop
 80010c8:	10624dd3 	.word	0x10624dd3
 80010cc:	0800a2c4 	.word	0x0800a2c4
 80010d0:	20000200 	.word	0x20000200
 80010d4:	0800a2e4 	.word	0x0800a2e4

080010d8 <Psx>:



static void Psx( void *pvParameters )
{
 80010d8:	b580      	push	{r7, lr}
 80010da:	b082      	sub	sp, #8
 80010dc:	af00      	add	r7, sp, #0
 80010de:	6078      	str	r0, [r7, #4]
    #if(VERBOSE == 1)
        printf("Begin Psx at %ld\r\n", pdMS_TO_TICKS(xTaskGetTickCount()));
 80010e0:	f004 fcf0 	bl	8005ac4 <xTaskGetTickCount>
 80010e4:	4603      	mov	r3, r0
 80010e6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80010ea:	fb02 f303 	mul.w	r3, r2, r3
 80010ee:	4a1c      	ldr	r2, [pc, #112]	; (8001160 <Psx+0x88>)
 80010f0:	fba2 2303 	umull	r2, r3, r2, r3
 80010f4:	099b      	lsrs	r3, r3, #6
 80010f6:	4619      	mov	r1, r3
 80010f8:	481a      	ldr	r0, [pc, #104]	; (8001164 <Psx+0x8c>)
 80010fa:	f007 f81f 	bl	800813c <iprintf>

    /*
        Delay used to express the spi comunication between controller and stm
        The result comes from the following formula: Number_Of_Bits/SPI_Frequency = 72/62.500
    */
    HAL_Delay(1.5);
 80010fe:	2001      	movs	r0, #1
 8001100:	f001 f92c 	bl	800235c <HAL_Delay>

    /* Dummy value for the PSX Controller. */

    Global_Struct.PSX[0]=255;
 8001104:	4b18      	ldr	r3, [pc, #96]	; (8001168 <Psx+0x90>)
 8001106:	22ff      	movs	r2, #255	; 0xff
 8001108:	835a      	strh	r2, [r3, #26]
    Global_Struct.PSX[1]=255;
 800110a:	4b17      	ldr	r3, [pc, #92]	; (8001168 <Psx+0x90>)
 800110c:	22ff      	movs	r2, #255	; 0xff
 800110e:	839a      	strh	r2, [r3, #28]
    Global_Struct.PSX[2]=255;
 8001110:	4b15      	ldr	r3, [pc, #84]	; (8001168 <Psx+0x90>)
 8001112:	22ff      	movs	r2, #255	; 0xff
 8001114:	83da      	strh	r2, [r3, #30]
    Global_Struct.PSX[3]=255;
 8001116:	4b14      	ldr	r3, [pc, #80]	; (8001168 <Psx+0x90>)
 8001118:	22ff      	movs	r2, #255	; 0xff
 800111a:	841a      	strh	r2, [r3, #32]
    Global_Struct.PSX[4]=1;
 800111c:	4b12      	ldr	r3, [pc, #72]	; (8001168 <Psx+0x90>)
 800111e:	2201      	movs	r2, #1
 8001120:	845a      	strh	r2, [r3, #34]	; 0x22
    Global_Struct.PSX[5]=255;
 8001122:	4b11      	ldr	r3, [pc, #68]	; (8001168 <Psx+0x90>)
 8001124:	22ff      	movs	r2, #255	; 0xff
 8001126:	849a      	strh	r2, [r3, #36]	; 0x24
    Global_Struct.PSX[6]=255;
 8001128:	4b0f      	ldr	r3, [pc, #60]	; (8001168 <Psx+0x90>)
 800112a:	22ff      	movs	r2, #255	; 0xff
 800112c:	84da      	strh	r2, [r3, #38]	; 0x26
    Global_Struct.PSX[7]=255;
 800112e:	4b0e      	ldr	r3, [pc, #56]	; (8001168 <Psx+0x90>)
 8001130:	22ff      	movs	r2, #255	; 0xff
 8001132:	851a      	strh	r2, [r3, #40]	; 0x28
    Global_Struct.PSX[8]=255;
 8001134:	4b0c      	ldr	r3, [pc, #48]	; (8001168 <Psx+0x90>)
 8001136:	22ff      	movs	r2, #255	; 0xff
 8001138:	855a      	strh	r2, [r3, #42]	; 0x2a


    #if(VERBOSE == 1)
        printf("Exit Psx at %ld\r\n", pdMS_TO_TICKS(xTaskGetTickCount()));
 800113a:	f004 fcc3 	bl	8005ac4 <xTaskGetTickCount>
 800113e:	4603      	mov	r3, r0
 8001140:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001144:	fb02 f303 	mul.w	r3, r2, r3
 8001148:	4a05      	ldr	r2, [pc, #20]	; (8001160 <Psx+0x88>)
 800114a:	fba2 2303 	umull	r2, r3, r2, r3
 800114e:	099b      	lsrs	r3, r3, #6
 8001150:	4619      	mov	r1, r3
 8001152:	4806      	ldr	r0, [pc, #24]	; (800116c <Psx+0x94>)
 8001154:	f006 fff2 	bl	800813c <iprintf>
    #endif

}
 8001158:	bf00      	nop
 800115a:	3708      	adds	r7, #8
 800115c:	46bd      	mov	sp, r7
 800115e:	bd80      	pop	{r7, pc}
 8001160:	10624dd3 	.word	0x10624dd3
 8001164:	0800a300 	.word	0x0800a300
 8001168:	20000200 	.word	0x20000200
 800116c:	0800a314 	.word	0x0800a314

08001170 <Communication>:


static void Communication( void *pvParameters )
{
 8001170:	b580      	push	{r7, lr}
 8001172:	b082      	sub	sp, #8
 8001174:	af00      	add	r7, sp, #0
 8001176:	6078      	str	r0, [r7, #4]
    #if(VERBOSE == 1)
        printf("Begin Communication at %ld\r\n", pdMS_TO_TICKS(xTaskGetTickCount()));
 8001178:	f004 fca4 	bl	8005ac4 <xTaskGetTickCount>
 800117c:	4603      	mov	r3, r0
 800117e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001182:	fb02 f303 	mul.w	r3, r2, r3
 8001186:	4a1b      	ldr	r2, [pc, #108]	; (80011f4 <Communication+0x84>)
 8001188:	fba2 2303 	umull	r2, r3, r2, r3
 800118c:	099b      	lsrs	r3, r3, #6
 800118e:	4619      	mov	r1, r3
 8001190:	4819      	ldr	r0, [pc, #100]	; (80011f8 <Communication+0x88>)
 8001192:	f006 ffd3 	bl	800813c <iprintf>

    /*
        This delay is bigger than the normal comunication but we've considered some errors
        during the communication.
    */
    HAL_Delay(20);
 8001196:	2014      	movs	r0, #20
 8001198:	f001 f8e0 	bl	800235c <HAL_Delay>

    /*
        Dummy condition which sets 0 or 1 to the control_var, based on the tick count,
        if it's even or odd.
    */
    if(pdMS_TO_TICKS(xTaskGetTickCount()) % 2 == 0)
 800119c:	f004 fc92 	bl	8005ac4 <xTaskGetTickCount>
 80011a0:	4603      	mov	r3, r0
 80011a2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80011a6:	fb02 f303 	mul.w	r3, r2, r3
 80011aa:	4a12      	ldr	r2, [pc, #72]	; (80011f4 <Communication+0x84>)
 80011ac:	fba2 2303 	umull	r2, r3, r2, r3
 80011b0:	099b      	lsrs	r3, r3, #6
 80011b2:	f003 0301 	and.w	r3, r3, #1
 80011b6:	2b00      	cmp	r3, #0
 80011b8:	d104      	bne.n	80011c4 <Communication+0x54>
        Global_Struct.Control_Var = 0;
 80011ba:	4b10      	ldr	r3, [pc, #64]	; (80011fc <Communication+0x8c>)
 80011bc:	2200      	movs	r2, #0
 80011be:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
 80011c2:	e003      	b.n	80011cc <Communication+0x5c>
    else
        Global_Struct.Control_Var = 1;
 80011c4:	4b0d      	ldr	r3, [pc, #52]	; (80011fc <Communication+0x8c>)
 80011c6:	2201      	movs	r2, #1
 80011c8:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30



    #if(VERBOSE == 1)
        printf("Exit Communication at %ld\r\n", pdMS_TO_TICKS(xTaskGetTickCount()));
 80011cc:	f004 fc7a 	bl	8005ac4 <xTaskGetTickCount>
 80011d0:	4603      	mov	r3, r0
 80011d2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80011d6:	fb02 f303 	mul.w	r3, r2, r3
 80011da:	4a06      	ldr	r2, [pc, #24]	; (80011f4 <Communication+0x84>)
 80011dc:	fba2 2303 	umull	r2, r3, r2, r3
 80011e0:	099b      	lsrs	r3, r3, #6
 80011e2:	4619      	mov	r1, r3
 80011e4:	4806      	ldr	r0, [pc, #24]	; (8001200 <Communication+0x90>)
 80011e6:	f006 ffa9 	bl	800813c <iprintf>
    #endif

}
 80011ea:	bf00      	nop
 80011ec:	3708      	adds	r7, #8
 80011ee:	46bd      	mov	sp, r7
 80011f0:	bd80      	pop	{r7, pc}
 80011f2:	bf00      	nop
 80011f4:	10624dd3 	.word	0x10624dd3
 80011f8:	0800a328 	.word	0x0800a328
 80011fc:	20000200 	.word	0x20000200
 8001200:	0800a348 	.word	0x0800a348

08001204 <Execution>:


static void Execution( void *pvParameters )
{
 8001204:	b5b0      	push	{r4, r5, r7, lr}
 8001206:	b08a      	sub	sp, #40	; 0x28
 8001208:	af00      	add	r7, sp, #0
 800120a:	6078      	str	r0, [r7, #4]
    #if(VERBOSE == 1)
        printf("Begin Execution at %ld\r\n", pdMS_TO_TICKS(xTaskGetTickCount()));
 800120c:	f004 fc5a 	bl	8005ac4 <xTaskGetTickCount>
 8001210:	4603      	mov	r3, r0
 8001212:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001216:	fb02 f303 	mul.w	r3, r2, r3
 800121a:	4a1d      	ldr	r2, [pc, #116]	; (8001290 <Execution+0x8c>)
 800121c:	fba2 2303 	umull	r2, r3, r2, r3
 8001220:	099b      	lsrs	r3, r3, #6
 8001222:	4619      	mov	r1, r3
 8001224:	481b      	ldr	r0, [pc, #108]	; (8001294 <Execution+0x90>)
 8001226:	f006 ff89 	bl	800813c <iprintf>
        In case of normal drive (0):
            the rover drives the leds based on the user directive,
            sets the speed according to the value on the analog of the PSX Controller.
    */

    if(Global_Struct.Control_Var == 1){         //Emergency Stop
 800122a:	4b1b      	ldr	r3, [pc, #108]	; (8001298 <Execution+0x94>)
 800122c:	f993 3030 	ldrsb.w	r3, [r3, #48]	; 0x30
 8001230:	2b01      	cmp	r3, #1
 8001232:	d10c      	bne.n	800124e <Execution+0x4a>
        int8_t led = 1;
 8001234:	2301      	movs	r3, #1
 8001236:	75fb      	strb	r3, [r7, #23]
        int64_t velocita = 0;
 8001238:	f04f 0200 	mov.w	r2, #0
 800123c:	f04f 0300 	mov.w	r3, #0
 8001240:	e9c7 2302 	strd	r2, r3, [r7, #8]
        Global_Struct.Control_Var = 0;
 8001244:	4b14      	ldr	r3, [pc, #80]	; (8001298 <Execution+0x94>)
 8001246:	2200      	movs	r2, #0
 8001248:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
 800124c:	e00d      	b.n	800126a <Execution+0x66>
    }else{                                      //Normal drive
        int8_t led = Global_Struct.PSX[4];      //Suppose that in PSX[4] there is the value that represents the on/off of the led
 800124e:	4b12      	ldr	r3, [pc, #72]	; (8001298 <Execution+0x94>)
 8001250:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
 8001254:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
        int64_t velocita = Global_Struct.PSX[6];//Suppose that in PSX[6] there is the velocity of the rover given from the controller
 8001258:	4b0f      	ldr	r3, [pc, #60]	; (8001298 <Execution+0x94>)
 800125a:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 800125e:	b21b      	sxth	r3, r3
 8001260:	17da      	asrs	r2, r3, #31
 8001262:	461c      	mov	r4, r3
 8001264:	4615      	mov	r5, r2
 8001266:	e9c7 4506 	strd	r4, r5, [r7, #24]
    }


    #if(VERBOSE == 1)
        printf("Exit Execution at %ld\r\n", pdMS_TO_TICKS(xTaskGetTickCount()));
 800126a:	f004 fc2b 	bl	8005ac4 <xTaskGetTickCount>
 800126e:	4603      	mov	r3, r0
 8001270:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001274:	fb02 f303 	mul.w	r3, r2, r3
 8001278:	4a05      	ldr	r2, [pc, #20]	; (8001290 <Execution+0x8c>)
 800127a:	fba2 2303 	umull	r2, r3, r2, r3
 800127e:	099b      	lsrs	r3, r3, #6
 8001280:	4619      	mov	r1, r3
 8001282:	4806      	ldr	r0, [pc, #24]	; (800129c <Execution+0x98>)
 8001284:	f006 ff5a 	bl	800813c <iprintf>
    #endif

}
 8001288:	bf00      	nop
 800128a:	3728      	adds	r7, #40	; 0x28
 800128c:	46bd      	mov	sp, r7
 800128e:	bdb0      	pop	{r4, r5, r7, pc}
 8001290:	10624dd3 	.word	0x10624dd3
 8001294:	0800a364 	.word	0x0800a364
 8001298:	20000200 	.word	0x20000200
 800129c:	0800a380 	.word	0x0800a380

080012a0 <MX_FREERTOS_Init>:
/**
  * @brief  FreeRTOS initialization
  * @param  None
  * @retval None
  */
void MX_FREERTOS_Init(void) {
 80012a0:	b580      	push	{r7, lr}
 80012a2:	b086      	sub	sp, #24
 80012a4:	af06      	add	r7, sp, #24
    vSchedulerInit();
 80012a6:	f000 fdc9 	bl	8001e3c <vSchedulerInit>

    printf("------------Hello From FreeRTOS------------\r\n");
 80012aa:	4836      	ldr	r0, [pc, #216]	; (8001384 <MX_FREERTOS_Init+0xe4>)
 80012ac:	f006 ffac 	bl	8008208 <puts>


    vSchedulerInit();
 80012b0:	f000 fdc4 	bl	8001e3c <vSchedulerInit>

    /*
        Creation of both periodic tasks, Ultrasound and Check_Danger.
        Check the doc for more details.
    */
    vSchedulerPeriodicTaskCreate(Ultrasound, "Ultrasound", configMINIMAL_STACK_SIZE, NULL, 1, &xHandle1,
 80012b4:	2346      	movs	r3, #70	; 0x46
 80012b6:	9305      	str	r3, [sp, #20]
 80012b8:	2346      	movs	r3, #70	; 0x46
 80012ba:	9304      	str	r3, [sp, #16]
 80012bc:	23a0      	movs	r3, #160	; 0xa0
 80012be:	9303      	str	r3, [sp, #12]
 80012c0:	2300      	movs	r3, #0
 80012c2:	9302      	str	r3, [sp, #8]
 80012c4:	4b30      	ldr	r3, [pc, #192]	; (8001388 <MX_FREERTOS_Init+0xe8>)
 80012c6:	9301      	str	r3, [sp, #4]
 80012c8:	2301      	movs	r3, #1
 80012ca:	9300      	str	r3, [sp, #0]
 80012cc:	2300      	movs	r3, #0
 80012ce:	2280      	movs	r2, #128	; 0x80
 80012d0:	492e      	ldr	r1, [pc, #184]	; (800138c <MX_FREERTOS_Init+0xec>)
 80012d2:	482f      	ldr	r0, [pc, #188]	; (8001390 <MX_FREERTOS_Init+0xf0>)
 80012d4:	f000 f990 	bl	80015f8 <vSchedulerPeriodicTaskCreate>
            pdMS_TO_TICKS(0),   //phase
            pdMS_TO_TICKS(160), //period
            pdMS_TO_TICKS(70),  //WCET
            pdMS_TO_TICKS(70)); //Deadline
    vSchedulerPeriodicTaskCreate(Check_Danger, "Check_Danger", configMINIMAL_STACK_SIZE, NULL, 4, &xHandle4,
 80012d8:	2350      	movs	r3, #80	; 0x50
 80012da:	9305      	str	r3, [sp, #20]
 80012dc:	230a      	movs	r3, #10
 80012de:	9304      	str	r3, [sp, #16]
 80012e0:	23a0      	movs	r3, #160	; 0xa0
 80012e2:	9303      	str	r3, [sp, #12]
 80012e4:	2346      	movs	r3, #70	; 0x46
 80012e6:	9302      	str	r3, [sp, #8]
 80012e8:	4b2a      	ldr	r3, [pc, #168]	; (8001394 <MX_FREERTOS_Init+0xf4>)
 80012ea:	9301      	str	r3, [sp, #4]
 80012ec:	2304      	movs	r3, #4
 80012ee:	9300      	str	r3, [sp, #0]
 80012f0:	2300      	movs	r3, #0
 80012f2:	2280      	movs	r2, #128	; 0x80
 80012f4:	4928      	ldr	r1, [pc, #160]	; (8001398 <MX_FREERTOS_Init+0xf8>)
 80012f6:	4829      	ldr	r0, [pc, #164]	; (800139c <MX_FREERTOS_Init+0xfc>)
 80012f8:	f000 f97e 	bl	80015f8 <vSchedulerPeriodicTaskCreate>
            pdMS_TO_TICKS(160), //period
            pdMS_TO_TICKS(10),  //WCET
            pdMS_TO_TICKS(80)); //Deadline

    /* Global struct initialization. */
    Global_Struct.Distance = 0;
 80012fc:	4b28      	ldr	r3, [pc, #160]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 80012fe:	f04f 0200 	mov.w	r2, #0
 8001302:	601a      	str	r2, [r3, #0]
    Global_Struct.Encoder_PastReading = 0;
 8001304:	4926      	ldr	r1, [pc, #152]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 8001306:	f04f 0200 	mov.w	r2, #0
 800130a:	f04f 0300 	mov.w	r3, #0
 800130e:	e9c1 2302 	strd	r2, r3, [r1, #8]
    Global_Struct.Encoder_Steps = 0;
 8001312:	4923      	ldr	r1, [pc, #140]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 8001314:	f04f 0200 	mov.w	r2, #0
 8001318:	f04f 0300 	mov.w	r3, #0
 800131c:	e9c1 2304 	strd	r2, r3, [r1, #16]
    Global_Struct.Battery_Sensor = 100;
 8001320:	4b1f      	ldr	r3, [pc, #124]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 8001322:	2264      	movs	r2, #100	; 0x64
 8001324:	831a      	strh	r2, [r3, #24]
    Global_Struct.PSX[0] = 0;
 8001326:	4b1e      	ldr	r3, [pc, #120]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 8001328:	2200      	movs	r2, #0
 800132a:	835a      	strh	r2, [r3, #26]
    Global_Struct.PSX[1] = 0;
 800132c:	4b1c      	ldr	r3, [pc, #112]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 800132e:	2200      	movs	r2, #0
 8001330:	839a      	strh	r2, [r3, #28]
    Global_Struct.PSX[2] = 0;
 8001332:	4b1b      	ldr	r3, [pc, #108]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 8001334:	2200      	movs	r2, #0
 8001336:	83da      	strh	r2, [r3, #30]
    Global_Struct.PSX[3] = 0;
 8001338:	4b19      	ldr	r3, [pc, #100]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 800133a:	2200      	movs	r2, #0
 800133c:	841a      	strh	r2, [r3, #32]
    Global_Struct.PSX[4] = 0;
 800133e:	4b18      	ldr	r3, [pc, #96]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 8001340:	2200      	movs	r2, #0
 8001342:	845a      	strh	r2, [r3, #34]	; 0x22
    Global_Struct.PSX[5] = 0;
 8001344:	4b16      	ldr	r3, [pc, #88]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 8001346:	2200      	movs	r2, #0
 8001348:	849a      	strh	r2, [r3, #36]	; 0x24
    Global_Struct.PSX[6] = 0;
 800134a:	4b15      	ldr	r3, [pc, #84]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 800134c:	2200      	movs	r2, #0
 800134e:	84da      	strh	r2, [r3, #38]	; 0x26
    Global_Struct.PSX[7] = 0;
 8001350:	4b13      	ldr	r3, [pc, #76]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 8001352:	2200      	movs	r2, #0
 8001354:	851a      	strh	r2, [r3, #40]	; 0x28
    Global_Struct.PSX[8] = 0;
 8001356:	4b12      	ldr	r3, [pc, #72]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 8001358:	2200      	movs	r2, #0
 800135a:	855a      	strh	r2, [r3, #42]	; 0x2a
    Global_Struct.Accelerometer = 0;
 800135c:	4b10      	ldr	r3, [pc, #64]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 800135e:	2200      	movs	r2, #0
 8001360:	859a      	strh	r2, [r3, #44]	; 0x2c
    Global_Struct.Temperature_Sensor = 0;
 8001362:	4b0f      	ldr	r3, [pc, #60]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 8001364:	2200      	movs	r2, #0
 8001366:	85da      	strh	r2, [r3, #46]	; 0x2e
    Global_Struct.Control_Var = 0;
 8001368:	4b0d      	ldr	r3, [pc, #52]	; (80013a0 <MX_FREERTOS_Init+0x100>)
 800136a:	2200      	movs	r2, #0
 800136c:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30

    /* Initializes the mutex */
    MutexHandle = osMutexNew(&Mutex_attributes);
 8001370:	480c      	ldr	r0, [pc, #48]	; (80013a4 <MX_FREERTOS_Init+0x104>)
 8001372:	f002 fdd7 	bl	8003f24 <osMutexNew>
 8001376:	4603      	mov	r3, r0
 8001378:	4a0b      	ldr	r2, [pc, #44]	; (80013a8 <MX_FREERTOS_Init+0x108>)
 800137a:	6013      	str	r3, [r2, #0]

}
 800137c:	bf00      	nop
 800137e:	46bd      	mov	sp, r7
 8001380:	bd80      	pop	{r7, pc}
 8001382:	bf00      	nop
 8001384:	0800a398 	.word	0x0800a398
 8001388:	200001f4 	.word	0x200001f4
 800138c:	0800a3c8 	.word	0x0800a3c8
 8001390:	08000eb5 	.word	0x08000eb5
 8001394:	200001f8 	.word	0x200001f8
 8001398:	0800a3d4 	.word	0x0800a3d4
 800139c:	08000f95 	.word	0x08000f95
 80013a0:	20000200 	.word	0x20000200
 80013a4:	0800a460 	.word	0x0800a460
 80013a8:	20000238 	.word	0x20000238

080013ac <__io_putchar>:
#else
#define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
#endif

PUTCHAR_PROTOTYPE
{
 80013ac:	b580      	push	{r7, lr}
 80013ae:	b082      	sub	sp, #8
 80013b0:	af00      	add	r7, sp, #0
 80013b2:	6078      	str	r0, [r7, #4]
  HAL_UART_Transmit(&huart2, (uint8_t *)&ch, 1, 0xFFFF);
 80013b4:	1d39      	adds	r1, r7, #4
 80013b6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80013ba:	2201      	movs	r2, #1
 80013bc:	4803      	ldr	r0, [pc, #12]	; (80013cc <__io_putchar+0x20>)
 80013be:	f002 f9ae 	bl	800371e <HAL_UART_Transmit>
  return ch;
 80013c2:	687b      	ldr	r3, [r7, #4]
}
 80013c4:	4618      	mov	r0, r3
 80013c6:	3708      	adds	r7, #8
 80013c8:	46bd      	mov	sp, r7
 80013ca:	bd80      	pop	{r7, pc}
 80013cc:	200003f8 	.word	0x200003f8

080013d0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80013d0:	b580      	push	{r7, lr}
 80013d2:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80013d4:	f000 ff80 	bl	80022d8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80013d8:	f000 f80a 	bl	80013f0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */
  /* Initialize all configured peripherals */
  /* USER CODE BEGIN 2 */
  MX_USART2_UART_Init();
 80013dc:	f000 fee0 	bl	80021a0 <MX_USART2_UART_Init>
  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();  /* Call init function for freertos objects (in freertos.c) */
 80013e0:	f002 fd56 	bl	8003e90 <osKernelInitialize>
  MX_FREERTOS_Init();
 80013e4:	f7ff ff5c 	bl	80012a0 <MX_FREERTOS_Init>

  /* Start scheduler */
  osKernelStart();
 80013e8:	f002 fd76 	bl	8003ed8 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 80013ec:	e7fe      	b.n	80013ec <main+0x1c>
	...

080013f0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80013f0:	b580      	push	{r7, lr}
 80013f2:	b094      	sub	sp, #80	; 0x50
 80013f4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013f6:	f107 0320 	add.w	r3, r7, #32
 80013fa:	2230      	movs	r2, #48	; 0x30
 80013fc:	2100      	movs	r1, #0
 80013fe:	4618      	mov	r0, r3
 8001400:	f006 ffe2 	bl	80083c8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001404:	f107 030c 	add.w	r3, r7, #12
 8001408:	2200      	movs	r2, #0
 800140a:	601a      	str	r2, [r3, #0]
 800140c:	605a      	str	r2, [r3, #4]
 800140e:	609a      	str	r2, [r3, #8]
 8001410:	60da      	str	r2, [r3, #12]
 8001412:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001414:	2300      	movs	r3, #0
 8001416:	60bb      	str	r3, [r7, #8]
 8001418:	4b23      	ldr	r3, [pc, #140]	; (80014a8 <SystemClock_Config+0xb8>)
 800141a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800141c:	4a22      	ldr	r2, [pc, #136]	; (80014a8 <SystemClock_Config+0xb8>)
 800141e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001422:	6413      	str	r3, [r2, #64]	; 0x40
 8001424:	4b20      	ldr	r3, [pc, #128]	; (80014a8 <SystemClock_Config+0xb8>)
 8001426:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001428:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800142c:	60bb      	str	r3, [r7, #8]
 800142e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 8001430:	2300      	movs	r3, #0
 8001432:	607b      	str	r3, [r7, #4]
 8001434:	4b1d      	ldr	r3, [pc, #116]	; (80014ac <SystemClock_Config+0xbc>)
 8001436:	681b      	ldr	r3, [r3, #0]
 8001438:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800143c:	4a1b      	ldr	r2, [pc, #108]	; (80014ac <SystemClock_Config+0xbc>)
 800143e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001442:	6013      	str	r3, [r2, #0]
 8001444:	4b19      	ldr	r3, [pc, #100]	; (80014ac <SystemClock_Config+0xbc>)
 8001446:	681b      	ldr	r3, [r3, #0]
 8001448:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800144c:	607b      	str	r3, [r7, #4]
 800144e:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001450:	2302      	movs	r3, #2
 8001452:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001454:	2301      	movs	r3, #1
 8001456:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001458:	2310      	movs	r3, #16
 800145a:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 800145c:	2300      	movs	r3, #0
 800145e:	63bb      	str	r3, [r7, #56]	; 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001460:	f107 0320 	add.w	r3, r7, #32
 8001464:	4618      	mov	r0, r3
 8001466:	f001 fa03 	bl	8002870 <HAL_RCC_OscConfig>
 800146a:	4603      	mov	r3, r0
 800146c:	2b00      	cmp	r3, #0
 800146e:	d001      	beq.n	8001474 <SystemClock_Config+0x84>
  {
    Error_Handler();
 8001470:	f000 f830 	bl	80014d4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001474:	230f      	movs	r3, #15
 8001476:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8001478:	2300      	movs	r3, #0
 800147a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800147c:	2300      	movs	r3, #0
 800147e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001480:	2300      	movs	r3, #0
 8001482:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001484:	2300      	movs	r3, #0
 8001486:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8001488:	f107 030c 	add.w	r3, r7, #12
 800148c:	2100      	movs	r1, #0
 800148e:	4618      	mov	r0, r3
 8001490:	f001 fc66 	bl	8002d60 <HAL_RCC_ClockConfig>
 8001494:	4603      	mov	r3, r0
 8001496:	2b00      	cmp	r3, #0
 8001498:	d001      	beq.n	800149e <SystemClock_Config+0xae>
  {
    Error_Handler();
 800149a:	f000 f81b 	bl	80014d4 <Error_Handler>
  }
}
 800149e:	bf00      	nop
 80014a0:	3750      	adds	r7, #80	; 0x50
 80014a2:	46bd      	mov	sp, r7
 80014a4:	bd80      	pop	{r7, pc}
 80014a6:	bf00      	nop
 80014a8:	40023800 	.word	0x40023800
 80014ac:	40007000 	.word	0x40007000

080014b0 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80014b0:	b580      	push	{r7, lr}
 80014b2:	b082      	sub	sp, #8
 80014b4:	af00      	add	r7, sp, #0
 80014b6:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM11) {
 80014b8:	687b      	ldr	r3, [r7, #4]
 80014ba:	681b      	ldr	r3, [r3, #0]
 80014bc:	4a04      	ldr	r2, [pc, #16]	; (80014d0 <HAL_TIM_PeriodElapsedCallback+0x20>)
 80014be:	4293      	cmp	r3, r2
 80014c0:	d101      	bne.n	80014c6 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 80014c2:	f000 ff2b 	bl	800231c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80014c6:	bf00      	nop
 80014c8:	3708      	adds	r7, #8
 80014ca:	46bd      	mov	sp, r7
 80014cc:	bd80      	pop	{r7, pc}
 80014ce:	bf00      	nop
 80014d0:	40014800 	.word	0x40014800

080014d4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80014d4:	b480      	push	{r7}
 80014d6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80014d8:	b672      	cpsid	i
}
 80014da:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80014dc:	e7fe      	b.n	80014dc <Error_Handler+0x8>
	...

080014e0 <prvInitTCBArray>:
		return -1;
	}

	/* Initializes xTCBArray. */
	static void prvInitTCBArray( void )
	{
 80014e0:	b480      	push	{r7}
 80014e2:	b083      	sub	sp, #12
 80014e4:	af00      	add	r7, sp, #0
	UBaseType_t uxIndex;
		for( uxIndex = 0; uxIndex < schedMAX_NUMBER_OF_PERIODIC_TASKS; uxIndex++)
 80014e6:	2300      	movs	r3, #0
 80014e8:	607b      	str	r3, [r7, #4]
 80014ea:	e00b      	b.n	8001504 <prvInitTCBArray+0x24>
		{
			xTCBArray[ uxIndex ].xInUse = pdFALSE;
 80014ec:	4a0a      	ldr	r2, [pc, #40]	; (8001518 <prvInitTCBArray+0x38>)
 80014ee:	687b      	ldr	r3, [r7, #4]
 80014f0:	2154      	movs	r1, #84	; 0x54
 80014f2:	fb01 f303 	mul.w	r3, r1, r3
 80014f6:	4413      	add	r3, r2
 80014f8:	333c      	adds	r3, #60	; 0x3c
 80014fa:	2200      	movs	r2, #0
 80014fc:	601a      	str	r2, [r3, #0]
		for( uxIndex = 0; uxIndex < schedMAX_NUMBER_OF_PERIODIC_TASKS; uxIndex++)
 80014fe:	687b      	ldr	r3, [r7, #4]
 8001500:	3301      	adds	r3, #1
 8001502:	607b      	str	r3, [r7, #4]
 8001504:	687b      	ldr	r3, [r7, #4]
 8001506:	2b02      	cmp	r3, #2
 8001508:	d9f0      	bls.n	80014ec <prvInitTCBArray+0xc>
		}
	}
 800150a:	bf00      	nop
 800150c:	bf00      	nop
 800150e:	370c      	adds	r7, #12
 8001510:	46bd      	mov	sp, r7
 8001512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001516:	4770      	bx	lr
 8001518:	20000240 	.word	0x20000240

0800151c <prvFindEmptyElementIndexTCB>:

	/* Find index for an empty entry in xTCBArray. Returns -1 if there is no empty entry. */
	static BaseType_t prvFindEmptyElementIndexTCB( void )
	{
 800151c:	b480      	push	{r7}
 800151e:	b083      	sub	sp, #12
 8001520:	af00      	add	r7, sp, #0
	BaseType_t xIndex;
		for( xIndex = 0; xIndex < schedMAX_NUMBER_OF_PERIODIC_TASKS; xIndex++ )
 8001522:	2300      	movs	r3, #0
 8001524:	607b      	str	r3, [r7, #4]
 8001526:	e00e      	b.n	8001546 <prvFindEmptyElementIndexTCB+0x2a>
		{
			if( pdFALSE == xTCBArray[ xIndex ].xInUse )
 8001528:	4a0c      	ldr	r2, [pc, #48]	; (800155c <prvFindEmptyElementIndexTCB+0x40>)
 800152a:	687b      	ldr	r3, [r7, #4]
 800152c:	2154      	movs	r1, #84	; 0x54
 800152e:	fb01 f303 	mul.w	r3, r1, r3
 8001532:	4413      	add	r3, r2
 8001534:	333c      	adds	r3, #60	; 0x3c
 8001536:	681b      	ldr	r3, [r3, #0]
 8001538:	2b00      	cmp	r3, #0
 800153a:	d101      	bne.n	8001540 <prvFindEmptyElementIndexTCB+0x24>
			{
				return xIndex;
 800153c:	687b      	ldr	r3, [r7, #4]
 800153e:	e007      	b.n	8001550 <prvFindEmptyElementIndexTCB+0x34>
		for( xIndex = 0; xIndex < schedMAX_NUMBER_OF_PERIODIC_TASKS; xIndex++ )
 8001540:	687b      	ldr	r3, [r7, #4]
 8001542:	3301      	adds	r3, #1
 8001544:	607b      	str	r3, [r7, #4]
 8001546:	687b      	ldr	r3, [r7, #4]
 8001548:	2b02      	cmp	r3, #2
 800154a:	dded      	ble.n	8001528 <prvFindEmptyElementIndexTCB+0xc>
			}
		}

		return -1;
 800154c:	f04f 33ff 	mov.w	r3, #4294967295
	}
 8001550:	4618      	mov	r0, r3
 8001552:	370c      	adds	r7, #12
 8001554:	46bd      	mov	sp, r7
 8001556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800155a:	4770      	bx	lr
 800155c:	20000240 	.word	0x20000240

08001560 <prvPeriodicTaskCode>:
#endif /* schedSCHEDULING_POLICY_EDF */

/* The whole function code that is executed by every periodic task.
 * This function wraps the task code specified by the user. */
static void prvPeriodicTaskCode( void *pvParameters )
{
 8001560:	b580      	push	{r7, lr}
 8001562:	b084      	sub	sp, #16
 8001564:	af00      	add	r7, sp, #0
 8001566:	6078      	str	r0, [r7, #4]
SchedTCB_t *pxThisTask = ( SchedTCB_t * ) pvTaskGetThreadLocalStoragePointer( xTaskGetCurrentTaskHandle(), schedTHREAD_LOCAL_STORAGE_POINTER_INDEX );
 8001568:	f004 fe68 	bl	800623c <xTaskGetCurrentTaskHandle>
 800156c:	4603      	mov	r3, r0
 800156e:	2100      	movs	r1, #0
 8001570:	4618      	mov	r0, r3
 8001572:	f004 fd7b 	bl	800606c <pvTaskGetThreadLocalStoragePointer>
 8001576:	60f8      	str	r0, [r7, #12]
	configASSERT( NULL != pxThisTask );
 8001578:	68fb      	ldr	r3, [r7, #12]
 800157a:	2b00      	cmp	r3, #0
 800157c:	d10a      	bne.n	8001594 <prvPeriodicTaskCode+0x34>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800157e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8001582:	f383 8811 	msr	BASEPRI, r3
 8001586:	f3bf 8f6f 	isb	sy
 800158a:	f3bf 8f4f 	dsb	sy
 800158e:	60bb      	str	r3, [r7, #8]
		"	msr basepri, %0											\n" \
		"	isb														\n" \
		"	dsb														\n" \
		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
	);
}
 8001590:	bf00      	nop
 8001592:	e7fe      	b.n	8001592 <prvPeriodicTaskCode+0x32>

	if( 0 != pxThisTask->xReleaseTime )
 8001594:	68fb      	ldr	r3, [r7, #12]
 8001596:	699b      	ldr	r3, [r3, #24]
 8001598:	2b00      	cmp	r3, #0
 800159a:	d008      	beq.n	80015ae <prvPeriodicTaskCode+0x4e>
	{
		vTaskDelayUntil( &pxThisTask->xLastWakeTime, pxThisTask->xReleaseTime );
 800159c:	68fb      	ldr	r3, [r7, #12]
 800159e:	f103 0228 	add.w	r2, r3, #40	; 0x28
 80015a2:	68fb      	ldr	r3, [r7, #12]
 80015a4:	699b      	ldr	r3, [r3, #24]
 80015a6:	4619      	mov	r1, r3
 80015a8:	4610      	mov	r0, r2
 80015aa:	f003 ffeb 	bl	8005584 <vTaskDelayUntil>
	}

	#if( schedUSE_TIMING_ERROR_DETECTION_DEADLINE == 1 )
		pxThisTask->xExecutedOnce = pdTRUE;
 80015ae:	68fb      	ldr	r3, [r7, #12]
 80015b0:	2201      	movs	r2, #1
 80015b2:	641a      	str	r2, [r3, #64]	; 0x40
	#endif /* schedUSE_TIMING_ERROR_DETECTION_DEADLINE */
	if( 0 == pxThisTask->xReleaseTime )
 80015b4:	68fb      	ldr	r3, [r7, #12]
 80015b6:	699b      	ldr	r3, [r3, #24]
 80015b8:	2b00      	cmp	r3, #0
 80015ba:	d103      	bne.n	80015c4 <prvPeriodicTaskCode+0x64>
	{
		pxThisTask->xLastWakeTime = xSystemStartTime;
 80015bc:	4b0d      	ldr	r3, [pc, #52]	; (80015f4 <prvPeriodicTaskCode+0x94>)
 80015be:	681a      	ldr	r2, [r3, #0]
 80015c0:	68fb      	ldr	r3, [r7, #12]
 80015c2:	629a      	str	r2, [r3, #40]	; 0x28
			#if( schedEDF_NAIVE == 1 )
				/* Wake up the scheduler task to update priorities of all periodic tasks. */
				prvWakeScheduler();
			#endif /* schedEDF_NAIVE */
		#endif /* schedSCHEDULING_POLICY_EDF */
		pxThisTask->xWorkIsDone = pdFALSE;
 80015c4:	68fb      	ldr	r3, [r7, #12]
 80015c6:	2200      	movs	r2, #0
 80015c8:	635a      	str	r2, [r3, #52]	; 0x34
		printf( "tickcount %d Task %s Abs deadline %d lastWakeTime %d prio %d Handle %x\r\n", xTaskGetTickCount(), pxThisTask->pcName, pxThisTask->xAbsoluteDeadline, pxThisTask->xLastWakeTime, uxTaskPriorityGet( NULL ), *pxThisTask->pxTaskHandle );
		taskEXIT_CRITICAL();
		*/

		/* Execute the task function specified by the user. */
		pxThisTask->pvTaskCode( pvParameters );
 80015ca:	68fb      	ldr	r3, [r7, #12]
 80015cc:	681b      	ldr	r3, [r3, #0]
 80015ce:	6878      	ldr	r0, [r7, #4]
 80015d0:	4798      	blx	r3

		pxThisTask->xWorkIsDone = pdTRUE;
 80015d2:	68fb      	ldr	r3, [r7, #12]
 80015d4:	2201      	movs	r2, #1
 80015d6:	635a      	str	r2, [r3, #52]	; 0x34
		taskENTER_CRITICAL();
		printf( "execution time %d Task %s\r\n", pxThisTask->xExecTime, pxThisTask->pcName );
		taskEXIT_CRITICAL();
		*/

		pxThisTask->xExecTime = 0;
 80015d8:	68fb      	ldr	r3, [r7, #12]
 80015da:	2200      	movs	r2, #0
 80015dc:	631a      	str	r2, [r3, #48]	; 0x30
				/* Wake up the scheduler task to update priorities of all periodic tasks. */
				prvWakeScheduler();
			#endif /* schedEDF_NAIVE */
		#endif /* schedSCHEDULING_POLICY_EDF */

		vTaskDelayUntil( &pxThisTask->xLastWakeTime, pxThisTask->xPeriod );
 80015de:	68fb      	ldr	r3, [r7, #12]
 80015e0:	f103 0228 	add.w	r2, r3, #40	; 0x28
 80015e4:	68fb      	ldr	r3, [r7, #12]
 80015e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80015e8:	4619      	mov	r1, r3
 80015ea:	4610      	mov	r0, r2
 80015ec:	f003 ffca 	bl	8005584 <vTaskDelayUntil>
		pxThisTask->xWorkIsDone = pdFALSE;
 80015f0:	e7e8      	b.n	80015c4 <prvPeriodicTaskCode+0x64>
 80015f2:	bf00      	nop
 80015f4:	2000023c 	.word	0x2000023c

080015f8 <vSchedulerPeriodicTaskCreate>:
}

/* Creates a periodic task. */
void vSchedulerPeriodicTaskCreate( TaskFunction_t pvTaskCode, const char *pcName, UBaseType_t uxStackDepth, void *pvParameters, UBaseType_t uxPriority,
		TaskHandle_t *pxCreatedTask, TickType_t xPhaseTick, TickType_t xPeriodTick, TickType_t xMaxExecTimeTick, TickType_t xDeadlineTick )
{
 80015f8:	b580      	push	{r7, lr}
 80015fa:	b09e      	sub	sp, #120	; 0x78
 80015fc:	af00      	add	r7, sp, #0
 80015fe:	60f8      	str	r0, [r7, #12]
 8001600:	60b9      	str	r1, [r7, #8]
 8001602:	607a      	str	r2, [r7, #4]
 8001604:	603b      	str	r3, [r7, #0]
	taskENTER_CRITICAL();
 8001606:	f005 fd65 	bl	80070d4 <vPortEnterCritical>
SchedTCB_t *pxNewTCB;
	#if( schedUSE_TCB_ARRAY == 1 )
		BaseType_t xIndex = prvFindEmptyElementIndexTCB();
 800160a:	f7ff ff87 	bl	800151c <prvFindEmptyElementIndexTCB>
 800160e:	6778      	str	r0, [r7, #116]	; 0x74
		configASSERT( xTaskCounter < schedMAX_NUMBER_OF_PERIODIC_TASKS );
 8001610:	4b37      	ldr	r3, [pc, #220]	; (80016f0 <vSchedulerPeriodicTaskCreate+0xf8>)
 8001612:	681b      	ldr	r3, [r3, #0]
 8001614:	2b02      	cmp	r3, #2
 8001616:	dd0a      	ble.n	800162e <vSchedulerPeriodicTaskCreate+0x36>
	__asm volatile
 8001618:	f04f 0350 	mov.w	r3, #80	; 0x50
 800161c:	f383 8811 	msr	BASEPRI, r3
 8001620:	f3bf 8f6f 	isb	sy
 8001624:	f3bf 8f4f 	dsb	sy
 8001628:	66fb      	str	r3, [r7, #108]	; 0x6c
}
 800162a:	bf00      	nop
 800162c:	e7fe      	b.n	800162c <vSchedulerPeriodicTaskCreate+0x34>
		configASSERT( xIndex != -1 );
 800162e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8001630:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001634:	d10a      	bne.n	800164c <vSchedulerPeriodicTaskCreate+0x54>
	__asm volatile
 8001636:	f04f 0350 	mov.w	r3, #80	; 0x50
 800163a:	f383 8811 	msr	BASEPRI, r3
 800163e:	f3bf 8f6f 	isb	sy
 8001642:	f3bf 8f4f 	dsb	sy
 8001646:	66bb      	str	r3, [r7, #104]	; 0x68
}
 8001648:	bf00      	nop
 800164a:	e7fe      	b.n	800164a <vSchedulerPeriodicTaskCreate+0x52>
		pxNewTCB = &xTCBArray[ xIndex ];
 800164c:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800164e:	2254      	movs	r2, #84	; 0x54
 8001650:	fb02 f303 	mul.w	r3, r2, r3
 8001654:	4a27      	ldr	r2, [pc, #156]	; (80016f4 <vSchedulerPeriodicTaskCreate+0xfc>)
 8001656:	4413      	add	r3, r2
 8001658:	673b      	str	r3, [r7, #112]	; 0x70
		pxNewTCB = pvPortMalloc( sizeof( SchedTCB_t ) );
	#endif /* schedUSE_TCB_ARRAY */


	/* Intialize item. */
	*pxNewTCB = ( SchedTCB_t ) { .pvTaskCode = pvTaskCode, .pcName = pcName, .uxStackDepth = uxStackDepth, .pvParameters = pvParameters,
 800165a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800165c:	4618      	mov	r0, r3
 800165e:	2354      	movs	r3, #84	; 0x54
 8001660:	461a      	mov	r2, r3
 8001662:	2100      	movs	r1, #0
 8001664:	f006 feb0 	bl	80083c8 <memset>
 8001668:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800166a:	68fa      	ldr	r2, [r7, #12]
 800166c:	601a      	str	r2, [r3, #0]
 800166e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8001670:	68ba      	ldr	r2, [r7, #8]
 8001672:	605a      	str	r2, [r3, #4]
 8001674:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8001676:	687a      	ldr	r2, [r7, #4]
 8001678:	609a      	str	r2, [r3, #8]
 800167a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800167c:	683a      	ldr	r2, [r7, #0]
 800167e:	60da      	str	r2, [r3, #12]
 8001680:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8001682:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8001686:	611a      	str	r2, [r3, #16]
 8001688:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800168a:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 800168e:	615a      	str	r2, [r3, #20]
 8001690:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8001692:	f8d7 2088 	ldr.w	r2, [r7, #136]	; 0x88
 8001696:	619a      	str	r2, [r3, #24]
 8001698:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800169a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800169e:	61da      	str	r2, [r3, #28]
 80016a0:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80016a2:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 80016a6:	625a      	str	r2, [r3, #36]	; 0x24
 80016a8:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80016aa:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
 80016ae:	62da      	str	r2, [r3, #44]	; 0x2c
 80016b0:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80016b2:	2201      	movs	r2, #1
 80016b4:	635a      	str	r2, [r3, #52]	; 0x34
		.uxPriority = uxPriority, .pxTaskHandle = pxCreatedTask, .xReleaseTime = xPhaseTick, .xPeriod = xPeriodTick, .xMaxExecTime = xMaxExecTimeTick,
		.xRelativeDeadline = xDeadlineTick, .xWorkIsDone = pdTRUE, .xExecTime = 0 };
	#if( schedUSE_TCB_ARRAY == 1 )
		pxNewTCB->xInUse = pdTRUE;
 80016b6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80016b8:	2201      	movs	r2, #1
 80016ba:	63da      	str	r2, [r3, #60]	; 0x3c
	#endif /* schedUSE_TCB_ARRAY */
	
	#if( schedSCHEDULING_POLICY == schedSCHEDULING_POLICY_RMS || schedSCHEDULING_POLICY == schedSCHEDULING_POLICY_DMS )
		pxNewTCB->xPriorityIsSet = pdFALSE;
 80016bc:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80016be:	2200      	movs	r2, #0
 80016c0:	639a      	str	r2, [r3, #56]	; 0x38
	#elif( schedSCHEDULING_POLICY == schedSCHEDULING_POLICY_EDF )
		pxNewTCB->xAbsoluteDeadline = pxNewTCB->xRelativeDeadline + pxNewTCB->xReleaseTime + xSystemStartTime;
		pxNewTCB->uxPriority = -1;
	#endif /* schedSCHEDULING_POLICY */
	#if( schedUSE_TIMING_ERROR_DETECTION_DEADLINE == 1 )
		pxNewTCB->xExecutedOnce = pdFALSE;
 80016c2:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80016c4:	2200      	movs	r2, #0
 80016c6:	641a      	str	r2, [r3, #64]	; 0x40
	#endif /* schedUSE_TIMING_ERROR_DETECTION_DEADLINE */
	#if( schedUSE_TIMING_ERROR_DETECTION_EXECUTION_TIME == 1 )
		pxNewTCB->xSuspended = pdFALSE;
 80016c8:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80016ca:	2200      	movs	r2, #0
 80016cc:	649a      	str	r2, [r3, #72]	; 0x48
		pxNewTCB->xMaxExecTimeExceeded = pdFALSE;
 80016ce:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80016d0:	2200      	movs	r2, #0
 80016d2:	64da      	str	r2, [r3, #76]	; 0x4c
	#endif /* schedUSE_TIMING_ERROR_DETECTION_EXECUTION_TIME */
	#if( schedUSE_POLLING_SERVER == 1)
		pxNewTCB->xIsPeriodicServer = pdFALSE;
 80016d4:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80016d6:	2200      	movs	r2, #0
 80016d8:	651a      	str	r2, [r3, #80]	; 0x50
	#endif /* schedUSE_POLLING_SERVER */

	#if( schedUSE_TCB_ARRAY == 1 )
		xTaskCounter++;
 80016da:	4b05      	ldr	r3, [pc, #20]	; (80016f0 <vSchedulerPeriodicTaskCreate+0xf8>)
 80016dc:	681b      	ldr	r3, [r3, #0]
 80016de:	3301      	adds	r3, #1
 80016e0:	4a03      	ldr	r2, [pc, #12]	; (80016f0 <vSchedulerPeriodicTaskCreate+0xf8>)
 80016e2:	6013      	str	r3, [r2, #0]
		#if( schedEDF_EFFICIENT == 1 )
			pxNewTCB->uxPriority = schedPRIORITY_NOT_RUNNING;
		#endif /* schedEDF_EFFICIENT */
		prvAddTCBToList( pxNewTCB );
	#endif /* schedUSE_TCB_SORTED_LIST */
	taskEXIT_CRITICAL();
 80016e4:	f005 fd26 	bl	8007134 <vPortExitCritical>
}
 80016e8:	bf00      	nop
 80016ea:	3778      	adds	r7, #120	; 0x78
 80016ec:	46bd      	mov	sp, r7
 80016ee:	bd80      	pop	{r7, pc}
 80016f0:	2000033c 	.word	0x2000033c
 80016f4:	20000240 	.word	0x20000240

080016f8 <prvCreateAllTasks>:
	vTaskDelete( xTaskHandle );
}

/* Creates all periodic tasks stored in TCB array, or TCB list. */
static void prvCreateAllTasks( void )
{
 80016f8:	b590      	push	{r4, r7, lr}
 80016fa:	b087      	sub	sp, #28
 80016fc:	af02      	add	r7, sp, #8
SchedTCB_t *pxTCB;

	#if( schedUSE_TCB_ARRAY == 1 )
		BaseType_t xIndex;
		for( xIndex = 0; xIndex < xTaskCounter; xIndex++ )
 80016fe:	2300      	movs	r3, #0
 8001700:	60fb      	str	r3, [r7, #12]
 8001702:	e03c      	b.n	800177e <prvCreateAllTasks+0x86>
		{
			configASSERT( pdTRUE == xTCBArray[ xIndex ].xInUse );
 8001704:	4a23      	ldr	r2, [pc, #140]	; (8001794 <prvCreateAllTasks+0x9c>)
 8001706:	68fb      	ldr	r3, [r7, #12]
 8001708:	2154      	movs	r1, #84	; 0x54
 800170a:	fb01 f303 	mul.w	r3, r1, r3
 800170e:	4413      	add	r3, r2
 8001710:	333c      	adds	r3, #60	; 0x3c
 8001712:	681b      	ldr	r3, [r3, #0]
 8001714:	2b01      	cmp	r3, #1
 8001716:	d00a      	beq.n	800172e <prvCreateAllTasks+0x36>
	__asm volatile
 8001718:	f04f 0350 	mov.w	r3, #80	; 0x50
 800171c:	f383 8811 	msr	BASEPRI, r3
 8001720:	f3bf 8f6f 	isb	sy
 8001724:	f3bf 8f4f 	dsb	sy
 8001728:	603b      	str	r3, [r7, #0]
}
 800172a:	bf00      	nop
 800172c:	e7fe      	b.n	800172c <prvCreateAllTasks+0x34>
			pxTCB = &xTCBArray[ xIndex ];
 800172e:	68fb      	ldr	r3, [r7, #12]
 8001730:	2254      	movs	r2, #84	; 0x54
 8001732:	fb02 f303 	mul.w	r3, r2, r3
 8001736:	4a17      	ldr	r2, [pc, #92]	; (8001794 <prvCreateAllTasks+0x9c>)
 8001738:	4413      	add	r3, r2
 800173a:	60bb      	str	r3, [r7, #8]

			BaseType_t xReturnValue = xTaskCreate( prvPeriodicTaskCode, pxTCB->pcName, pxTCB->uxStackDepth, pxTCB->pvParameters, pxTCB->uxPriority, pxTCB->pxTaskHandle );
 800173c:	68bb      	ldr	r3, [r7, #8]
 800173e:	6859      	ldr	r1, [r3, #4]
 8001740:	68bb      	ldr	r3, [r7, #8]
 8001742:	689b      	ldr	r3, [r3, #8]
 8001744:	b298      	uxth	r0, r3
 8001746:	68bb      	ldr	r3, [r7, #8]
 8001748:	68dc      	ldr	r4, [r3, #12]
 800174a:	68bb      	ldr	r3, [r7, #8]
 800174c:	691b      	ldr	r3, [r3, #16]
 800174e:	68ba      	ldr	r2, [r7, #8]
 8001750:	6952      	ldr	r2, [r2, #20]
 8001752:	9201      	str	r2, [sp, #4]
 8001754:	9300      	str	r3, [sp, #0]
 8001756:	4623      	mov	r3, r4
 8001758:	4602      	mov	r2, r0
 800175a:	480f      	ldr	r0, [pc, #60]	; (8001798 <prvCreateAllTasks+0xa0>)
 800175c:	f003 fd35 	bl	80051ca <xTaskCreate>
 8001760:	6078      	str	r0, [r7, #4]

			if( pdPASS == xReturnValue )
 8001762:	687b      	ldr	r3, [r7, #4]
 8001764:	2b01      	cmp	r3, #1
 8001766:	d107      	bne.n	8001778 <prvCreateAllTasks+0x80>
			{
				vTaskSetThreadLocalStoragePointer( *pxTCB->pxTaskHandle, schedTHREAD_LOCAL_STORAGE_POINTER_INDEX, pxTCB );
 8001768:	68bb      	ldr	r3, [r7, #8]
 800176a:	695b      	ldr	r3, [r3, #20]
 800176c:	681b      	ldr	r3, [r3, #0]
 800176e:	68ba      	ldr	r2, [r7, #8]
 8001770:	2100      	movs	r1, #0
 8001772:	4618      	mov	r0, r3
 8001774:	f004 fc4c 	bl	8006010 <vTaskSetThreadLocalStoragePointer>
		for( xIndex = 0; xIndex < xTaskCounter; xIndex++ )
 8001778:	68fb      	ldr	r3, [r7, #12]
 800177a:	3301      	adds	r3, #1
 800177c:	60fb      	str	r3, [r7, #12]
 800177e:	4b07      	ldr	r3, [pc, #28]	; (800179c <prvCreateAllTasks+0xa4>)
 8001780:	681b      	ldr	r3, [r3, #0]
 8001782:	68fa      	ldr	r2, [r7, #12]
 8001784:	429a      	cmp	r2, r3
 8001786:	dbbd      	blt.n	8001704 <prvCreateAllTasks+0xc>
			}
			vTaskSetThreadLocalStoragePointer( *pxTCB->pxTaskHandle, schedTHREAD_LOCAL_STORAGE_POINTER_INDEX, pxTCB );
			pxTCBListItem = listGET_NEXT( pxTCBListItem );
		}	
	#endif /* schedUSE_TCB_ARRAY */
}
 8001788:	bf00      	nop
 800178a:	bf00      	nop
 800178c:	3714      	adds	r7, #20
 800178e:	46bd      	mov	sp, r7
 8001790:	bd90      	pop	{r4, r7, pc}
 8001792:	bf00      	nop
 8001794:	20000240 	.word	0x20000240
 8001798:	08001561 	.word	0x08001561
 800179c:	2000033c 	.word	0x2000033c

080017a0 <prvSetFixedPriorities>:

#if( schedSCHEDULING_POLICY == schedSCHEDULING_POLICY_RMS || schedSCHEDULING_POLICY == schedSCHEDULING_POLICY_DMS )
	/* Initiazes fixed priorities of all periodic tasks with respect to RMS or
	 * DMS policy. */
static void prvSetFixedPriorities( void )
{
 80017a0:	b480      	push	{r7}
 80017a2:	b08b      	sub	sp, #44	; 0x2c
 80017a4:	af00      	add	r7, sp, #0
BaseType_t xIter, xIndex;
TickType_t xShortest, xPreviousShortest=0;
 80017a6:	2300      	movs	r3, #0
 80017a8:	61bb      	str	r3, [r7, #24]
SchedTCB_t *pxShortestTaskPointer, *pxTCB;

	#if( schedUSE_SCHEDULER_TASK == 1 )
		BaseType_t xHighestPriority = schedSCHEDULER_PRIORITY;
 80017aa:	2337      	movs	r3, #55	; 0x37
 80017ac:	613b      	str	r3, [r7, #16]
	#else
		BaseType_t xHighestPriority = configMAX_PRIORITIES;
	#endif /* schedUSE_SCHEDULER_TASK */

	for( xIter = 0; xIter < xTaskCounter; xIter++ )
 80017ae:	2300      	movs	r3, #0
 80017b0:	627b      	str	r3, [r7, #36]	; 0x24
 80017b2:	e054      	b.n	800185e <prvSetFixedPriorities+0xbe>
	{
		xShortest = portMAX_DELAY;
 80017b4:	f04f 33ff 	mov.w	r3, #4294967295
 80017b8:	61fb      	str	r3, [r7, #28]

		/* search for shortest period/deadline */
		for( xIndex = 0; xIndex < xTaskCounter; xIndex++ )
 80017ba:	2300      	movs	r3, #0
 80017bc:	623b      	str	r3, [r7, #32]
 80017be:	e028      	b.n	8001812 <prvSetFixedPriorities+0x72>
		{
			pxTCB = &xTCBArray[ xIndex ];
 80017c0:	6a3b      	ldr	r3, [r7, #32]
 80017c2:	2254      	movs	r2, #84	; 0x54
 80017c4:	fb02 f303 	mul.w	r3, r2, r3
 80017c8:	4a2b      	ldr	r2, [pc, #172]	; (8001878 <prvSetFixedPriorities+0xd8>)
 80017ca:	4413      	add	r3, r2
 80017cc:	60fb      	str	r3, [r7, #12]
			configASSERT( pdTRUE == pxTCB->xInUse );
 80017ce:	68fb      	ldr	r3, [r7, #12]
 80017d0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80017d2:	2b01      	cmp	r3, #1
 80017d4:	d00a      	beq.n	80017ec <prvSetFixedPriorities+0x4c>
	__asm volatile
 80017d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80017da:	f383 8811 	msr	BASEPRI, r3
 80017de:	f3bf 8f6f 	isb	sy
 80017e2:	f3bf 8f4f 	dsb	sy
 80017e6:	60bb      	str	r3, [r7, #8]
}
 80017e8:	bf00      	nop
 80017ea:	e7fe      	b.n	80017ea <prvSetFixedPriorities+0x4a>
			if(pdTRUE == pxTCB->xPriorityIsSet)
 80017ec:	68fb      	ldr	r3, [r7, #12]
 80017ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80017f0:	2b01      	cmp	r3, #1
 80017f2:	d00a      	beq.n	800180a <prvSetFixedPriorities+0x6a>
			{
				continue;
			}

			#if( schedSCHEDULING_POLICY == schedSCHEDULING_POLICY_RMS )
				if( pxTCB->xPeriod <= xShortest )
 80017f4:	68fb      	ldr	r3, [r7, #12]
 80017f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80017f8:	69fa      	ldr	r2, [r7, #28]
 80017fa:	429a      	cmp	r2, r3
 80017fc:	d306      	bcc.n	800180c <prvSetFixedPriorities+0x6c>
				{
					xShortest = pxTCB->xPeriod;
 80017fe:	68fb      	ldr	r3, [r7, #12]
 8001800:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001802:	61fb      	str	r3, [r7, #28]
					pxShortestTaskPointer = pxTCB;
 8001804:	68fb      	ldr	r3, [r7, #12]
 8001806:	617b      	str	r3, [r7, #20]
 8001808:	e000      	b.n	800180c <prvSetFixedPriorities+0x6c>
				continue;
 800180a:	bf00      	nop
		for( xIndex = 0; xIndex < xTaskCounter; xIndex++ )
 800180c:	6a3b      	ldr	r3, [r7, #32]
 800180e:	3301      	adds	r3, #1
 8001810:	623b      	str	r3, [r7, #32]
 8001812:	4b1a      	ldr	r3, [pc, #104]	; (800187c <prvSetFixedPriorities+0xdc>)
 8001814:	681b      	ldr	r3, [r3, #0]
 8001816:	6a3a      	ldr	r2, [r7, #32]
 8001818:	429a      	cmp	r2, r3
 800181a:	dbd1      	blt.n	80017c0 <prvSetFixedPriorities+0x20>
					xShortest = pxTCB->xRelativeDeadline;
					pxShortestTaskPointer = pxTCB;
				}
			#endif /* schedSCHEDULING_POLICY */
		}
		configASSERT( -1 <= xHighestPriority );
 800181c:	693b      	ldr	r3, [r7, #16]
 800181e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001822:	da0a      	bge.n	800183a <prvSetFixedPriorities+0x9a>
	__asm volatile
 8001824:	f04f 0350 	mov.w	r3, #80	; 0x50
 8001828:	f383 8811 	msr	BASEPRI, r3
 800182c:	f3bf 8f6f 	isb	sy
 8001830:	f3bf 8f4f 	dsb	sy
 8001834:	607b      	str	r3, [r7, #4]
}
 8001836:	bf00      	nop
 8001838:	e7fe      	b.n	8001838 <prvSetFixedPriorities+0x98>
		if( xPreviousShortest != xShortest )
 800183a:	69ba      	ldr	r2, [r7, #24]
 800183c:	69fb      	ldr	r3, [r7, #28]
 800183e:	429a      	cmp	r2, r3
 8001840:	d002      	beq.n	8001848 <prvSetFixedPriorities+0xa8>
		{
			xHighestPriority--;
 8001842:	693b      	ldr	r3, [r7, #16]
 8001844:	3b01      	subs	r3, #1
 8001846:	613b      	str	r3, [r7, #16]
		}
		/* set highest priority to task with xShortest period (the highest priority is configMAX_PRIORITIES-1) */
		pxShortestTaskPointer->uxPriority = xHighestPriority;
 8001848:	693a      	ldr	r2, [r7, #16]
 800184a:	697b      	ldr	r3, [r7, #20]
 800184c:	611a      	str	r2, [r3, #16]
		pxShortestTaskPointer->xPriorityIsSet = pdTRUE;
 800184e:	697b      	ldr	r3, [r7, #20]
 8001850:	2201      	movs	r2, #1
 8001852:	639a      	str	r2, [r3, #56]	; 0x38

		xPreviousShortest = xShortest;
 8001854:	69fb      	ldr	r3, [r7, #28]
 8001856:	61bb      	str	r3, [r7, #24]
	for( xIter = 0; xIter < xTaskCounter; xIter++ )
 8001858:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800185a:	3301      	adds	r3, #1
 800185c:	627b      	str	r3, [r7, #36]	; 0x24
 800185e:	4b07      	ldr	r3, [pc, #28]	; (800187c <prvSetFixedPriorities+0xdc>)
 8001860:	681b      	ldr	r3, [r3, #0]
 8001862:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001864:	429a      	cmp	r2, r3
 8001866:	dba5      	blt.n	80017b4 <prvSetFixedPriorities+0x14>
	}
}
 8001868:	bf00      	nop
 800186a:	bf00      	nop
 800186c:	372c      	adds	r7, #44	; 0x2c
 800186e:	46bd      	mov	sp, r7
 8001870:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001874:	4770      	bx	lr
 8001876:	bf00      	nop
 8001878:	20000240 	.word	0x20000240
 800187c:	2000033c 	.word	0x2000033c

08001880 <prvPeriodicTaskRecreate>:

#if( schedUSE_TIMING_ERROR_DETECTION_DEADLINE == 1 )

	/* Recreates a deleted task that still has its information left in the task array (or list). */
	static void prvPeriodicTaskRecreate( SchedTCB_t *pxTCB )
	{
 8001880:	b590      	push	{r4, r7, lr}
 8001882:	b087      	sub	sp, #28
 8001884:	af02      	add	r7, sp, #8
 8001886:	6078      	str	r0, [r7, #4]
	BaseType_t xReturnValue = xTaskCreate( prvPeriodicTaskCode, pxTCB->pcName, pxTCB->uxStackDepth, pxTCB->pvParameters, pxTCB->uxPriority, pxTCB->pxTaskHandle );
 8001888:	687b      	ldr	r3, [r7, #4]
 800188a:	6859      	ldr	r1, [r3, #4]
 800188c:	687b      	ldr	r3, [r7, #4]
 800188e:	689b      	ldr	r3, [r3, #8]
 8001890:	b298      	uxth	r0, r3
 8001892:	687b      	ldr	r3, [r7, #4]
 8001894:	68dc      	ldr	r4, [r3, #12]
 8001896:	687b      	ldr	r3, [r7, #4]
 8001898:	691b      	ldr	r3, [r3, #16]
 800189a:	687a      	ldr	r2, [r7, #4]
 800189c:	6952      	ldr	r2, [r2, #20]
 800189e:	9201      	str	r2, [sp, #4]
 80018a0:	9300      	str	r3, [sp, #0]
 80018a2:	4623      	mov	r3, r4
 80018a4:	4602      	mov	r2, r0
 80018a6:	480e      	ldr	r0, [pc, #56]	; (80018e0 <prvPeriodicTaskRecreate+0x60>)
 80018a8:	f003 fc8f 	bl	80051ca <xTaskCreate>
 80018ac:	60f8      	str	r0, [r7, #12]
		if( pdPASS == xReturnValue )
 80018ae:	68fb      	ldr	r3, [r7, #12]
 80018b0:	2b01      	cmp	r3, #1
 80018b2:	d110      	bne.n	80018d6 <prvPeriodicTaskRecreate+0x56>
		{
			vTaskSetThreadLocalStoragePointer( *pxTCB->pxTaskHandle, schedTHREAD_LOCAL_STORAGE_POINTER_INDEX, ( SchedTCB_t * ) pxTCB );
 80018b4:	687b      	ldr	r3, [r7, #4]
 80018b6:	695b      	ldr	r3, [r3, #20]
 80018b8:	681b      	ldr	r3, [r3, #0]
 80018ba:	687a      	ldr	r2, [r7, #4]
 80018bc:	2100      	movs	r1, #0
 80018be:	4618      	mov	r0, r3
 80018c0:	f004 fba6 	bl	8006010 <vTaskSetThreadLocalStoragePointer>

			/* This must be set to false so that the task does not miss the deadline immediately when it is created. */
			pxTCB->xExecutedOnce = pdFALSE;
 80018c4:	687b      	ldr	r3, [r7, #4]
 80018c6:	2200      	movs	r2, #0
 80018c8:	641a      	str	r2, [r3, #64]	; 0x40
			#if( schedUSE_TIMING_ERROR_DETECTION_EXECUTION_TIME == 1 )
				pxTCB->xSuspended = pdFALSE;
 80018ca:	687b      	ldr	r3, [r7, #4]
 80018cc:	2200      	movs	r2, #0
 80018ce:	649a      	str	r2, [r3, #72]	; 0x48
				pxTCB->xMaxExecTimeExceeded = pdFALSE;
 80018d0:	687b      	ldr	r3, [r7, #4]
 80018d2:	2200      	movs	r2, #0
 80018d4:	64da      	str	r2, [r3, #76]	; 0x4c
		}
		else
		{
			/* if task creation failed */
		}
	}
 80018d6:	bf00      	nop
 80018d8:	3714      	adds	r7, #20
 80018da:	46bd      	mov	sp, r7
 80018dc:	bd90      	pop	{r4, r7, pc}
 80018de:	bf00      	nop
 80018e0:	08001561 	.word	0x08001561

080018e4 <prvDeadlineMissedHook>:

	/* Called when a deadline of a periodic task is missed.
	 * Deletes the periodic task that has missed it's deadline and recreate it.
	 * The periodic task is released during next period. */
	static void prvDeadlineMissedHook( SchedTCB_t *pxTCB, TickType_t xTickCount )
	{
 80018e4:	b580      	push	{r7, lr}
 80018e6:	b082      	sub	sp, #8
 80018e8:	af00      	add	r7, sp, #0
 80018ea:	6078      	str	r0, [r7, #4]
 80018ec:	6039      	str	r1, [r7, #0]
		printf( "\r\ndeadline missed! %s tick %d\r\n", pxTCB->pcName, xTickCount );
 80018ee:	687b      	ldr	r3, [r7, #4]
 80018f0:	685b      	ldr	r3, [r3, #4]
 80018f2:	683a      	ldr	r2, [r7, #0]
 80018f4:	4619      	mov	r1, r3
 80018f6:	4812      	ldr	r0, [pc, #72]	; (8001940 <prvDeadlineMissedHook+0x5c>)
 80018f8:	f006 fc20 	bl	800813c <iprintf>

		/* Delete the pxTask and recreate it. */
		vTaskDelete( *pxTCB->pxTaskHandle );
 80018fc:	687b      	ldr	r3, [r7, #4]
 80018fe:	695b      	ldr	r3, [r3, #20]
 8001900:	681b      	ldr	r3, [r3, #0]
 8001902:	4618      	mov	r0, r3
 8001904:	f003 fdcc 	bl	80054a0 <vTaskDelete>
		pxTCB->xExecTime = 0;
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	2200      	movs	r2, #0
 800190c:	631a      	str	r2, [r3, #48]	; 0x30
		prvPeriodicTaskRecreate( pxTCB );
 800190e:	6878      	ldr	r0, [r7, #4]
 8001910:	f7ff ffb6 	bl	8001880 <prvPeriodicTaskRecreate>

		pxTCB->xReleaseTime = pxTCB->xLastWakeTime + pxTCB->xPeriod;
 8001914:	687b      	ldr	r3, [r7, #4]
 8001916:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800191c:	441a      	add	r2, r3
 800191e:	687b      	ldr	r3, [r7, #4]
 8001920:	619a      	str	r2, [r3, #24]
		/* Need to reset lastWakeTime for correct release. */
		pxTCB->xLastWakeTime = 0;
 8001922:	687b      	ldr	r3, [r7, #4]
 8001924:	2200      	movs	r2, #0
 8001926:	629a      	str	r2, [r3, #40]	; 0x28
		pxTCB->xAbsoluteDeadline = pxTCB->xRelativeDeadline + pxTCB->xReleaseTime;
 8001928:	687b      	ldr	r3, [r7, #4]
 800192a:	69da      	ldr	r2, [r3, #28]
 800192c:	687b      	ldr	r3, [r7, #4]
 800192e:	699b      	ldr	r3, [r3, #24]
 8001930:	441a      	add	r2, r3
 8001932:	687b      	ldr	r3, [r7, #4]
 8001934:	621a      	str	r2, [r3, #32]
		#if( schedEDF_EFFICIENT == 1 )
			listSET_LIST_ITEM_VALUE( &pxTCB->xTCBListItem, pxTCB->xAbsoluteDeadline );
		#endif /* schedEDF_EFFICIENT */
	}
 8001936:	bf00      	nop
 8001938:	3708      	adds	r7, #8
 800193a:	46bd      	mov	sp, r7
 800193c:	bd80      	pop	{r7, pc}
 800193e:	bf00      	nop
 8001940:	0800a3e4 	.word	0x0800a3e4

08001944 <prvCheckDeadline>:

	/* Checks whether given task has missed deadline or not. */
	static void prvCheckDeadline( SchedTCB_t *pxTCB, TickType_t xTickCount )
	{
 8001944:	b580      	push	{r7, lr}
 8001946:	b082      	sub	sp, #8
 8001948:	af00      	add	r7, sp, #0
 800194a:	6078      	str	r0, [r7, #4]
 800194c:	6039      	str	r1, [r7, #0]
		if( ( NULL != pxTCB ) && ( pdFALSE == pxTCB->xWorkIsDone ) && ( pdTRUE == pxTCB->xExecutedOnce ) )
 800194e:	687b      	ldr	r3, [r7, #4]
 8001950:	2b00      	cmp	r3, #0
 8001952:	d018      	beq.n	8001986 <prvCheckDeadline+0x42>
 8001954:	687b      	ldr	r3, [r7, #4]
 8001956:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001958:	2b00      	cmp	r3, #0
 800195a:	d114      	bne.n	8001986 <prvCheckDeadline+0x42>
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001960:	2b01      	cmp	r3, #1
 8001962:	d110      	bne.n	8001986 <prvCheckDeadline+0x42>
		{
			/* Need to update absolute deadline if the scheduling policy is not EDF. */
			#if( schedSCHEDULING_POLICY != schedSCHEDULING_POLICY_EDF )
				pxTCB->xAbsoluteDeadline = pxTCB->xLastWakeTime + pxTCB->xRelativeDeadline;
 8001964:	687b      	ldr	r3, [r7, #4]
 8001966:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001968:	687b      	ldr	r3, [r7, #4]
 800196a:	69db      	ldr	r3, [r3, #28]
 800196c:	441a      	add	r2, r3
 800196e:	687b      	ldr	r3, [r7, #4]
 8001970:	621a      	str	r2, [r3, #32]
			#endif /* schedSCHEDULING_POLICY */

			/* Using ICTOH method proposed by Carlini and Buttazzo, to check whether deadline is missed. */
			if( ( signed ) ( pxTCB->xAbsoluteDeadline - xTickCount ) < 0 )
 8001972:	687b      	ldr	r3, [r7, #4]
 8001974:	6a1a      	ldr	r2, [r3, #32]
 8001976:	683b      	ldr	r3, [r7, #0]
 8001978:	1ad3      	subs	r3, r2, r3
 800197a:	2b00      	cmp	r3, #0
 800197c:	da03      	bge.n	8001986 <prvCheckDeadline+0x42>
			{
				/* Deadline is missed. */
				prvDeadlineMissedHook( pxTCB, xTickCount );
 800197e:	6839      	ldr	r1, [r7, #0]
 8001980:	6878      	ldr	r0, [r7, #4]
 8001982:	f7ff ffaf 	bl	80018e4 <prvDeadlineMissedHook>
			}
		}
	}
 8001986:	bf00      	nop
 8001988:	3708      	adds	r7, #8
 800198a:	46bd      	mov	sp, r7
 800198c:	bd80      	pop	{r7, pc}
	...

08001990 <prvExecTimeExceedHook>:

	/* Called if a periodic task has exceeded it's worst-case execution time.
	 * The periodic task is blocked until next period. A context switch to
	 * the scheduler task occur to block the periodic task. */
	static void prvExecTimeExceedHook( TickType_t xTickCount, SchedTCB_t *pxCurrentTask )
	{
 8001990:	b580      	push	{r7, lr}
 8001992:	b084      	sub	sp, #16
 8001994:	af00      	add	r7, sp, #0
 8001996:	6078      	str	r0, [r7, #4]
 8001998:	6039      	str	r1, [r7, #0]
		printf( "\r\nworst case execution time exceeded! %s %d %d\r\n", pxCurrentTask->pcName, pxCurrentTask->xExecTime, xTickCount );
 800199a:	683b      	ldr	r3, [r7, #0]
 800199c:	6859      	ldr	r1, [r3, #4]
 800199e:	683b      	ldr	r3, [r7, #0]
 80019a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019a2:	687b      	ldr	r3, [r7, #4]
 80019a4:	481a      	ldr	r0, [pc, #104]	; (8001a10 <prvExecTimeExceedHook+0x80>)
 80019a6:	f006 fbc9 	bl	800813c <iprintf>

		pxCurrentTask->xMaxExecTimeExceeded = pdTRUE;
 80019aa:	683b      	ldr	r3, [r7, #0]
 80019ac:	2201      	movs	r2, #1
 80019ae:	64da      	str	r2, [r3, #76]	; 0x4c
		/* Is not suspended yet, but will be suspended by the scheduler later. */
		pxCurrentTask->xSuspended = pdTRUE;
 80019b0:	683b      	ldr	r3, [r7, #0]
 80019b2:	2201      	movs	r2, #1
 80019b4:	649a      	str	r2, [r3, #72]	; 0x48
		pxCurrentTask->xAbsoluteUnblockTime = pxCurrentTask->xLastWakeTime + pxCurrentTask->xPeriod;
 80019b6:	683b      	ldr	r3, [r7, #0]
 80019b8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80019ba:	683b      	ldr	r3, [r7, #0]
 80019bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80019be:	441a      	add	r2, r3
 80019c0:	683b      	ldr	r3, [r7, #0]
 80019c2:	645a      	str	r2, [r3, #68]	; 0x44
		pxCurrentTask->xExecTime = 0;
 80019c4:	683b      	ldr	r3, [r7, #0]
 80019c6:	2200      	movs	r2, #0
 80019c8:	631a      	str	r2, [r3, #48]	; 0x30
		#if( schedUSE_POLLING_SERVER == 1)
			if( pdTRUE == pxCurrentTask->xIsPeriodicServer )
 80019ca:	683b      	ldr	r3, [r7, #0]
 80019cc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80019ce:	2b01      	cmp	r3, #1
 80019d0:	d106      	bne.n	80019e0 <prvExecTimeExceedHook+0x50>
			{
				pxCurrentTask->xAbsoluteDeadline = pxCurrentTask->xAbsoluteUnblockTime + pxCurrentTask->xRelativeDeadline;
 80019d2:	683b      	ldr	r3, [r7, #0]
 80019d4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80019d6:	683b      	ldr	r3, [r7, #0]
 80019d8:	69db      	ldr	r3, [r3, #28]
 80019da:	441a      	add	r2, r3
 80019dc:	683b      	ldr	r3, [r7, #0]
 80019de:	621a      	str	r2, [r3, #32]
					listSET_LIST_ITEM_VALUE( &pxCurrentTask->xTCBListItem, pxCurrentTask->xAbsoluteDeadline );
				#endif /* schedEDF_EFFICIENT */
			}
		#endif /* schedUSE_POLLING_SERVER */
		BaseType_t xHigherPriorityTaskWoken;
		vTaskNotifyGiveFromISR( xSchedulerHandle, &xHigherPriorityTaskWoken );
 80019e0:	4b0c      	ldr	r3, [pc, #48]	; (8001a14 <prvExecTimeExceedHook+0x84>)
 80019e2:	681b      	ldr	r3, [r3, #0]
 80019e4:	f107 020c 	add.w	r2, r7, #12
 80019e8:	4611      	mov	r1, r2
 80019ea:	4618      	mov	r0, r3
 80019ec:	f004 fe0c 	bl	8006608 <vTaskNotifyGiveFromISR>
		schedYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 80019f0:	68fb      	ldr	r3, [r7, #12]
 80019f2:	2b00      	cmp	r3, #0
 80019f4:	d007      	beq.n	8001a06 <prvExecTimeExceedHook+0x76>
 80019f6:	4b08      	ldr	r3, [pc, #32]	; (8001a18 <prvExecTimeExceedHook+0x88>)
 80019f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80019fc:	601a      	str	r2, [r3, #0]
 80019fe:	f3bf 8f4f 	dsb	sy
 8001a02:	f3bf 8f6f 	isb	sy
	}
 8001a06:	bf00      	nop
 8001a08:	3710      	adds	r7, #16
 8001a0a:	46bd      	mov	sp, r7
 8001a0c:	bd80      	pop	{r7, pc}
 8001a0e:	bf00      	nop
 8001a10:	0800a404 	.word	0x0800a404
 8001a14:	20000344 	.word	0x20000344
 8001a18:	e000ed04 	.word	0xe000ed04

08001a1c <prvSchedulerCheckTimingError>:

#if( schedUSE_SCHEDULER_TASK == 1 )
	/* Called by the scheduler task. Checks all tasks for any enabled
	 * Timing Error Detection feature. */
	static void prvSchedulerCheckTimingError( TickType_t xTickCount, SchedTCB_t *pxTCB )
	{
 8001a1c:	b580      	push	{r7, lr}
 8001a1e:	b082      	sub	sp, #8
 8001a20:	af00      	add	r7, sp, #0
 8001a22:	6078      	str	r0, [r7, #4]
 8001a24:	6039      	str	r1, [r7, #0]
		#if( schedUSE_TCB_ARRAY == 1 )
			if( pdFALSE == pxTCB->xInUse )
 8001a26:	683b      	ldr	r3, [r7, #0]
 8001a28:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001a2a:	2b00      	cmp	r3, #0
 8001a2c:	d034      	beq.n	8001a98 <prvSchedulerCheckTimingError+0x7c>
		#endif

		#if( schedUSE_TIMING_ERROR_DETECTION_DEADLINE == 1 )
			#if( schedUSE_POLLING_SERVER == 1 )
				/* If the task is periodic server, do not check deadline. */
				if( pdTRUE == pxTCB->xIsPeriodicServer )
 8001a2e:	683b      	ldr	r3, [r7, #0]
 8001a30:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8001a32:	2b01      	cmp	r3, #1
 8001a34:	d00c      	beq.n	8001a50 <prvSchedulerCheckTimingError+0x34>
				{
					/* Since lastWakeTime is updated to next wake time when the task is delayed, tickCount > lastWakeTime implies that
					 * the task has not finished it's job this period. */

					/* Using ICTOH method proposed by Carlini and Buttazzo, to check the condition unaffected by counter overflows. */
					if( ( signed ) ( xTickCount - pxTCB->xLastWakeTime ) > 0 )
 8001a36:	683b      	ldr	r3, [r7, #0]
 8001a38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001a3a:	687a      	ldr	r2, [r7, #4]
 8001a3c:	1ad3      	subs	r3, r2, r3
 8001a3e:	2b00      	cmp	r3, #0
 8001a40:	dd02      	ble.n	8001a48 <prvSchedulerCheckTimingError+0x2c>
					{
						pxTCB->xWorkIsDone = pdFALSE;
 8001a42:	683b      	ldr	r3, [r7, #0]
 8001a44:	2200      	movs	r2, #0
 8001a46:	635a      	str	r2, [r3, #52]	; 0x34
					}

					prvCheckDeadline( pxTCB, xTickCount );
 8001a48:	6879      	ldr	r1, [r7, #4]
 8001a4a:	6838      	ldr	r0, [r7, #0]
 8001a4c:	f7ff ff7a 	bl	8001944 <prvCheckDeadline>
			#endif /* schedUSE_POLLING_SERVER */
		#endif /* schedUSE_TIMING_ERROR_DETECTION_DEADLINE */
		

		#if( schedUSE_TIMING_ERROR_DETECTION_EXECUTION_TIME == 1 )
			if( pdTRUE == pxTCB->xMaxExecTimeExceeded )
 8001a50:	683b      	ldr	r3, [r7, #0]
 8001a52:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001a54:	2b01      	cmp	r3, #1
 8001a56:	d108      	bne.n	8001a6a <prvSchedulerCheckTimingError+0x4e>
			{
				pxTCB->xMaxExecTimeExceeded = pdFALSE;
 8001a58:	683b      	ldr	r3, [r7, #0]
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	64da      	str	r2, [r3, #76]	; 0x4c
				vTaskSuspend( *pxTCB->pxTaskHandle );
 8001a5e:	683b      	ldr	r3, [r7, #0]
 8001a60:	695b      	ldr	r3, [r3, #20]
 8001a62:	681b      	ldr	r3, [r3, #0]
 8001a64:	4618      	mov	r0, r3
 8001a66:	f003 fe0b 	bl	8005680 <vTaskSuspend>
			}
			if( pdTRUE == pxTCB->xSuspended )
 8001a6a:	683b      	ldr	r3, [r7, #0]
 8001a6c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001a6e:	2b01      	cmp	r3, #1
 8001a70:	d114      	bne.n	8001a9c <prvSchedulerCheckTimingError+0x80>
			{
				/* Using ICTOH method proposed by Carlini and Buttazzo, to check whether absolute unblock time is reached. */
				if( ( signed ) ( pxTCB->xAbsoluteUnblockTime - xTickCount ) <= 0 )
 8001a72:	683b      	ldr	r3, [r7, #0]
 8001a74:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a76:	687b      	ldr	r3, [r7, #4]
 8001a78:	1ad3      	subs	r3, r2, r3
 8001a7a:	2b00      	cmp	r3, #0
 8001a7c:	dc0e      	bgt.n	8001a9c <prvSchedulerCheckTimingError+0x80>
				{
					pxTCB->xSuspended = pdFALSE;
 8001a7e:	683b      	ldr	r3, [r7, #0]
 8001a80:	2200      	movs	r2, #0
 8001a82:	649a      	str	r2, [r3, #72]	; 0x48
					pxTCB->xLastWakeTime = xTickCount;
 8001a84:	683b      	ldr	r3, [r7, #0]
 8001a86:	687a      	ldr	r2, [r7, #4]
 8001a88:	629a      	str	r2, [r3, #40]	; 0x28
					vTaskResume( *pxTCB->pxTaskHandle );
 8001a8a:	683b      	ldr	r3, [r7, #0]
 8001a8c:	695b      	ldr	r3, [r3, #20]
 8001a8e:	681b      	ldr	r3, [r3, #0]
 8001a90:	4618      	mov	r0, r3
 8001a92:	f003 fe9d 	bl	80057d0 <vTaskResume>
				}
			}
		#endif /* schedUSE_TIMING_ERROR_DETECTION_EXECUTION_TIME */

		return;
 8001a96:	e001      	b.n	8001a9c <prvSchedulerCheckTimingError+0x80>
				return;
 8001a98:	bf00      	nop
 8001a9a:	e000      	b.n	8001a9e <prvSchedulerCheckTimingError+0x82>
		return;
 8001a9c:	bf00      	nop
	}
 8001a9e:	3708      	adds	r7, #8
 8001aa0:	46bd      	mov	sp, r7
 8001aa2:	bd80      	pop	{r7, pc}

08001aa4 <prvSchedulerFunction>:

	/* Function code for the scheduler task. */
	static void prvSchedulerFunction( void )
	{
 8001aa4:	b580      	push	{r7, lr}
 8001aa6:	b084      	sub	sp, #16
 8001aa8:	af00      	add	r7, sp, #0
					}					
				#endif /* schedEDF_EFFICIENT */
			#endif /* schedSCHEDULING_POLICY_EDF */

			#if( schedUSE_TIMING_ERROR_DETECTION_DEADLINE == 1 || schedUSE_TIMING_ERROR_DETECTION_EXECUTION_TIME == 1 )
				TickType_t xTickCount = xTaskGetTickCount();
 8001aaa:	f004 f80b 	bl	8005ac4 <xTaskGetTickCount>
 8001aae:	60b8      	str	r0, [r7, #8]
				SchedTCB_t *pxTCB;

				#if( schedUSE_TCB_ARRAY == 1 )
					BaseType_t xIndex;
					for( xIndex = 0; xIndex < schedMAX_NUMBER_OF_PERIODIC_TASKS; xIndex++ )
 8001ab0:	2300      	movs	r3, #0
 8001ab2:	60fb      	str	r3, [r7, #12]
 8001ab4:	e00d      	b.n	8001ad2 <prvSchedulerFunction+0x2e>
					{
						pxTCB = &xTCBArray[ xIndex ];
 8001ab6:	68fb      	ldr	r3, [r7, #12]
 8001ab8:	2254      	movs	r2, #84	; 0x54
 8001aba:	fb02 f303 	mul.w	r3, r2, r3
 8001abe:	4a09      	ldr	r2, [pc, #36]	; (8001ae4 <prvSchedulerFunction+0x40>)
 8001ac0:	4413      	add	r3, r2
 8001ac2:	607b      	str	r3, [r7, #4]
						prvSchedulerCheckTimingError( xTickCount, pxTCB );
 8001ac4:	6879      	ldr	r1, [r7, #4]
 8001ac6:	68b8      	ldr	r0, [r7, #8]
 8001ac8:	f7ff ffa8 	bl	8001a1c <prvSchedulerCheckTimingError>
					for( xIndex = 0; xIndex < schedMAX_NUMBER_OF_PERIODIC_TASKS; xIndex++ )
 8001acc:	68fb      	ldr	r3, [r7, #12]
 8001ace:	3301      	adds	r3, #1
 8001ad0:	60fb      	str	r3, [r7, #12]
 8001ad2:	68fb      	ldr	r3, [r7, #12]
 8001ad4:	2b02      	cmp	r3, #2
 8001ad6:	ddee      	ble.n	8001ab6 <prvSchedulerFunction+0x12>
					}
				#endif /* schedUSE_TCB_SORTED_LIST */
			
			#endif /* schedUSE_TIMING_ERROR_DETECTION_DEADLINE || schedUSE_TIMING_ERROR_DETECTION_EXECUTION_TIME */

			ulTaskNotifyTake( pdTRUE, portMAX_DELAY );
 8001ad8:	f04f 31ff 	mov.w	r1, #4294967295
 8001adc:	2001      	movs	r0, #1
 8001ade:	f004 fd47 	bl	8006570 <ulTaskNotifyTake>
		{
 8001ae2:	e7e2      	b.n	8001aaa <prvSchedulerFunction+0x6>
 8001ae4:	20000240 	.word	0x20000240

08001ae8 <prvCreateSchedulerTask>:
		}
	}

	/* Creates the scheduler task. */
	static void prvCreateSchedulerTask( void )
	{
 8001ae8:	b580      	push	{r7, lr}
 8001aea:	b082      	sub	sp, #8
 8001aec:	af02      	add	r7, sp, #8
		xTaskCreate( (TaskFunction_t) prvSchedulerFunction, "Scheduler", schedSCHEDULER_TASK_STACK_SIZE, NULL, schedSCHEDULER_PRIORITY, &xSchedulerHandle );
 8001aee:	4b07      	ldr	r3, [pc, #28]	; (8001b0c <prvCreateSchedulerTask+0x24>)
 8001af0:	9301      	str	r3, [sp, #4]
 8001af2:	2337      	movs	r3, #55	; 0x37
 8001af4:	9300      	str	r3, [sp, #0]
 8001af6:	2300      	movs	r3, #0
 8001af8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001afc:	4904      	ldr	r1, [pc, #16]	; (8001b10 <prvCreateSchedulerTask+0x28>)
 8001afe:	4805      	ldr	r0, [pc, #20]	; (8001b14 <prvCreateSchedulerTask+0x2c>)
 8001b00:	f003 fb63 	bl	80051ca <xTaskCreate>
	}
 8001b04:	bf00      	nop
 8001b06:	46bd      	mov	sp, r7
 8001b08:	bd80      	pop	{r7, pc}
 8001b0a:	bf00      	nop
 8001b0c:	20000344 	.word	0x20000344
 8001b10:	0800a438 	.word	0x0800a438
 8001b14:	08001aa5 	.word	0x08001aa5

08001b18 <prvGetNextAperiodicJob>:

#if( schedUSE_APERIODIC_JOBS == 1 )
	/* Returns AJCB of first aperiodic job stored in FIFO. Returns NULL if
	 * the FIFO is empty. */
	static AJCB_t *prvGetNextAperiodicJob( void )
	{
 8001b18:	b480      	push	{r7}
 8001b1a:	b083      	sub	sp, #12
 8001b1c:	af00      	add	r7, sp, #0
		/* If FIFO is empty. */
		if( 0 == uxAperiodicJobCounter)
 8001b1e:	4b11      	ldr	r3, [pc, #68]	; (8001b64 <prvGetNextAperiodicJob+0x4c>)
 8001b20:	681b      	ldr	r3, [r3, #0]
 8001b22:	2b00      	cmp	r3, #0
 8001b24:	d101      	bne.n	8001b2a <prvGetNextAperiodicJob+0x12>
		{
			return NULL;
 8001b26:	2300      	movs	r3, #0
 8001b28:	e015      	b.n	8001b56 <prvGetNextAperiodicJob+0x3e>
		}

		AJCB_t *pxReturnValue = &xAJCBFifo[ xAJCBFifoHead ];
 8001b2a:	4b0f      	ldr	r3, [pc, #60]	; (8001b68 <prvGetNextAperiodicJob+0x50>)
 8001b2c:	681a      	ldr	r2, [r3, #0]
 8001b2e:	4613      	mov	r3, r2
 8001b30:	009b      	lsls	r3, r3, #2
 8001b32:	4413      	add	r3, r2
 8001b34:	009b      	lsls	r3, r3, #2
 8001b36:	4a0d      	ldr	r2, [pc, #52]	; (8001b6c <prvGetNextAperiodicJob+0x54>)
 8001b38:	4413      	add	r3, r2
 8001b3a:	607b      	str	r3, [r7, #4]

		/* Move FIFO head to next element in the queue. */
		xAJCBFifoHead++;
 8001b3c:	4b0a      	ldr	r3, [pc, #40]	; (8001b68 <prvGetNextAperiodicJob+0x50>)
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	3301      	adds	r3, #1
 8001b42:	4a09      	ldr	r2, [pc, #36]	; (8001b68 <prvGetNextAperiodicJob+0x50>)
 8001b44:	6013      	str	r3, [r2, #0]
		if( schedMAX_NUMBER_OF_APERIODIC_JOBS == xAJCBFifoHead )
 8001b46:	4b08      	ldr	r3, [pc, #32]	; (8001b68 <prvGetNextAperiodicJob+0x50>)
 8001b48:	681b      	ldr	r3, [r3, #0]
 8001b4a:	2b04      	cmp	r3, #4
 8001b4c:	d102      	bne.n	8001b54 <prvGetNextAperiodicJob+0x3c>
		{
			xAJCBFifoHead = 0;
 8001b4e:	4b06      	ldr	r3, [pc, #24]	; (8001b68 <prvGetNextAperiodicJob+0x50>)
 8001b50:	2200      	movs	r2, #0
 8001b52:	601a      	str	r2, [r3, #0]
				xAbsolutePreviousMaxResponseTime = xTaskGetTickCount() + schedPOLLING_SERVER_PERIOD +
						( pxReturnValue->xMaxExecTime / schedPOLLING_SERVER_MAX_EXECUTION_TIME + 1 ) * schedPOLLING_SERVER_PERIOD;
			}
		#endif /* schedUSE_SPORADIC_JOBS */

		return pxReturnValue;
 8001b54:	687b      	ldr	r3, [r7, #4]
	}
 8001b56:	4618      	mov	r0, r3
 8001b58:	370c      	adds	r7, #12
 8001b5a:	46bd      	mov	sp, r7
 8001b5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b60:	4770      	bx	lr
 8001b62:	bf00      	nop
 8001b64:	200003a0 	.word	0x200003a0
 8001b68:	20000398 	.word	0x20000398
 8001b6c:	20000348 	.word	0x20000348

08001b70 <prvFindEmptyElementIndexAJCB>:

	/* Find index for an empty entry in xAJCBArray. Returns -1 if there is
	 * no empty entry. */
	static BaseType_t prvFindEmptyElementIndexAJCB( void )
	{
 8001b70:	b480      	push	{r7}
 8001b72:	b083      	sub	sp, #12
 8001b74:	af00      	add	r7, sp, #0
		/* If the FIFO is full. */
		if( schedMAX_NUMBER_OF_APERIODIC_JOBS == uxAperiodicJobCounter )
 8001b76:	4b0e      	ldr	r3, [pc, #56]	; (8001bb0 <prvFindEmptyElementIndexAJCB+0x40>)
 8001b78:	681b      	ldr	r3, [r3, #0]
 8001b7a:	2b04      	cmp	r3, #4
 8001b7c:	d102      	bne.n	8001b84 <prvFindEmptyElementIndexAJCB+0x14>
		{
			return -1;
 8001b7e:	f04f 33ff 	mov.w	r3, #4294967295
 8001b82:	e00f      	b.n	8001ba4 <prvFindEmptyElementIndexAJCB+0x34>
		}

		BaseType_t xReturnValue = xAJCBFifoTail;
 8001b84:	4b0b      	ldr	r3, [pc, #44]	; (8001bb4 <prvFindEmptyElementIndexAJCB+0x44>)
 8001b86:	681b      	ldr	r3, [r3, #0]
 8001b88:	607b      	str	r3, [r7, #4]

		/* Extend the FIFO tail. */
		xAJCBFifoTail++;
 8001b8a:	4b0a      	ldr	r3, [pc, #40]	; (8001bb4 <prvFindEmptyElementIndexAJCB+0x44>)
 8001b8c:	681b      	ldr	r3, [r3, #0]
 8001b8e:	3301      	adds	r3, #1
 8001b90:	4a08      	ldr	r2, [pc, #32]	; (8001bb4 <prvFindEmptyElementIndexAJCB+0x44>)
 8001b92:	6013      	str	r3, [r2, #0]
		if( schedMAX_NUMBER_OF_APERIODIC_JOBS == xAJCBFifoTail )
 8001b94:	4b07      	ldr	r3, [pc, #28]	; (8001bb4 <prvFindEmptyElementIndexAJCB+0x44>)
 8001b96:	681b      	ldr	r3, [r3, #0]
 8001b98:	2b04      	cmp	r3, #4
 8001b9a:	d102      	bne.n	8001ba2 <prvFindEmptyElementIndexAJCB+0x32>
		{
			xAJCBFifoTail = 0;
 8001b9c:	4b05      	ldr	r3, [pc, #20]	; (8001bb4 <prvFindEmptyElementIndexAJCB+0x44>)
 8001b9e:	2200      	movs	r2, #0
 8001ba0:	601a      	str	r2, [r3, #0]
		}

		return xReturnValue;
 8001ba2:	687b      	ldr	r3, [r7, #4]
	}
 8001ba4:	4618      	mov	r0, r3
 8001ba6:	370c      	adds	r7, #12
 8001ba8:	46bd      	mov	sp, r7
 8001baa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bae:	4770      	bx	lr
 8001bb0:	200003a0 	.word	0x200003a0
 8001bb4:	2000039c 	.word	0x2000039c

08001bb8 <vSchedulerAperiodicJobCreate>:

	/* Creates an aperiodic job. */
	void vSchedulerAperiodicJobCreate( TaskFunction_t pvTaskCode, const char *pcName, void *pvParameters, TickType_t xMaxExecTimeTick )
	{
 8001bb8:	b580      	push	{r7, lr}
 8001bba:	b08c      	sub	sp, #48	; 0x30
 8001bbc:	af00      	add	r7, sp, #0
 8001bbe:	60f8      	str	r0, [r7, #12]
 8001bc0:	60b9      	str	r1, [r7, #8]
 8001bc2:	607a      	str	r2, [r7, #4]
 8001bc4:	603b      	str	r3, [r7, #0]
		taskENTER_CRITICAL();
 8001bc6:	f005 fa85 	bl	80070d4 <vPortEnterCritical>
	BaseType_t xIndex = prvFindEmptyElementIndexAJCB();
 8001bca:	f7ff ffd1 	bl	8001b70 <prvFindEmptyElementIndexAJCB>
 8001bce:	62f8      	str	r0, [r7, #44]	; 0x2c
		if( -1 == xIndex)
 8001bd0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001bd2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001bd6:	d102      	bne.n	8001bde <vSchedulerAperiodicJobCreate+0x26>
		{
			/* The AJCBFifo is full. */
			taskEXIT_CRITICAL();
 8001bd8:	f005 faac 	bl	8007134 <vPortExitCritical>
 8001bdc:	e02c      	b.n	8001c38 <vSchedulerAperiodicJobCreate+0x80>
			return;
		}
		configASSERT( uxAperiodicJobCounter < schedMAX_NUMBER_OF_APERIODIC_JOBS );
 8001bde:	4b18      	ldr	r3, [pc, #96]	; (8001c40 <vSchedulerAperiodicJobCreate+0x88>)
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	2b03      	cmp	r3, #3
 8001be4:	d90a      	bls.n	8001bfc <vSchedulerAperiodicJobCreate+0x44>
	__asm volatile
 8001be6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8001bea:	f383 8811 	msr	BASEPRI, r3
 8001bee:	f3bf 8f6f 	isb	sy
 8001bf2:	f3bf 8f4f 	dsb	sy
 8001bf6:	627b      	str	r3, [r7, #36]	; 0x24
}
 8001bf8:	bf00      	nop
 8001bfa:	e7fe      	b.n	8001bfa <vSchedulerAperiodicJobCreate+0x42>
		AJCB_t *pxNewAJCB = &xAJCBFifo[ xIndex ];
 8001bfc:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001bfe:	4613      	mov	r3, r2
 8001c00:	009b      	lsls	r3, r3, #2
 8001c02:	4413      	add	r3, r2
 8001c04:	009b      	lsls	r3, r3, #2
 8001c06:	4a0f      	ldr	r2, [pc, #60]	; (8001c44 <vSchedulerAperiodicJobCreate+0x8c>)
 8001c08:	4413      	add	r3, r2
 8001c0a:	62bb      	str	r3, [r7, #40]	; 0x28

		/* Add item to AJCBList. */
		*pxNewAJCB = ( AJCB_t ) { .pvTaskCode = pvTaskCode,
 8001c0c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001c0e:	68fa      	ldr	r2, [r7, #12]
 8001c10:	601a      	str	r2, [r3, #0]
 8001c12:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001c14:	68ba      	ldr	r2, [r7, #8]
 8001c16:	605a      	str	r2, [r3, #4]
 8001c18:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001c1a:	687a      	ldr	r2, [r7, #4]
 8001c1c:	609a      	str	r2, [r3, #8]
 8001c1e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001c20:	683a      	ldr	r2, [r7, #0]
 8001c22:	60da      	str	r2, [r3, #12]
 8001c24:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001c26:	2200      	movs	r2, #0
 8001c28:	611a      	str	r2, [r3, #16]
			.pcName = pcName,
			.pvParameters = pvParameters,
			.xMaxExecTime = xMaxExecTimeTick,
			.xExecTime = 0,};
		
		uxAperiodicJobCounter++;
 8001c2a:	4b05      	ldr	r3, [pc, #20]	; (8001c40 <vSchedulerAperiodicJobCreate+0x88>)
 8001c2c:	681b      	ldr	r3, [r3, #0]
 8001c2e:	3301      	adds	r3, #1
 8001c30:	4a03      	ldr	r2, [pc, #12]	; (8001c40 <vSchedulerAperiodicJobCreate+0x88>)
 8001c32:	6013      	str	r3, [r2, #0]
		taskEXIT_CRITICAL();
 8001c34:	f005 fa7e 	bl	8007134 <vPortExitCritical>
	}
 8001c38:	3730      	adds	r7, #48	; 0x30
 8001c3a:	46bd      	mov	sp, r7
 8001c3c:	bd80      	pop	{r7, pc}
 8001c3e:	bf00      	nop
 8001c40:	200003a0 	.word	0x200003a0
 8001c44:	20000348 	.word	0x20000348

08001c48 <prvPollingServerFunction>:
#endif /* schedUSE_SPORADIC_JOBS */

#if( schedUSE_POLLING_SERVER == 1 )
	/* Function code for the Polling Server. */
	static void prvPollingServerFunction( void )
	{
 8001c48:	b580      	push	{r7, lr}
 8001c4a:	af00      	add	r7, sp, #0
					continue;
				}
			#endif /* schedUSE_SPORADIC_JOBS */

			#if( schedUSE_APERIODIC_JOBS == 1 )
				pxCurrentAperiodicJob = prvGetNextAperiodicJob();
 8001c4c:	f7ff ff64 	bl	8001b18 <prvGetNextAperiodicJob>
 8001c50:	4603      	mov	r3, r0
 8001c52:	4a0b      	ldr	r2, [pc, #44]	; (8001c80 <prvPollingServerFunction+0x38>)
 8001c54:	6013      	str	r3, [r2, #0]
				if( NULL == pxCurrentAperiodicJob )
 8001c56:	4b0a      	ldr	r3, [pc, #40]	; (8001c80 <prvPollingServerFunction+0x38>)
 8001c58:	681b      	ldr	r3, [r3, #0]
 8001c5a:	2b00      	cmp	r3, #0
 8001c5c:	d00d      	beq.n	8001c7a <prvPollingServerFunction+0x32>
					return;
				}
				else
				{
					/* Run aperiodic job */
					pxCurrentAperiodicJob->pvTaskCode( pxCurrentAperiodicJob->pvParameters );
 8001c5e:	4b08      	ldr	r3, [pc, #32]	; (8001c80 <prvPollingServerFunction+0x38>)
 8001c60:	681b      	ldr	r3, [r3, #0]
 8001c62:	681b      	ldr	r3, [r3, #0]
 8001c64:	4a06      	ldr	r2, [pc, #24]	; (8001c80 <prvPollingServerFunction+0x38>)
 8001c66:	6812      	ldr	r2, [r2, #0]
 8001c68:	6892      	ldr	r2, [r2, #8]
 8001c6a:	4610      	mov	r0, r2
 8001c6c:	4798      	blx	r3
					uxAperiodicJobCounter--;
 8001c6e:	4b05      	ldr	r3, [pc, #20]	; (8001c84 <prvPollingServerFunction+0x3c>)
 8001c70:	681b      	ldr	r3, [r3, #0]
 8001c72:	3b01      	subs	r3, #1
 8001c74:	4a03      	ldr	r2, [pc, #12]	; (8001c84 <prvPollingServerFunction+0x3c>)
 8001c76:	6013      	str	r3, [r2, #0]
				pxCurrentAperiodicJob = prvGetNextAperiodicJob();
 8001c78:	e7e8      	b.n	8001c4c <prvPollingServerFunction+0x4>
					return;
 8001c7a:	bf00      	nop
						xAbsolutePreviousMaxResponseTime = 0;
					#endif /* schedUSE_SPORADIC_JOBS */
				}
			#endif /* schedUSE_APERIODIC_JOBS */
		}
	}
 8001c7c:	bd80      	pop	{r7, pc}
 8001c7e:	bf00      	nop
 8001c80:	200003a8 	.word	0x200003a8
 8001c84:	200003a0 	.word	0x200003a0

08001c88 <prvPollingServerCreate>:

	/* Creates Polling Server as a periodic task. */
	void prvPollingServerCreate( void )
	{
 8001c88:	b580      	push	{r7, lr}
 8001c8a:	b09a      	sub	sp, #104	; 0x68
 8001c8c:	af00      	add	r7, sp, #0
		taskENTER_CRITICAL();
 8001c8e:	f005 fa21 	bl	80070d4 <vPortEnterCritical>
	SchedTCB_t *pxNewTCB;
		#if( schedUSE_TCB_ARRAY == 1 )
			BaseType_t xIndex = prvFindEmptyElementIndexTCB();
 8001c92:	f7ff fc43 	bl	800151c <prvFindEmptyElementIndexTCB>
 8001c96:	6678      	str	r0, [r7, #100]	; 0x64
			configASSERT( xTaskCounter < schedMAX_NUMBER_OF_PERIODIC_TASKS );
 8001c98:	4b2f      	ldr	r3, [pc, #188]	; (8001d58 <prvPollingServerCreate+0xd0>)
 8001c9a:	681b      	ldr	r3, [r3, #0]
 8001c9c:	2b02      	cmp	r3, #2
 8001c9e:	dd0a      	ble.n	8001cb6 <prvPollingServerCreate+0x2e>
	__asm volatile
 8001ca0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8001ca4:	f383 8811 	msr	BASEPRI, r3
 8001ca8:	f3bf 8f6f 	isb	sy
 8001cac:	f3bf 8f4f 	dsb	sy
 8001cb0:	65fb      	str	r3, [r7, #92]	; 0x5c
}
 8001cb2:	bf00      	nop
 8001cb4:	e7fe      	b.n	8001cb4 <prvPollingServerCreate+0x2c>
			configASSERT( xIndex != -1 );
 8001cb6:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001cb8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001cbc:	d10a      	bne.n	8001cd4 <prvPollingServerCreate+0x4c>
	__asm volatile
 8001cbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8001cc2:	f383 8811 	msr	BASEPRI, r3
 8001cc6:	f3bf 8f6f 	isb	sy
 8001cca:	f3bf 8f4f 	dsb	sy
 8001cce:	65bb      	str	r3, [r7, #88]	; 0x58
}
 8001cd0:	bf00      	nop
 8001cd2:	e7fe      	b.n	8001cd2 <prvPollingServerCreate+0x4a>
			pxNewTCB = &xTCBArray[ xIndex ];
 8001cd4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001cd6:	2254      	movs	r2, #84	; 0x54
 8001cd8:	fb02 f303 	mul.w	r3, r2, r3
 8001cdc:	4a1f      	ldr	r2, [pc, #124]	; (8001d5c <prvPollingServerCreate+0xd4>)
 8001cde:	4413      	add	r3, r2
 8001ce0:	663b      	str	r3, [r7, #96]	; 0x60
		#elif( schedUSE_TCB_SORTED_LIST == 1 )
			pxNewTCB = pvPortMalloc( sizeof( SchedTCB_t ) );
		#endif /* schedUSE_TCB_ARRAY */

		/* Initialize item. */
		*pxNewTCB = ( SchedTCB_t ) { .pvTaskCode = (TaskFunction_t) prvPollingServerFunction, .pcName = "PS", .uxStackDepth = schedPOLLING_SERVER_STACK_SIZE, .pvParameters = NULL,
 8001ce2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001ce4:	4618      	mov	r0, r3
 8001ce6:	2354      	movs	r3, #84	; 0x54
 8001ce8:	461a      	mov	r2, r3
 8001cea:	2100      	movs	r1, #0
 8001cec:	f006 fb6c 	bl	80083c8 <memset>
 8001cf0:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001cf2:	4a1b      	ldr	r2, [pc, #108]	; (8001d60 <prvPollingServerCreate+0xd8>)
 8001cf4:	601a      	str	r2, [r3, #0]
 8001cf6:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001cf8:	4a1a      	ldr	r2, [pc, #104]	; (8001d64 <prvPollingServerCreate+0xdc>)
 8001cfa:	605a      	str	r2, [r3, #4]
 8001cfc:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001cfe:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 8001d02:	609a      	str	r2, [r3, #8]
 8001d04:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001d06:	4a18      	ldr	r2, [pc, #96]	; (8001d68 <prvPollingServerCreate+0xe0>)
 8001d08:	615a      	str	r2, [r3, #20]
 8001d0a:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001d0c:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8001d10:	61da      	str	r2, [r3, #28]
 8001d12:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001d14:	2250      	movs	r2, #80	; 0x50
 8001d16:	625a      	str	r2, [r3, #36]	; 0x24
 8001d18:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001d1a:	2250      	movs	r2, #80	; 0x50
 8001d1c:	62da      	str	r2, [r3, #44]	; 0x2c
 8001d1e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001d20:	2201      	movs	r2, #1
 8001d22:	635a      	str	r2, [r3, #52]	; 0x34
 8001d24:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001d26:	2201      	movs	r2, #1
 8001d28:	651a      	str	r2, [r3, #80]	; 0x50
			.pxTaskHandle = &xPollingServerHandle, .xReleaseTime = 0, .xPeriod = schedPOLLING_SERVER_PERIOD, .xMaxExecTime = schedPOLLING_SERVER_MAX_EXECUTION_TIME,
			.xRelativeDeadline = schedPOLLING_SERVER_DEADLINE, .xWorkIsDone = pdTRUE, .xExecTime = 0, .xIsPeriodicServer = pdTRUE };
		#if( schedUSE_TCB_ARRAY == 1 )
			pxNewTCB->xInUse = pdTRUE;
 8001d2a:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001d2c:	2201      	movs	r2, #1
 8001d2e:	63da      	str	r2, [r3, #60]	; 0x3c
		#elif( schedUSE_TCB_SORTED_LIST == 1 )
			pxNewTCB->xAbsoluteDeadline = pxNewTCB->xRelativeDeadline + xSystemStartTime;
		#endif /* schedUSE_TCB_SORTED_LIST */

		#if( schedSCHEDULING_POLICY == schedSCHEDULING_POLICY_RMS || schedSCHEDULING_POLICY == schedSCHEDULING_POLICY_DMS )
			pxNewTCB->xPriorityIsSet = pdFALSE;
 8001d30:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001d32:	2200      	movs	r2, #0
 8001d34:	639a      	str	r2, [r3, #56]	; 0x38
		#if( schedSCHEDULING_POLICY == schedSCHEDULING_POLICY_MANUAL )
			pxNewTCB->uxPriority = schedPOLLING_SERVER_PRIORITY;
			pxNewTCB->xPriorityIsSet = pdTRUE;
		#endif /* schedSCHEDULING_POLICY_MANUAL */
		#if( schedUSE_TIMING_ERROR_DETECTION_EXECUTION_TIME == 1 )
			pxNewTCB->xSuspended = pdFALSE;
 8001d36:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001d38:	2200      	movs	r2, #0
 8001d3a:	649a      	str	r2, [r3, #72]	; 0x48
			pxNewTCB->xMaxExecTimeExceeded = pdFALSE;
 8001d3c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001d3e:	2200      	movs	r2, #0
 8001d40:	64da      	str	r2, [r3, #76]	; 0x4c
		#endif /* schedUSE_TIMING_ERROR_DETECTION_EXECUTION_TIME */
	
		#if( schedUSE_TCB_ARRAY == 1 )
			xTaskCounter++;
 8001d42:	4b05      	ldr	r3, [pc, #20]	; (8001d58 <prvPollingServerCreate+0xd0>)
 8001d44:	681b      	ldr	r3, [r3, #0]
 8001d46:	3301      	adds	r3, #1
 8001d48:	4a03      	ldr	r2, [pc, #12]	; (8001d58 <prvPollingServerCreate+0xd0>)
 8001d4a:	6013      	str	r3, [r2, #0]
			#if( schedEDF_EFFICIENT == 1 )
				pxNewTCB->uxPriority = schedPRIORITY_NOT_RUNNING;
			#endif /* schedEDF_EFFICIENT */
			prvAddTCBToList( pxNewTCB );
		#endif /* schedUSE_TCB_SORTED_LIST */
			taskEXIT_CRITICAL();
 8001d4c:	f005 f9f2 	bl	8007134 <vPortExitCritical>
	}
 8001d50:	bf00      	nop
 8001d52:	3768      	adds	r7, #104	; 0x68
 8001d54:	46bd      	mov	sp, r7
 8001d56:	bd80      	pop	{r7, pc}
 8001d58:	2000033c 	.word	0x2000033c
 8001d5c:	20000240 	.word	0x20000240
 8001d60:	08001c49 	.word	0x08001c49
 8001d64:	0800a444 	.word	0x0800a444
 8001d68:	200003a4 	.word	0x200003a4

08001d6c <prvWakeScheduler>:
#endif /* schedUSE_POLLING_SERVER */

#if( schedUSE_SCHEDULER_TASK == 1 )
	/* Wakes up (context switches to) the scheduler task. */
	static void prvWakeScheduler( void )
	{
 8001d6c:	b580      	push	{r7, lr}
 8001d6e:	b082      	sub	sp, #8
 8001d70:	af00      	add	r7, sp, #0
	BaseType_t xHigherPriorityTaskWoken;
		vTaskNotifyGiveFromISR( xSchedulerHandle, &xHigherPriorityTaskWoken );
 8001d72:	4b0b      	ldr	r3, [pc, #44]	; (8001da0 <prvWakeScheduler+0x34>)
 8001d74:	681b      	ldr	r3, [r3, #0]
 8001d76:	1d3a      	adds	r2, r7, #4
 8001d78:	4611      	mov	r1, r2
 8001d7a:	4618      	mov	r0, r3
 8001d7c:	f004 fc44 	bl	8006608 <vTaskNotifyGiveFromISR>
		schedYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 8001d80:	687b      	ldr	r3, [r7, #4]
 8001d82:	2b00      	cmp	r3, #0
 8001d84:	d007      	beq.n	8001d96 <prvWakeScheduler+0x2a>
 8001d86:	4b07      	ldr	r3, [pc, #28]	; (8001da4 <prvWakeScheduler+0x38>)
 8001d88:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001d8c:	601a      	str	r2, [r3, #0]
 8001d8e:	f3bf 8f4f 	dsb	sy
 8001d92:	f3bf 8f6f 	isb	sy
	}
 8001d96:	bf00      	nop
 8001d98:	3708      	adds	r7, #8
 8001d9a:	46bd      	mov	sp, r7
 8001d9c:	bd80      	pop	{r7, pc}
 8001d9e:	bf00      	nop
 8001da0:	20000344 	.word	0x20000344
 8001da4:	e000ed04 	.word	0xe000ed04

08001da8 <vApplicationTickHook>:

	/* Called every software tick. */
	void vApplicationTickHook( void )
	{
 8001da8:	b580      	push	{r7, lr}
 8001daa:	b082      	sub	sp, #8
 8001dac:	af00      	add	r7, sp, #0
	SchedTCB_t *pxCurrentTask;
	TaskHandle_t xCurrentTaskHandle = xTaskGetCurrentTaskHandle();
 8001dae:	f004 fa45 	bl	800623c <xTaskGetCurrentTaskHandle>
 8001db2:	6078      	str	r0, [r7, #4]

		pxCurrentTask = ( SchedTCB_t * ) pvTaskGetThreadLocalStoragePointer( xCurrentTaskHandle, schedTHREAD_LOCAL_STORAGE_POINTER_INDEX );
 8001db4:	2100      	movs	r1, #0
 8001db6:	6878      	ldr	r0, [r7, #4]
 8001db8:	f004 f958 	bl	800606c <pvTaskGetThreadLocalStoragePointer>
 8001dbc:	6038      	str	r0, [r7, #0]
		if( NULL != pxCurrentTask && xCurrentTaskHandle != xSchedulerHandle && xCurrentTaskHandle != xTaskGetIdleTaskHandle() )
 8001dbe:	683b      	ldr	r3, [r7, #0]
 8001dc0:	2b00      	cmp	r3, #0
 8001dc2:	d024      	beq.n	8001e0e <vApplicationTickHook+0x66>
 8001dc4:	4b1b      	ldr	r3, [pc, #108]	; (8001e34 <vApplicationTickHook+0x8c>)
 8001dc6:	681b      	ldr	r3, [r3, #0]
 8001dc8:	687a      	ldr	r2, [r7, #4]
 8001dca:	429a      	cmp	r2, r3
 8001dcc:	d01f      	beq.n	8001e0e <vApplicationTickHook+0x66>
 8001dce:	f003 fe9b 	bl	8005b08 <xTaskGetIdleTaskHandle>
 8001dd2:	4602      	mov	r2, r0
 8001dd4:	687b      	ldr	r3, [r7, #4]
 8001dd6:	4293      	cmp	r3, r2
 8001dd8:	d019      	beq.n	8001e0e <vApplicationTickHook+0x66>
		{
			pxCurrentTask->xExecTime++;
 8001dda:	683b      	ldr	r3, [r7, #0]
 8001ddc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dde:	1c5a      	adds	r2, r3, #1
 8001de0:	683b      	ldr	r3, [r7, #0]
 8001de2:	631a      	str	r2, [r3, #48]	; 0x30
			#if( schedUSE_TIMING_ERROR_DETECTION_EXECUTION_TIME == 1 )
				if( pxCurrentTask->xMaxExecTime <= pxCurrentTask->xExecTime )
 8001de4:	683b      	ldr	r3, [r7, #0]
 8001de6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001de8:	683b      	ldr	r3, [r7, #0]
 8001dea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dec:	429a      	cmp	r2, r3
 8001dee:	d80e      	bhi.n	8001e0e <vApplicationTickHook+0x66>
				{
					if( pdFALSE == pxCurrentTask->xMaxExecTimeExceeded )
 8001df0:	683b      	ldr	r3, [r7, #0]
 8001df2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001df4:	2b00      	cmp	r3, #0
 8001df6:	d10a      	bne.n	8001e0e <vApplicationTickHook+0x66>
					{
						if( pdFALSE == pxCurrentTask->xSuspended )
 8001df8:	683b      	ldr	r3, [r7, #0]
 8001dfa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001dfc:	2b00      	cmp	r3, #0
 8001dfe:	d106      	bne.n	8001e0e <vApplicationTickHook+0x66>
						{
							prvExecTimeExceedHook( xTaskGetTickCountFromISR(), pxCurrentTask );
 8001e00:	f003 fe70 	bl	8005ae4 <xTaskGetTickCountFromISR>
 8001e04:	4603      	mov	r3, r0
 8001e06:	6839      	ldr	r1, [r7, #0]
 8001e08:	4618      	mov	r0, r3
 8001e0a:	f7ff fdc1 	bl	8001990 <prvExecTimeExceedHook>
				}
			#endif /* schedUSE_TIMING_ERROR_DETECTION_EXECUTION_TIME */
		}

		#if( schedUSE_TIMING_ERROR_DETECTION_DEADLINE == 1 )
			xSchedulerWakeCounter++;
 8001e0e:	4b0a      	ldr	r3, [pc, #40]	; (8001e38 <vApplicationTickHook+0x90>)
 8001e10:	681b      	ldr	r3, [r3, #0]
 8001e12:	3301      	adds	r3, #1
 8001e14:	4a08      	ldr	r2, [pc, #32]	; (8001e38 <vApplicationTickHook+0x90>)
 8001e16:	6013      	str	r3, [r2, #0]
			if( xSchedulerWakeCounter == schedSCHEDULER_TASK_PERIOD )
 8001e18:	4b07      	ldr	r3, [pc, #28]	; (8001e38 <vApplicationTickHook+0x90>)
 8001e1a:	681b      	ldr	r3, [r3, #0]
 8001e1c:	2b64      	cmp	r3, #100	; 0x64
 8001e1e:	d104      	bne.n	8001e2a <vApplicationTickHook+0x82>
			{
				xSchedulerWakeCounter = 0;
 8001e20:	4b05      	ldr	r3, [pc, #20]	; (8001e38 <vApplicationTickHook+0x90>)
 8001e22:	2200      	movs	r2, #0
 8001e24:	601a      	str	r2, [r3, #0]
				prvWakeScheduler();
 8001e26:	f7ff ffa1 	bl	8001d6c <prvWakeScheduler>
			}
		#endif /* schedUSE_TIMING_ERROR_DETECTION_DEADLINE */
	}
 8001e2a:	bf00      	nop
 8001e2c:	3708      	adds	r7, #8
 8001e2e:	46bd      	mov	sp, r7
 8001e30:	bd80      	pop	{r7, pc}
 8001e32:	bf00      	nop
 8001e34:	20000344 	.word	0x20000344
 8001e38:	20000340 	.word	0x20000340

08001e3c <vSchedulerInit>:
#endif /* schedUSE_SCHEDULER_TASK */

/* This function must be called before any other function call from this module. */
void vSchedulerInit( void )
{
 8001e3c:	b580      	push	{r7, lr}
 8001e3e:	af00      	add	r7, sp, #0
	#if( schedUSE_TCB_ARRAY == 1 )
		prvInitTCBArray();
 8001e40:	f7ff fb4e 	bl	80014e0 <prvInitTCBArray>
			pxTCBBlockedList = &xTCBBlockedList;
			pxTCBReadyList = &xTCBReadyList;
			pxTCBOverflowedReadyList = &xTCBOverflowedReadyList;
		#endif /* schedEDF_NAIVE */
	#endif /* schedUSE_TCB_ARRAY */
}
 8001e44:	bf00      	nop
 8001e46:	bd80      	pop	{r7, pc}

08001e48 <vSchedulerStart>:

/* Starts scheduling tasks. All periodic tasks (including polling server) must
 * have been created with API function before calling this function. */
void vSchedulerStart( void )
{
 8001e48:	b580      	push	{r7, lr}
 8001e4a:	af00      	add	r7, sp, #0
	#if( schedUSE_POLLING_SERVER == 1 )
		prvPollingServerCreate();
 8001e4c:	f7ff ff1c 	bl	8001c88 <prvPollingServerCreate>
	#endif /* schedUSE_POLLING_SERVER */

	#if( schedSCHEDULING_POLICY == schedSCHEDULING_POLICY_RMS || schedSCHEDULING_POLICY == schedSCHEDULING_POLICY_DMS )
		prvSetFixedPriorities();
 8001e50:	f7ff fca6 	bl	80017a0 <prvSetFixedPriorities>
	#elif( schedSCHEDULING_POLICY == schedSCHEDULING_POLICY_EDF )
		prvInitEDF();
	#endif /* schedSCHEDULING_POLICY */

	#if( schedUSE_SCHEDULER_TASK == 1 )
		prvCreateSchedulerTask();
 8001e54:	f7ff fe48 	bl	8001ae8 <prvCreateSchedulerTask>
	#endif /* schedUSE_SCHEDULER_TASK */

	prvCreateAllTasks();
 8001e58:	f7ff fc4e 	bl	80016f8 <prvCreateAllTasks>

	xSystemStartTime = xTaskGetTickCount();
 8001e5c:	f003 fe32 	bl	8005ac4 <xTaskGetTickCount>
 8001e60:	4603      	mov	r3, r0
 8001e62:	4a03      	ldr	r2, [pc, #12]	; (8001e70 <vSchedulerStart+0x28>)
 8001e64:	6013      	str	r3, [r2, #0]
	vTaskStartScheduler();
 8001e66:	f003 fd11 	bl	800588c <vTaskStartScheduler>
}
 8001e6a:	bf00      	nop
 8001e6c:	bd80      	pop	{r7, pc}
 8001e6e:	bf00      	nop
 8001e70:	2000023c 	.word	0x2000023c

08001e74 <HAL_MspInit>:
 8001e74:	b580      	push	{r7, lr}
 8001e76:	b082      	sub	sp, #8
 8001e78:	af00      	add	r7, sp, #0
 8001e7a:	2300      	movs	r3, #0
 8001e7c:	607b      	str	r3, [r7, #4]
 8001e7e:	4b12      	ldr	r3, [pc, #72]	; (8001ec8 <HAL_MspInit+0x54>)
 8001e80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001e82:	4a11      	ldr	r2, [pc, #68]	; (8001ec8 <HAL_MspInit+0x54>)
 8001e84:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001e88:	6453      	str	r3, [r2, #68]	; 0x44
 8001e8a:	4b0f      	ldr	r3, [pc, #60]	; (8001ec8 <HAL_MspInit+0x54>)
 8001e8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001e8e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001e92:	607b      	str	r3, [r7, #4]
 8001e94:	687b      	ldr	r3, [r7, #4]
 8001e96:	2300      	movs	r3, #0
 8001e98:	603b      	str	r3, [r7, #0]
 8001e9a:	4b0b      	ldr	r3, [pc, #44]	; (8001ec8 <HAL_MspInit+0x54>)
 8001e9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e9e:	4a0a      	ldr	r2, [pc, #40]	; (8001ec8 <HAL_MspInit+0x54>)
 8001ea0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001ea4:	6413      	str	r3, [r2, #64]	; 0x40
 8001ea6:	4b08      	ldr	r3, [pc, #32]	; (8001ec8 <HAL_MspInit+0x54>)
 8001ea8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001eaa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001eae:	603b      	str	r3, [r7, #0]
 8001eb0:	683b      	ldr	r3, [r7, #0]
 8001eb2:	2200      	movs	r2, #0
 8001eb4:	210f      	movs	r1, #15
 8001eb6:	f06f 0001 	mvn.w	r0, #1
 8001eba:	f000 fb2b 	bl	8002514 <HAL_NVIC_SetPriority>
 8001ebe:	bf00      	nop
 8001ec0:	3708      	adds	r7, #8
 8001ec2:	46bd      	mov	sp, r7
 8001ec4:	bd80      	pop	{r7, pc}
 8001ec6:	bf00      	nop
 8001ec8:	40023800 	.word	0x40023800

08001ecc <HAL_InitTick>:
 8001ecc:	b580      	push	{r7, lr}
 8001ece:	b08c      	sub	sp, #48	; 0x30
 8001ed0:	af00      	add	r7, sp, #0
 8001ed2:	6078      	str	r0, [r7, #4]
 8001ed4:	2300      	movs	r3, #0
 8001ed6:	62bb      	str	r3, [r7, #40]	; 0x28
 8001ed8:	2300      	movs	r3, #0
 8001eda:	627b      	str	r3, [r7, #36]	; 0x24
 8001edc:	2300      	movs	r3, #0
 8001ede:	60bb      	str	r3, [r7, #8]
 8001ee0:	4b2e      	ldr	r3, [pc, #184]	; (8001f9c <HAL_InitTick+0xd0>)
 8001ee2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001ee4:	4a2d      	ldr	r2, [pc, #180]	; (8001f9c <HAL_InitTick+0xd0>)
 8001ee6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001eea:	6453      	str	r3, [r2, #68]	; 0x44
 8001eec:	4b2b      	ldr	r3, [pc, #172]	; (8001f9c <HAL_InitTick+0xd0>)
 8001eee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001ef0:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8001ef4:	60bb      	str	r3, [r7, #8]
 8001ef6:	68bb      	ldr	r3, [r7, #8]
 8001ef8:	f107 020c 	add.w	r2, r7, #12
 8001efc:	f107 0310 	add.w	r3, r7, #16
 8001f00:	4611      	mov	r1, r2
 8001f02:	4618      	mov	r0, r3
 8001f04:	f001 f90c 	bl	8003120 <HAL_RCC_GetClockConfig>
 8001f08:	f001 f8f6 	bl	80030f8 <HAL_RCC_GetPCLK2Freq>
 8001f0c:	62b8      	str	r0, [r7, #40]	; 0x28
 8001f0e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001f10:	4a23      	ldr	r2, [pc, #140]	; (8001fa0 <HAL_InitTick+0xd4>)
 8001f12:	fba2 2303 	umull	r2, r3, r2, r3
 8001f16:	0c9b      	lsrs	r3, r3, #18
 8001f18:	3b01      	subs	r3, #1
 8001f1a:	627b      	str	r3, [r7, #36]	; 0x24
 8001f1c:	4b21      	ldr	r3, [pc, #132]	; (8001fa4 <HAL_InitTick+0xd8>)
 8001f1e:	4a22      	ldr	r2, [pc, #136]	; (8001fa8 <HAL_InitTick+0xdc>)
 8001f20:	601a      	str	r2, [r3, #0]
 8001f22:	4b20      	ldr	r3, [pc, #128]	; (8001fa4 <HAL_InitTick+0xd8>)
 8001f24:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001f28:	60da      	str	r2, [r3, #12]
 8001f2a:	4a1e      	ldr	r2, [pc, #120]	; (8001fa4 <HAL_InitTick+0xd8>)
 8001f2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f2e:	6053      	str	r3, [r2, #4]
 8001f30:	4b1c      	ldr	r3, [pc, #112]	; (8001fa4 <HAL_InitTick+0xd8>)
 8001f32:	2200      	movs	r2, #0
 8001f34:	611a      	str	r2, [r3, #16]
 8001f36:	4b1b      	ldr	r3, [pc, #108]	; (8001fa4 <HAL_InitTick+0xd8>)
 8001f38:	2200      	movs	r2, #0
 8001f3a:	609a      	str	r2, [r3, #8]
 8001f3c:	4b19      	ldr	r3, [pc, #100]	; (8001fa4 <HAL_InitTick+0xd8>)
 8001f3e:	2200      	movs	r2, #0
 8001f40:	619a      	str	r2, [r3, #24]
 8001f42:	4818      	ldr	r0, [pc, #96]	; (8001fa4 <HAL_InitTick+0xd8>)
 8001f44:	f001 f91e 	bl	8003184 <HAL_TIM_Base_Init>
 8001f48:	4603      	mov	r3, r0
 8001f4a:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8001f4e:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8001f52:	2b00      	cmp	r3, #0
 8001f54:	d11b      	bne.n	8001f8e <HAL_InitTick+0xc2>
 8001f56:	4813      	ldr	r0, [pc, #76]	; (8001fa4 <HAL_InitTick+0xd8>)
 8001f58:	f001 f96e 	bl	8003238 <HAL_TIM_Base_Start_IT>
 8001f5c:	4603      	mov	r3, r0
 8001f5e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8001f62:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8001f66:	2b00      	cmp	r3, #0
 8001f68:	d111      	bne.n	8001f8e <HAL_InitTick+0xc2>
 8001f6a:	201a      	movs	r0, #26
 8001f6c:	f000 faee 	bl	800254c <HAL_NVIC_EnableIRQ>
 8001f70:	687b      	ldr	r3, [r7, #4]
 8001f72:	2b0f      	cmp	r3, #15
 8001f74:	d808      	bhi.n	8001f88 <HAL_InitTick+0xbc>
 8001f76:	2200      	movs	r2, #0
 8001f78:	6879      	ldr	r1, [r7, #4]
 8001f7a:	201a      	movs	r0, #26
 8001f7c:	f000 faca 	bl	8002514 <HAL_NVIC_SetPriority>
 8001f80:	4a0a      	ldr	r2, [pc, #40]	; (8001fac <HAL_InitTick+0xe0>)
 8001f82:	687b      	ldr	r3, [r7, #4]
 8001f84:	6013      	str	r3, [r2, #0]
 8001f86:	e002      	b.n	8001f8e <HAL_InitTick+0xc2>
 8001f88:	2301      	movs	r3, #1
 8001f8a:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8001f8e:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8001f92:	4618      	mov	r0, r3
 8001f94:	3730      	adds	r7, #48	; 0x30
 8001f96:	46bd      	mov	sp, r7
 8001f98:	bd80      	pop	{r7, pc}
 8001f9a:	bf00      	nop
 8001f9c:	40023800 	.word	0x40023800
 8001fa0:	431bde83 	.word	0x431bde83
 8001fa4:	200003ac 	.word	0x200003ac
 8001fa8:	40014800 	.word	0x40014800
 8001fac:	20000004 	.word	0x20000004

08001fb0 <NMI_Handler>:
 8001fb0:	b480      	push	{r7}
 8001fb2:	af00      	add	r7, sp, #0
 8001fb4:	e7fe      	b.n	8001fb4 <NMI_Handler+0x4>

08001fb6 <HardFault_Handler>:
 8001fb6:	b480      	push	{r7}
 8001fb8:	af00      	add	r7, sp, #0
 8001fba:	e7fe      	b.n	8001fba <HardFault_Handler+0x4>

08001fbc <MemManage_Handler>:
 8001fbc:	b480      	push	{r7}
 8001fbe:	af00      	add	r7, sp, #0
 8001fc0:	e7fe      	b.n	8001fc0 <MemManage_Handler+0x4>

08001fc2 <BusFault_Handler>:
 8001fc2:	b480      	push	{r7}
 8001fc4:	af00      	add	r7, sp, #0
 8001fc6:	e7fe      	b.n	8001fc6 <BusFault_Handler+0x4>

08001fc8 <UsageFault_Handler>:
 8001fc8:	b480      	push	{r7}
 8001fca:	af00      	add	r7, sp, #0
 8001fcc:	e7fe      	b.n	8001fcc <UsageFault_Handler+0x4>

08001fce <DebugMon_Handler>:
 8001fce:	b480      	push	{r7}
 8001fd0:	af00      	add	r7, sp, #0
 8001fd2:	bf00      	nop
 8001fd4:	46bd      	mov	sp, r7
 8001fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fda:	4770      	bx	lr

08001fdc <TIM1_TRG_COM_TIM11_IRQHandler>:
 8001fdc:	b580      	push	{r7, lr}
 8001fde:	af00      	add	r7, sp, #0
 8001fe0:	4802      	ldr	r0, [pc, #8]	; (8001fec <TIM1_TRG_COM_TIM11_IRQHandler+0x10>)
 8001fe2:	f001 f98b 	bl	80032fc <HAL_TIM_IRQHandler>
 8001fe6:	bf00      	nop
 8001fe8:	bd80      	pop	{r7, pc}
 8001fea:	bf00      	nop
 8001fec:	200003ac 	.word	0x200003ac

08001ff0 <_getpid>:
 8001ff0:	b480      	push	{r7}
 8001ff2:	af00      	add	r7, sp, #0
 8001ff4:	2301      	movs	r3, #1
 8001ff6:	4618      	mov	r0, r3
 8001ff8:	46bd      	mov	sp, r7
 8001ffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ffe:	4770      	bx	lr

08002000 <_kill>:
 8002000:	b580      	push	{r7, lr}
 8002002:	b082      	sub	sp, #8
 8002004:	af00      	add	r7, sp, #0
 8002006:	6078      	str	r0, [r7, #4]
 8002008:	6039      	str	r1, [r7, #0]
 800200a:	f006 fa85 	bl	8008518 <__errno>
 800200e:	4603      	mov	r3, r0
 8002010:	2216      	movs	r2, #22
 8002012:	601a      	str	r2, [r3, #0]
 8002014:	f04f 33ff 	mov.w	r3, #4294967295
 8002018:	4618      	mov	r0, r3
 800201a:	3708      	adds	r7, #8
 800201c:	46bd      	mov	sp, r7
 800201e:	bd80      	pop	{r7, pc}

08002020 <_exit>:
 8002020:	b580      	push	{r7, lr}
 8002022:	b082      	sub	sp, #8
 8002024:	af00      	add	r7, sp, #0
 8002026:	6078      	str	r0, [r7, #4]
 8002028:	f04f 31ff 	mov.w	r1, #4294967295
 800202c:	6878      	ldr	r0, [r7, #4]
 800202e:	f7ff ffe7 	bl	8002000 <_kill>
 8002032:	e7fe      	b.n	8002032 <_exit+0x12>

08002034 <_read>:
 8002034:	b580      	push	{r7, lr}
 8002036:	b086      	sub	sp, #24
 8002038:	af00      	add	r7, sp, #0
 800203a:	60f8      	str	r0, [r7, #12]
 800203c:	60b9      	str	r1, [r7, #8]
 800203e:	607a      	str	r2, [r7, #4]
 8002040:	2300      	movs	r3, #0
 8002042:	617b      	str	r3, [r7, #20]
 8002044:	e00a      	b.n	800205c <_read+0x28>
 8002046:	f3af 8000 	nop.w
 800204a:	4601      	mov	r1, r0
 800204c:	68bb      	ldr	r3, [r7, #8]
 800204e:	1c5a      	adds	r2, r3, #1
 8002050:	60ba      	str	r2, [r7, #8]
 8002052:	b2ca      	uxtb	r2, r1
 8002054:	701a      	strb	r2, [r3, #0]
 8002056:	697b      	ldr	r3, [r7, #20]
 8002058:	3301      	adds	r3, #1
 800205a:	617b      	str	r3, [r7, #20]
 800205c:	697a      	ldr	r2, [r7, #20]
 800205e:	687b      	ldr	r3, [r7, #4]
 8002060:	429a      	cmp	r2, r3
 8002062:	dbf0      	blt.n	8002046 <_read+0x12>
 8002064:	687b      	ldr	r3, [r7, #4]
 8002066:	4618      	mov	r0, r3
 8002068:	3718      	adds	r7, #24
 800206a:	46bd      	mov	sp, r7
 800206c:	bd80      	pop	{r7, pc}

0800206e <_write>:
 800206e:	b580      	push	{r7, lr}
 8002070:	b086      	sub	sp, #24
 8002072:	af00      	add	r7, sp, #0
 8002074:	60f8      	str	r0, [r7, #12]
 8002076:	60b9      	str	r1, [r7, #8]
 8002078:	607a      	str	r2, [r7, #4]
 800207a:	2300      	movs	r3, #0
 800207c:	617b      	str	r3, [r7, #20]
 800207e:	e009      	b.n	8002094 <_write+0x26>
 8002080:	68bb      	ldr	r3, [r7, #8]
 8002082:	1c5a      	adds	r2, r3, #1
 8002084:	60ba      	str	r2, [r7, #8]
 8002086:	781b      	ldrb	r3, [r3, #0]
 8002088:	4618      	mov	r0, r3
 800208a:	f7ff f98f 	bl	80013ac <__io_putchar>
 800208e:	697b      	ldr	r3, [r7, #20]
 8002090:	3301      	adds	r3, #1
 8002092:	617b      	str	r3, [r7, #20]
 8002094:	697a      	ldr	r2, [r7, #20]
 8002096:	687b      	ldr	r3, [r7, #4]
 8002098:	429a      	cmp	r2, r3
 800209a:	dbf1      	blt.n	8002080 <_write+0x12>
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	4618      	mov	r0, r3
 80020a0:	3718      	adds	r7, #24
 80020a2:	46bd      	mov	sp, r7
 80020a4:	bd80      	pop	{r7, pc}

080020a6 <_close>:
 80020a6:	b480      	push	{r7}
 80020a8:	b083      	sub	sp, #12
 80020aa:	af00      	add	r7, sp, #0
 80020ac:	6078      	str	r0, [r7, #4]
 80020ae:	f04f 33ff 	mov.w	r3, #4294967295
 80020b2:	4618      	mov	r0, r3
 80020b4:	370c      	adds	r7, #12
 80020b6:	46bd      	mov	sp, r7
 80020b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020bc:	4770      	bx	lr

080020be <_fstat>:
 80020be:	b480      	push	{r7}
 80020c0:	b083      	sub	sp, #12
 80020c2:	af00      	add	r7, sp, #0
 80020c4:	6078      	str	r0, [r7, #4]
 80020c6:	6039      	str	r1, [r7, #0]
 80020c8:	683b      	ldr	r3, [r7, #0]
 80020ca:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80020ce:	605a      	str	r2, [r3, #4]
 80020d0:	2300      	movs	r3, #0
 80020d2:	4618      	mov	r0, r3
 80020d4:	370c      	adds	r7, #12
 80020d6:	46bd      	mov	sp, r7
 80020d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020dc:	4770      	bx	lr

080020de <_isatty>:
 80020de:	b480      	push	{r7}
 80020e0:	b083      	sub	sp, #12
 80020e2:	af00      	add	r7, sp, #0
 80020e4:	6078      	str	r0, [r7, #4]
 80020e6:	2301      	movs	r3, #1
 80020e8:	4618      	mov	r0, r3
 80020ea:	370c      	adds	r7, #12
 80020ec:	46bd      	mov	sp, r7
 80020ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020f2:	4770      	bx	lr

080020f4 <_lseek>:
 80020f4:	b480      	push	{r7}
 80020f6:	b085      	sub	sp, #20
 80020f8:	af00      	add	r7, sp, #0
 80020fa:	60f8      	str	r0, [r7, #12]
 80020fc:	60b9      	str	r1, [r7, #8]
 80020fe:	607a      	str	r2, [r7, #4]
 8002100:	2300      	movs	r3, #0
 8002102:	4618      	mov	r0, r3
 8002104:	3714      	adds	r7, #20
 8002106:	46bd      	mov	sp, r7
 8002108:	f85d 7b04 	ldr.w	r7, [sp], #4
 800210c:	4770      	bx	lr
	...

08002110 <_sbrk>:
 8002110:	b580      	push	{r7, lr}
 8002112:	b086      	sub	sp, #24
 8002114:	af00      	add	r7, sp, #0
 8002116:	6078      	str	r0, [r7, #4]
 8002118:	4a14      	ldr	r2, [pc, #80]	; (800216c <_sbrk+0x5c>)
 800211a:	4b15      	ldr	r3, [pc, #84]	; (8002170 <_sbrk+0x60>)
 800211c:	1ad3      	subs	r3, r2, r3
 800211e:	617b      	str	r3, [r7, #20]
 8002120:	697b      	ldr	r3, [r7, #20]
 8002122:	613b      	str	r3, [r7, #16]
 8002124:	4b13      	ldr	r3, [pc, #76]	; (8002174 <_sbrk+0x64>)
 8002126:	681b      	ldr	r3, [r3, #0]
 8002128:	2b00      	cmp	r3, #0
 800212a:	d102      	bne.n	8002132 <_sbrk+0x22>
 800212c:	4b11      	ldr	r3, [pc, #68]	; (8002174 <_sbrk+0x64>)
 800212e:	4a12      	ldr	r2, [pc, #72]	; (8002178 <_sbrk+0x68>)
 8002130:	601a      	str	r2, [r3, #0]
 8002132:	4b10      	ldr	r3, [pc, #64]	; (8002174 <_sbrk+0x64>)
 8002134:	681a      	ldr	r2, [r3, #0]
 8002136:	687b      	ldr	r3, [r7, #4]
 8002138:	4413      	add	r3, r2
 800213a:	693a      	ldr	r2, [r7, #16]
 800213c:	429a      	cmp	r2, r3
 800213e:	d207      	bcs.n	8002150 <_sbrk+0x40>
 8002140:	f006 f9ea 	bl	8008518 <__errno>
 8002144:	4603      	mov	r3, r0
 8002146:	220c      	movs	r2, #12
 8002148:	601a      	str	r2, [r3, #0]
 800214a:	f04f 33ff 	mov.w	r3, #4294967295
 800214e:	e009      	b.n	8002164 <_sbrk+0x54>
 8002150:	4b08      	ldr	r3, [pc, #32]	; (8002174 <_sbrk+0x64>)
 8002152:	681b      	ldr	r3, [r3, #0]
 8002154:	60fb      	str	r3, [r7, #12]
 8002156:	4b07      	ldr	r3, [pc, #28]	; (8002174 <_sbrk+0x64>)
 8002158:	681a      	ldr	r2, [r3, #0]
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	4413      	add	r3, r2
 800215e:	4a05      	ldr	r2, [pc, #20]	; (8002174 <_sbrk+0x64>)
 8002160:	6013      	str	r3, [r2, #0]
 8002162:	68fb      	ldr	r3, [r7, #12]
 8002164:	4618      	mov	r0, r3
 8002166:	3718      	adds	r7, #24
 8002168:	46bd      	mov	sp, r7
 800216a:	bd80      	pop	{r7, pc}
 800216c:	20018000 	.word	0x20018000
 8002170:	00000400 	.word	0x00000400
 8002174:	200003f4 	.word	0x200003f4
 8002178:	20004f80 	.word	0x20004f80

0800217c <SystemInit>:
 800217c:	b480      	push	{r7}
 800217e:	af00      	add	r7, sp, #0
 8002180:	4b06      	ldr	r3, [pc, #24]	; (800219c <SystemInit+0x20>)
 8002182:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002186:	4a05      	ldr	r2, [pc, #20]	; (800219c <SystemInit+0x20>)
 8002188:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800218c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002190:	bf00      	nop
 8002192:	46bd      	mov	sp, r7
 8002194:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002198:	4770      	bx	lr
 800219a:	bf00      	nop
 800219c:	e000ed00 	.word	0xe000ed00

080021a0 <MX_USART2_UART_Init>:
 80021a0:	b580      	push	{r7, lr}
 80021a2:	af00      	add	r7, sp, #0
 80021a4:	4b11      	ldr	r3, [pc, #68]	; (80021ec <MX_USART2_UART_Init+0x4c>)
 80021a6:	4a12      	ldr	r2, [pc, #72]	; (80021f0 <MX_USART2_UART_Init+0x50>)
 80021a8:	601a      	str	r2, [r3, #0]
 80021aa:	4b10      	ldr	r3, [pc, #64]	; (80021ec <MX_USART2_UART_Init+0x4c>)
 80021ac:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80021b0:	605a      	str	r2, [r3, #4]
 80021b2:	4b0e      	ldr	r3, [pc, #56]	; (80021ec <MX_USART2_UART_Init+0x4c>)
 80021b4:	2200      	movs	r2, #0
 80021b6:	609a      	str	r2, [r3, #8]
 80021b8:	4b0c      	ldr	r3, [pc, #48]	; (80021ec <MX_USART2_UART_Init+0x4c>)
 80021ba:	2200      	movs	r2, #0
 80021bc:	60da      	str	r2, [r3, #12]
 80021be:	4b0b      	ldr	r3, [pc, #44]	; (80021ec <MX_USART2_UART_Init+0x4c>)
 80021c0:	2200      	movs	r2, #0
 80021c2:	611a      	str	r2, [r3, #16]
 80021c4:	4b09      	ldr	r3, [pc, #36]	; (80021ec <MX_USART2_UART_Init+0x4c>)
 80021c6:	220c      	movs	r2, #12
 80021c8:	615a      	str	r2, [r3, #20]
 80021ca:	4b08      	ldr	r3, [pc, #32]	; (80021ec <MX_USART2_UART_Init+0x4c>)
 80021cc:	2200      	movs	r2, #0
 80021ce:	619a      	str	r2, [r3, #24]
 80021d0:	4b06      	ldr	r3, [pc, #24]	; (80021ec <MX_USART2_UART_Init+0x4c>)
 80021d2:	2200      	movs	r2, #0
 80021d4:	61da      	str	r2, [r3, #28]
 80021d6:	4805      	ldr	r0, [pc, #20]	; (80021ec <MX_USART2_UART_Init+0x4c>)
 80021d8:	f001 fa54 	bl	8003684 <HAL_UART_Init>
 80021dc:	4603      	mov	r3, r0
 80021de:	2b00      	cmp	r3, #0
 80021e0:	d001      	beq.n	80021e6 <MX_USART2_UART_Init+0x46>
 80021e2:	f7ff f977 	bl	80014d4 <Error_Handler>
 80021e6:	bf00      	nop
 80021e8:	bd80      	pop	{r7, pc}
 80021ea:	bf00      	nop
 80021ec:	200003f8 	.word	0x200003f8
 80021f0:	40004400 	.word	0x40004400

080021f4 <HAL_UART_MspInit>:
 80021f4:	b580      	push	{r7, lr}
 80021f6:	b08a      	sub	sp, #40	; 0x28
 80021f8:	af00      	add	r7, sp, #0
 80021fa:	6078      	str	r0, [r7, #4]
 80021fc:	f107 0314 	add.w	r3, r7, #20
 8002200:	2200      	movs	r2, #0
 8002202:	601a      	str	r2, [r3, #0]
 8002204:	605a      	str	r2, [r3, #4]
 8002206:	609a      	str	r2, [r3, #8]
 8002208:	60da      	str	r2, [r3, #12]
 800220a:	611a      	str	r2, [r3, #16]
 800220c:	687b      	ldr	r3, [r7, #4]
 800220e:	681b      	ldr	r3, [r3, #0]
 8002210:	4a19      	ldr	r2, [pc, #100]	; (8002278 <HAL_UART_MspInit+0x84>)
 8002212:	4293      	cmp	r3, r2
 8002214:	d12b      	bne.n	800226e <HAL_UART_MspInit+0x7a>
 8002216:	2300      	movs	r3, #0
 8002218:	613b      	str	r3, [r7, #16]
 800221a:	4b18      	ldr	r3, [pc, #96]	; (800227c <HAL_UART_MspInit+0x88>)
 800221c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800221e:	4a17      	ldr	r2, [pc, #92]	; (800227c <HAL_UART_MspInit+0x88>)
 8002220:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002224:	6413      	str	r3, [r2, #64]	; 0x40
 8002226:	4b15      	ldr	r3, [pc, #84]	; (800227c <HAL_UART_MspInit+0x88>)
 8002228:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800222a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800222e:	613b      	str	r3, [r7, #16]
 8002230:	693b      	ldr	r3, [r7, #16]
 8002232:	2300      	movs	r3, #0
 8002234:	60fb      	str	r3, [r7, #12]
 8002236:	4b11      	ldr	r3, [pc, #68]	; (800227c <HAL_UART_MspInit+0x88>)
 8002238:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800223a:	4a10      	ldr	r2, [pc, #64]	; (800227c <HAL_UART_MspInit+0x88>)
 800223c:	f043 0301 	orr.w	r3, r3, #1
 8002240:	6313      	str	r3, [r2, #48]	; 0x30
 8002242:	4b0e      	ldr	r3, [pc, #56]	; (800227c <HAL_UART_MspInit+0x88>)
 8002244:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002246:	f003 0301 	and.w	r3, r3, #1
 800224a:	60fb      	str	r3, [r7, #12]
 800224c:	68fb      	ldr	r3, [r7, #12]
 800224e:	230c      	movs	r3, #12
 8002250:	617b      	str	r3, [r7, #20]
 8002252:	2302      	movs	r3, #2
 8002254:	61bb      	str	r3, [r7, #24]
 8002256:	2300      	movs	r3, #0
 8002258:	61fb      	str	r3, [r7, #28]
 800225a:	2303      	movs	r3, #3
 800225c:	623b      	str	r3, [r7, #32]
 800225e:	2307      	movs	r3, #7
 8002260:	627b      	str	r3, [r7, #36]	; 0x24
 8002262:	f107 0314 	add.w	r3, r7, #20
 8002266:	4619      	mov	r1, r3
 8002268:	4805      	ldr	r0, [pc, #20]	; (8002280 <HAL_UART_MspInit+0x8c>)
 800226a:	f000 f97d 	bl	8002568 <HAL_GPIO_Init>
 800226e:	bf00      	nop
 8002270:	3728      	adds	r7, #40	; 0x28
 8002272:	46bd      	mov	sp, r7
 8002274:	bd80      	pop	{r7, pc}
 8002276:	bf00      	nop
 8002278:	40004400 	.word	0x40004400
 800227c:	40023800 	.word	0x40023800
 8002280:	40020000 	.word	0x40020000

08002284 <Reset_Handler>:
 8002284:	f8df d034 	ldr.w	sp, [pc, #52]	; 80022bc <LoopFillZerobss+0x12>
 8002288:	480d      	ldr	r0, [pc, #52]	; (80022c0 <LoopFillZerobss+0x16>)
 800228a:	490e      	ldr	r1, [pc, #56]	; (80022c4 <LoopFillZerobss+0x1a>)
 800228c:	4a0e      	ldr	r2, [pc, #56]	; (80022c8 <LoopFillZerobss+0x1e>)
 800228e:	2300      	movs	r3, #0
 8002290:	e002      	b.n	8002298 <LoopCopyDataInit>

08002292 <CopyDataInit>:
 8002292:	58d4      	ldr	r4, [r2, r3]
 8002294:	50c4      	str	r4, [r0, r3]
 8002296:	3304      	adds	r3, #4

08002298 <LoopCopyDataInit>:
 8002298:	18c4      	adds	r4, r0, r3
 800229a:	428c      	cmp	r4, r1
 800229c:	d3f9      	bcc.n	8002292 <CopyDataInit>
 800229e:	4a0b      	ldr	r2, [pc, #44]	; (80022cc <LoopFillZerobss+0x22>)
 80022a0:	4c0b      	ldr	r4, [pc, #44]	; (80022d0 <LoopFillZerobss+0x26>)
 80022a2:	2300      	movs	r3, #0
 80022a4:	e001      	b.n	80022aa <LoopFillZerobss>

080022a6 <FillZerobss>:
 80022a6:	6013      	str	r3, [r2, #0]
 80022a8:	3204      	adds	r2, #4

080022aa <LoopFillZerobss>:
 80022aa:	42a2      	cmp	r2, r4
 80022ac:	d3fb      	bcc.n	80022a6 <FillZerobss>
 80022ae:	f7ff ff65 	bl	800217c <SystemInit>
 80022b2:	f006 f937 	bl	8008524 <__libc_init_array>
 80022b6:	f7ff f88b 	bl	80013d0 <main>
 80022ba:	4770      	bx	lr
 80022bc:	20018000 	.word	0x20018000
 80022c0:	20000000 	.word	0x20000000
 80022c4:	200001d8 	.word	0x200001d8
 80022c8:	0800a80c 	.word	0x0800a80c
 80022cc:	200001d8 	.word	0x200001d8
 80022d0:	20004f7c 	.word	0x20004f7c

080022d4 <ADC_IRQHandler>:
 80022d4:	e7fe      	b.n	80022d4 <ADC_IRQHandler>
	...

080022d8 <HAL_Init>:
 80022d8:	b580      	push	{r7, lr}
 80022da:	af00      	add	r7, sp, #0
 80022dc:	4b0e      	ldr	r3, [pc, #56]	; (8002318 <HAL_Init+0x40>)
 80022de:	681b      	ldr	r3, [r3, #0]
 80022e0:	4a0d      	ldr	r2, [pc, #52]	; (8002318 <HAL_Init+0x40>)
 80022e2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80022e6:	6013      	str	r3, [r2, #0]
 80022e8:	4b0b      	ldr	r3, [pc, #44]	; (8002318 <HAL_Init+0x40>)
 80022ea:	681b      	ldr	r3, [r3, #0]
 80022ec:	4a0a      	ldr	r2, [pc, #40]	; (8002318 <HAL_Init+0x40>)
 80022ee:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80022f2:	6013      	str	r3, [r2, #0]
 80022f4:	4b08      	ldr	r3, [pc, #32]	; (8002318 <HAL_Init+0x40>)
 80022f6:	681b      	ldr	r3, [r3, #0]
 80022f8:	4a07      	ldr	r2, [pc, #28]	; (8002318 <HAL_Init+0x40>)
 80022fa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80022fe:	6013      	str	r3, [r2, #0]
 8002300:	2003      	movs	r0, #3
 8002302:	f000 f8fc 	bl	80024fe <HAL_NVIC_SetPriorityGrouping>
 8002306:	200f      	movs	r0, #15
 8002308:	f7ff fde0 	bl	8001ecc <HAL_InitTick>
 800230c:	f7ff fdb2 	bl	8001e74 <HAL_MspInit>
 8002310:	2300      	movs	r3, #0
 8002312:	4618      	mov	r0, r3
 8002314:	bd80      	pop	{r7, pc}
 8002316:	bf00      	nop
 8002318:	40023c00 	.word	0x40023c00

0800231c <HAL_IncTick>:
 800231c:	b480      	push	{r7}
 800231e:	af00      	add	r7, sp, #0
 8002320:	4b06      	ldr	r3, [pc, #24]	; (800233c <HAL_IncTick+0x20>)
 8002322:	781b      	ldrb	r3, [r3, #0]
 8002324:	461a      	mov	r2, r3
 8002326:	4b06      	ldr	r3, [pc, #24]	; (8002340 <HAL_IncTick+0x24>)
 8002328:	681b      	ldr	r3, [r3, #0]
 800232a:	4413      	add	r3, r2
 800232c:	4a04      	ldr	r2, [pc, #16]	; (8002340 <HAL_IncTick+0x24>)
 800232e:	6013      	str	r3, [r2, #0]
 8002330:	bf00      	nop
 8002332:	46bd      	mov	sp, r7
 8002334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002338:	4770      	bx	lr
 800233a:	bf00      	nop
 800233c:	20000008 	.word	0x20000008
 8002340:	2000043c 	.word	0x2000043c

08002344 <HAL_GetTick>:
 8002344:	b480      	push	{r7}
 8002346:	af00      	add	r7, sp, #0
 8002348:	4b03      	ldr	r3, [pc, #12]	; (8002358 <HAL_GetTick+0x14>)
 800234a:	681b      	ldr	r3, [r3, #0]
 800234c:	4618      	mov	r0, r3
 800234e:	46bd      	mov	sp, r7
 8002350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002354:	4770      	bx	lr
 8002356:	bf00      	nop
 8002358:	2000043c 	.word	0x2000043c

0800235c <HAL_Delay>:
 800235c:	b580      	push	{r7, lr}
 800235e:	b084      	sub	sp, #16
 8002360:	af00      	add	r7, sp, #0
 8002362:	6078      	str	r0, [r7, #4]
 8002364:	f7ff ffee 	bl	8002344 <HAL_GetTick>
 8002368:	60b8      	str	r0, [r7, #8]
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	60fb      	str	r3, [r7, #12]
 800236e:	68fb      	ldr	r3, [r7, #12]
 8002370:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002374:	d005      	beq.n	8002382 <HAL_Delay+0x26>
 8002376:	4b0a      	ldr	r3, [pc, #40]	; (80023a0 <HAL_Delay+0x44>)
 8002378:	781b      	ldrb	r3, [r3, #0]
 800237a:	461a      	mov	r2, r3
 800237c:	68fb      	ldr	r3, [r7, #12]
 800237e:	4413      	add	r3, r2
 8002380:	60fb      	str	r3, [r7, #12]
 8002382:	bf00      	nop
 8002384:	f7ff ffde 	bl	8002344 <HAL_GetTick>
 8002388:	4602      	mov	r2, r0
 800238a:	68bb      	ldr	r3, [r7, #8]
 800238c:	1ad3      	subs	r3, r2, r3
 800238e:	68fa      	ldr	r2, [r7, #12]
 8002390:	429a      	cmp	r2, r3
 8002392:	d8f7      	bhi.n	8002384 <HAL_Delay+0x28>
 8002394:	bf00      	nop
 8002396:	bf00      	nop
 8002398:	3710      	adds	r7, #16
 800239a:	46bd      	mov	sp, r7
 800239c:	bd80      	pop	{r7, pc}
 800239e:	bf00      	nop
 80023a0:	20000008 	.word	0x20000008

080023a4 <__NVIC_SetPriorityGrouping>:
 80023a4:	b480      	push	{r7}
 80023a6:	b085      	sub	sp, #20
 80023a8:	af00      	add	r7, sp, #0
 80023aa:	6078      	str	r0, [r7, #4]
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	f003 0307 	and.w	r3, r3, #7
 80023b2:	60fb      	str	r3, [r7, #12]
 80023b4:	4b0c      	ldr	r3, [pc, #48]	; (80023e8 <__NVIC_SetPriorityGrouping+0x44>)
 80023b6:	68db      	ldr	r3, [r3, #12]
 80023b8:	60bb      	str	r3, [r7, #8]
 80023ba:	68ba      	ldr	r2, [r7, #8]
 80023bc:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80023c0:	4013      	ands	r3, r2
 80023c2:	60bb      	str	r3, [r7, #8]
 80023c4:	68fb      	ldr	r3, [r7, #12]
 80023c6:	021a      	lsls	r2, r3, #8
 80023c8:	68bb      	ldr	r3, [r7, #8]
 80023ca:	4313      	orrs	r3, r2
 80023cc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80023d0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80023d4:	60bb      	str	r3, [r7, #8]
 80023d6:	4a04      	ldr	r2, [pc, #16]	; (80023e8 <__NVIC_SetPriorityGrouping+0x44>)
 80023d8:	68bb      	ldr	r3, [r7, #8]
 80023da:	60d3      	str	r3, [r2, #12]
 80023dc:	bf00      	nop
 80023de:	3714      	adds	r7, #20
 80023e0:	46bd      	mov	sp, r7
 80023e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023e6:	4770      	bx	lr
 80023e8:	e000ed00 	.word	0xe000ed00

080023ec <__NVIC_GetPriorityGrouping>:
 80023ec:	b480      	push	{r7}
 80023ee:	af00      	add	r7, sp, #0
 80023f0:	4b04      	ldr	r3, [pc, #16]	; (8002404 <__NVIC_GetPriorityGrouping+0x18>)
 80023f2:	68db      	ldr	r3, [r3, #12]
 80023f4:	0a1b      	lsrs	r3, r3, #8
 80023f6:	f003 0307 	and.w	r3, r3, #7
 80023fa:	4618      	mov	r0, r3
 80023fc:	46bd      	mov	sp, r7
 80023fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002402:	4770      	bx	lr
 8002404:	e000ed00 	.word	0xe000ed00

08002408 <__NVIC_EnableIRQ>:
 8002408:	b480      	push	{r7}
 800240a:	b083      	sub	sp, #12
 800240c:	af00      	add	r7, sp, #0
 800240e:	4603      	mov	r3, r0
 8002410:	71fb      	strb	r3, [r7, #7]
 8002412:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002416:	2b00      	cmp	r3, #0
 8002418:	db0b      	blt.n	8002432 <__NVIC_EnableIRQ+0x2a>
 800241a:	79fb      	ldrb	r3, [r7, #7]
 800241c:	f003 021f 	and.w	r2, r3, #31
 8002420:	4907      	ldr	r1, [pc, #28]	; (8002440 <__NVIC_EnableIRQ+0x38>)
 8002422:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002426:	095b      	lsrs	r3, r3, #5
 8002428:	2001      	movs	r0, #1
 800242a:	fa00 f202 	lsl.w	r2, r0, r2
 800242e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002432:	bf00      	nop
 8002434:	370c      	adds	r7, #12
 8002436:	46bd      	mov	sp, r7
 8002438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800243c:	4770      	bx	lr
 800243e:	bf00      	nop
 8002440:	e000e100 	.word	0xe000e100

08002444 <__NVIC_SetPriority>:
 8002444:	b480      	push	{r7}
 8002446:	b083      	sub	sp, #12
 8002448:	af00      	add	r7, sp, #0
 800244a:	4603      	mov	r3, r0
 800244c:	6039      	str	r1, [r7, #0]
 800244e:	71fb      	strb	r3, [r7, #7]
 8002450:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002454:	2b00      	cmp	r3, #0
 8002456:	db0a      	blt.n	800246e <__NVIC_SetPriority+0x2a>
 8002458:	683b      	ldr	r3, [r7, #0]
 800245a:	b2da      	uxtb	r2, r3
 800245c:	490c      	ldr	r1, [pc, #48]	; (8002490 <__NVIC_SetPriority+0x4c>)
 800245e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002462:	0112      	lsls	r2, r2, #4
 8002464:	b2d2      	uxtb	r2, r2
 8002466:	440b      	add	r3, r1
 8002468:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800246c:	e00a      	b.n	8002484 <__NVIC_SetPriority+0x40>
 800246e:	683b      	ldr	r3, [r7, #0]
 8002470:	b2da      	uxtb	r2, r3
 8002472:	4908      	ldr	r1, [pc, #32]	; (8002494 <__NVIC_SetPriority+0x50>)
 8002474:	79fb      	ldrb	r3, [r7, #7]
 8002476:	f003 030f 	and.w	r3, r3, #15
 800247a:	3b04      	subs	r3, #4
 800247c:	0112      	lsls	r2, r2, #4
 800247e:	b2d2      	uxtb	r2, r2
 8002480:	440b      	add	r3, r1
 8002482:	761a      	strb	r2, [r3, #24]
 8002484:	bf00      	nop
 8002486:	370c      	adds	r7, #12
 8002488:	46bd      	mov	sp, r7
 800248a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800248e:	4770      	bx	lr
 8002490:	e000e100 	.word	0xe000e100
 8002494:	e000ed00 	.word	0xe000ed00

08002498 <NVIC_EncodePriority>:
 8002498:	b480      	push	{r7}
 800249a:	b089      	sub	sp, #36	; 0x24
 800249c:	af00      	add	r7, sp, #0
 800249e:	60f8      	str	r0, [r7, #12]
 80024a0:	60b9      	str	r1, [r7, #8]
 80024a2:	607a      	str	r2, [r7, #4]
 80024a4:	68fb      	ldr	r3, [r7, #12]
 80024a6:	f003 0307 	and.w	r3, r3, #7
 80024aa:	61fb      	str	r3, [r7, #28]
 80024ac:	69fb      	ldr	r3, [r7, #28]
 80024ae:	f1c3 0307 	rsb	r3, r3, #7
 80024b2:	2b04      	cmp	r3, #4
 80024b4:	bf28      	it	cs
 80024b6:	2304      	movcs	r3, #4
 80024b8:	61bb      	str	r3, [r7, #24]
 80024ba:	69fb      	ldr	r3, [r7, #28]
 80024bc:	3304      	adds	r3, #4
 80024be:	2b06      	cmp	r3, #6
 80024c0:	d902      	bls.n	80024c8 <NVIC_EncodePriority+0x30>
 80024c2:	69fb      	ldr	r3, [r7, #28]
 80024c4:	3b03      	subs	r3, #3
 80024c6:	e000      	b.n	80024ca <NVIC_EncodePriority+0x32>
 80024c8:	2300      	movs	r3, #0
 80024ca:	617b      	str	r3, [r7, #20]
 80024cc:	f04f 32ff 	mov.w	r2, #4294967295
 80024d0:	69bb      	ldr	r3, [r7, #24]
 80024d2:	fa02 f303 	lsl.w	r3, r2, r3
 80024d6:	43da      	mvns	r2, r3
 80024d8:	68bb      	ldr	r3, [r7, #8]
 80024da:	401a      	ands	r2, r3
 80024dc:	697b      	ldr	r3, [r7, #20]
 80024de:	409a      	lsls	r2, r3
 80024e0:	f04f 31ff 	mov.w	r1, #4294967295
 80024e4:	697b      	ldr	r3, [r7, #20]
 80024e6:	fa01 f303 	lsl.w	r3, r1, r3
 80024ea:	43d9      	mvns	r1, r3
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	400b      	ands	r3, r1
 80024f0:	4313      	orrs	r3, r2
 80024f2:	4618      	mov	r0, r3
 80024f4:	3724      	adds	r7, #36	; 0x24
 80024f6:	46bd      	mov	sp, r7
 80024f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024fc:	4770      	bx	lr

080024fe <HAL_NVIC_SetPriorityGrouping>:
 80024fe:	b580      	push	{r7, lr}
 8002500:	b082      	sub	sp, #8
 8002502:	af00      	add	r7, sp, #0
 8002504:	6078      	str	r0, [r7, #4]
 8002506:	6878      	ldr	r0, [r7, #4]
 8002508:	f7ff ff4c 	bl	80023a4 <__NVIC_SetPriorityGrouping>
 800250c:	bf00      	nop
 800250e:	3708      	adds	r7, #8
 8002510:	46bd      	mov	sp, r7
 8002512:	bd80      	pop	{r7, pc}

08002514 <HAL_NVIC_SetPriority>:
 8002514:	b580      	push	{r7, lr}
 8002516:	b086      	sub	sp, #24
 8002518:	af00      	add	r7, sp, #0
 800251a:	4603      	mov	r3, r0
 800251c:	60b9      	str	r1, [r7, #8]
 800251e:	607a      	str	r2, [r7, #4]
 8002520:	73fb      	strb	r3, [r7, #15]
 8002522:	2300      	movs	r3, #0
 8002524:	617b      	str	r3, [r7, #20]
 8002526:	f7ff ff61 	bl	80023ec <__NVIC_GetPriorityGrouping>
 800252a:	6178      	str	r0, [r7, #20]
 800252c:	687a      	ldr	r2, [r7, #4]
 800252e:	68b9      	ldr	r1, [r7, #8]
 8002530:	6978      	ldr	r0, [r7, #20]
 8002532:	f7ff ffb1 	bl	8002498 <NVIC_EncodePriority>
 8002536:	4602      	mov	r2, r0
 8002538:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800253c:	4611      	mov	r1, r2
 800253e:	4618      	mov	r0, r3
 8002540:	f7ff ff80 	bl	8002444 <__NVIC_SetPriority>
 8002544:	bf00      	nop
 8002546:	3718      	adds	r7, #24
 8002548:	46bd      	mov	sp, r7
 800254a:	bd80      	pop	{r7, pc}

0800254c <HAL_NVIC_EnableIRQ>:
 800254c:	b580      	push	{r7, lr}
 800254e:	b082      	sub	sp, #8
 8002550:	af00      	add	r7, sp, #0
 8002552:	4603      	mov	r3, r0
 8002554:	71fb      	strb	r3, [r7, #7]
 8002556:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800255a:	4618      	mov	r0, r3
 800255c:	f7ff ff54 	bl	8002408 <__NVIC_EnableIRQ>
 8002560:	bf00      	nop
 8002562:	3708      	adds	r7, #8
 8002564:	46bd      	mov	sp, r7
 8002566:	bd80      	pop	{r7, pc}

08002568 <HAL_GPIO_Init>:
 8002568:	b480      	push	{r7}
 800256a:	b089      	sub	sp, #36	; 0x24
 800256c:	af00      	add	r7, sp, #0
 800256e:	6078      	str	r0, [r7, #4]
 8002570:	6039      	str	r1, [r7, #0]
 8002572:	2300      	movs	r3, #0
 8002574:	617b      	str	r3, [r7, #20]
 8002576:	2300      	movs	r3, #0
 8002578:	613b      	str	r3, [r7, #16]
 800257a:	2300      	movs	r3, #0
 800257c:	61bb      	str	r3, [r7, #24]
 800257e:	2300      	movs	r3, #0
 8002580:	61fb      	str	r3, [r7, #28]
 8002582:	e159      	b.n	8002838 <HAL_GPIO_Init+0x2d0>
 8002584:	2201      	movs	r2, #1
 8002586:	69fb      	ldr	r3, [r7, #28]
 8002588:	fa02 f303 	lsl.w	r3, r2, r3
 800258c:	617b      	str	r3, [r7, #20]
 800258e:	683b      	ldr	r3, [r7, #0]
 8002590:	681b      	ldr	r3, [r3, #0]
 8002592:	697a      	ldr	r2, [r7, #20]
 8002594:	4013      	ands	r3, r2
 8002596:	613b      	str	r3, [r7, #16]
 8002598:	693a      	ldr	r2, [r7, #16]
 800259a:	697b      	ldr	r3, [r7, #20]
 800259c:	429a      	cmp	r2, r3
 800259e:	f040 8148 	bne.w	8002832 <HAL_GPIO_Init+0x2ca>
 80025a2:	683b      	ldr	r3, [r7, #0]
 80025a4:	685b      	ldr	r3, [r3, #4]
 80025a6:	f003 0303 	and.w	r3, r3, #3
 80025aa:	2b01      	cmp	r3, #1
 80025ac:	d005      	beq.n	80025ba <HAL_GPIO_Init+0x52>
 80025ae:	683b      	ldr	r3, [r7, #0]
 80025b0:	685b      	ldr	r3, [r3, #4]
 80025b2:	f003 0303 	and.w	r3, r3, #3
 80025b6:	2b02      	cmp	r3, #2
 80025b8:	d130      	bne.n	800261c <HAL_GPIO_Init+0xb4>
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	689b      	ldr	r3, [r3, #8]
 80025be:	61bb      	str	r3, [r7, #24]
 80025c0:	69fb      	ldr	r3, [r7, #28]
 80025c2:	005b      	lsls	r3, r3, #1
 80025c4:	2203      	movs	r2, #3
 80025c6:	fa02 f303 	lsl.w	r3, r2, r3
 80025ca:	43db      	mvns	r3, r3
 80025cc:	69ba      	ldr	r2, [r7, #24]
 80025ce:	4013      	ands	r3, r2
 80025d0:	61bb      	str	r3, [r7, #24]
 80025d2:	683b      	ldr	r3, [r7, #0]
 80025d4:	68da      	ldr	r2, [r3, #12]
 80025d6:	69fb      	ldr	r3, [r7, #28]
 80025d8:	005b      	lsls	r3, r3, #1
 80025da:	fa02 f303 	lsl.w	r3, r2, r3
 80025de:	69ba      	ldr	r2, [r7, #24]
 80025e0:	4313      	orrs	r3, r2
 80025e2:	61bb      	str	r3, [r7, #24]
 80025e4:	687b      	ldr	r3, [r7, #4]
 80025e6:	69ba      	ldr	r2, [r7, #24]
 80025e8:	609a      	str	r2, [r3, #8]
 80025ea:	687b      	ldr	r3, [r7, #4]
 80025ec:	685b      	ldr	r3, [r3, #4]
 80025ee:	61bb      	str	r3, [r7, #24]
 80025f0:	2201      	movs	r2, #1
 80025f2:	69fb      	ldr	r3, [r7, #28]
 80025f4:	fa02 f303 	lsl.w	r3, r2, r3
 80025f8:	43db      	mvns	r3, r3
 80025fa:	69ba      	ldr	r2, [r7, #24]
 80025fc:	4013      	ands	r3, r2
 80025fe:	61bb      	str	r3, [r7, #24]
 8002600:	683b      	ldr	r3, [r7, #0]
 8002602:	685b      	ldr	r3, [r3, #4]
 8002604:	091b      	lsrs	r3, r3, #4
 8002606:	f003 0201 	and.w	r2, r3, #1
 800260a:	69fb      	ldr	r3, [r7, #28]
 800260c:	fa02 f303 	lsl.w	r3, r2, r3
 8002610:	69ba      	ldr	r2, [r7, #24]
 8002612:	4313      	orrs	r3, r2
 8002614:	61bb      	str	r3, [r7, #24]
 8002616:	687b      	ldr	r3, [r7, #4]
 8002618:	69ba      	ldr	r2, [r7, #24]
 800261a:	605a      	str	r2, [r3, #4]
 800261c:	683b      	ldr	r3, [r7, #0]
 800261e:	685b      	ldr	r3, [r3, #4]
 8002620:	f003 0303 	and.w	r3, r3, #3
 8002624:	2b03      	cmp	r3, #3
 8002626:	d017      	beq.n	8002658 <HAL_GPIO_Init+0xf0>
 8002628:	687b      	ldr	r3, [r7, #4]
 800262a:	68db      	ldr	r3, [r3, #12]
 800262c:	61bb      	str	r3, [r7, #24]
 800262e:	69fb      	ldr	r3, [r7, #28]
 8002630:	005b      	lsls	r3, r3, #1
 8002632:	2203      	movs	r2, #3
 8002634:	fa02 f303 	lsl.w	r3, r2, r3
 8002638:	43db      	mvns	r3, r3
 800263a:	69ba      	ldr	r2, [r7, #24]
 800263c:	4013      	ands	r3, r2
 800263e:	61bb      	str	r3, [r7, #24]
 8002640:	683b      	ldr	r3, [r7, #0]
 8002642:	689a      	ldr	r2, [r3, #8]
 8002644:	69fb      	ldr	r3, [r7, #28]
 8002646:	005b      	lsls	r3, r3, #1
 8002648:	fa02 f303 	lsl.w	r3, r2, r3
 800264c:	69ba      	ldr	r2, [r7, #24]
 800264e:	4313      	orrs	r3, r2
 8002650:	61bb      	str	r3, [r7, #24]
 8002652:	687b      	ldr	r3, [r7, #4]
 8002654:	69ba      	ldr	r2, [r7, #24]
 8002656:	60da      	str	r2, [r3, #12]
 8002658:	683b      	ldr	r3, [r7, #0]
 800265a:	685b      	ldr	r3, [r3, #4]
 800265c:	f003 0303 	and.w	r3, r3, #3
 8002660:	2b02      	cmp	r3, #2
 8002662:	d123      	bne.n	80026ac <HAL_GPIO_Init+0x144>
 8002664:	69fb      	ldr	r3, [r7, #28]
 8002666:	08da      	lsrs	r2, r3, #3
 8002668:	687b      	ldr	r3, [r7, #4]
 800266a:	3208      	adds	r2, #8
 800266c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002670:	61bb      	str	r3, [r7, #24]
 8002672:	69fb      	ldr	r3, [r7, #28]
 8002674:	f003 0307 	and.w	r3, r3, #7
 8002678:	009b      	lsls	r3, r3, #2
 800267a:	220f      	movs	r2, #15
 800267c:	fa02 f303 	lsl.w	r3, r2, r3
 8002680:	43db      	mvns	r3, r3
 8002682:	69ba      	ldr	r2, [r7, #24]
 8002684:	4013      	ands	r3, r2
 8002686:	61bb      	str	r3, [r7, #24]
 8002688:	683b      	ldr	r3, [r7, #0]
 800268a:	691a      	ldr	r2, [r3, #16]
 800268c:	69fb      	ldr	r3, [r7, #28]
 800268e:	f003 0307 	and.w	r3, r3, #7
 8002692:	009b      	lsls	r3, r3, #2
 8002694:	fa02 f303 	lsl.w	r3, r2, r3
 8002698:	69ba      	ldr	r2, [r7, #24]
 800269a:	4313      	orrs	r3, r2
 800269c:	61bb      	str	r3, [r7, #24]
 800269e:	69fb      	ldr	r3, [r7, #28]
 80026a0:	08da      	lsrs	r2, r3, #3
 80026a2:	687b      	ldr	r3, [r7, #4]
 80026a4:	3208      	adds	r2, #8
 80026a6:	69b9      	ldr	r1, [r7, #24]
 80026a8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80026ac:	687b      	ldr	r3, [r7, #4]
 80026ae:	681b      	ldr	r3, [r3, #0]
 80026b0:	61bb      	str	r3, [r7, #24]
 80026b2:	69fb      	ldr	r3, [r7, #28]
 80026b4:	005b      	lsls	r3, r3, #1
 80026b6:	2203      	movs	r2, #3
 80026b8:	fa02 f303 	lsl.w	r3, r2, r3
 80026bc:	43db      	mvns	r3, r3
 80026be:	69ba      	ldr	r2, [r7, #24]
 80026c0:	4013      	ands	r3, r2
 80026c2:	61bb      	str	r3, [r7, #24]
 80026c4:	683b      	ldr	r3, [r7, #0]
 80026c6:	685b      	ldr	r3, [r3, #4]
 80026c8:	f003 0203 	and.w	r2, r3, #3
 80026cc:	69fb      	ldr	r3, [r7, #28]
 80026ce:	005b      	lsls	r3, r3, #1
 80026d0:	fa02 f303 	lsl.w	r3, r2, r3
 80026d4:	69ba      	ldr	r2, [r7, #24]
 80026d6:	4313      	orrs	r3, r2
 80026d8:	61bb      	str	r3, [r7, #24]
 80026da:	687b      	ldr	r3, [r7, #4]
 80026dc:	69ba      	ldr	r2, [r7, #24]
 80026de:	601a      	str	r2, [r3, #0]
 80026e0:	683b      	ldr	r3, [r7, #0]
 80026e2:	685b      	ldr	r3, [r3, #4]
 80026e4:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80026e8:	2b00      	cmp	r3, #0
 80026ea:	f000 80a2 	beq.w	8002832 <HAL_GPIO_Init+0x2ca>
 80026ee:	2300      	movs	r3, #0
 80026f0:	60fb      	str	r3, [r7, #12]
 80026f2:	4b57      	ldr	r3, [pc, #348]	; (8002850 <HAL_GPIO_Init+0x2e8>)
 80026f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80026f6:	4a56      	ldr	r2, [pc, #344]	; (8002850 <HAL_GPIO_Init+0x2e8>)
 80026f8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80026fc:	6453      	str	r3, [r2, #68]	; 0x44
 80026fe:	4b54      	ldr	r3, [pc, #336]	; (8002850 <HAL_GPIO_Init+0x2e8>)
 8002700:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002702:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002706:	60fb      	str	r3, [r7, #12]
 8002708:	68fb      	ldr	r3, [r7, #12]
 800270a:	4a52      	ldr	r2, [pc, #328]	; (8002854 <HAL_GPIO_Init+0x2ec>)
 800270c:	69fb      	ldr	r3, [r7, #28]
 800270e:	089b      	lsrs	r3, r3, #2
 8002710:	3302      	adds	r3, #2
 8002712:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002716:	61bb      	str	r3, [r7, #24]
 8002718:	69fb      	ldr	r3, [r7, #28]
 800271a:	f003 0303 	and.w	r3, r3, #3
 800271e:	009b      	lsls	r3, r3, #2
 8002720:	220f      	movs	r2, #15
 8002722:	fa02 f303 	lsl.w	r3, r2, r3
 8002726:	43db      	mvns	r3, r3
 8002728:	69ba      	ldr	r2, [r7, #24]
 800272a:	4013      	ands	r3, r2
 800272c:	61bb      	str	r3, [r7, #24]
 800272e:	687b      	ldr	r3, [r7, #4]
 8002730:	4a49      	ldr	r2, [pc, #292]	; (8002858 <HAL_GPIO_Init+0x2f0>)
 8002732:	4293      	cmp	r3, r2
 8002734:	d019      	beq.n	800276a <HAL_GPIO_Init+0x202>
 8002736:	687b      	ldr	r3, [r7, #4]
 8002738:	4a48      	ldr	r2, [pc, #288]	; (800285c <HAL_GPIO_Init+0x2f4>)
 800273a:	4293      	cmp	r3, r2
 800273c:	d013      	beq.n	8002766 <HAL_GPIO_Init+0x1fe>
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	4a47      	ldr	r2, [pc, #284]	; (8002860 <HAL_GPIO_Init+0x2f8>)
 8002742:	4293      	cmp	r3, r2
 8002744:	d00d      	beq.n	8002762 <HAL_GPIO_Init+0x1fa>
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	4a46      	ldr	r2, [pc, #280]	; (8002864 <HAL_GPIO_Init+0x2fc>)
 800274a:	4293      	cmp	r3, r2
 800274c:	d007      	beq.n	800275e <HAL_GPIO_Init+0x1f6>
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	4a45      	ldr	r2, [pc, #276]	; (8002868 <HAL_GPIO_Init+0x300>)
 8002752:	4293      	cmp	r3, r2
 8002754:	d101      	bne.n	800275a <HAL_GPIO_Init+0x1f2>
 8002756:	2304      	movs	r3, #4
 8002758:	e008      	b.n	800276c <HAL_GPIO_Init+0x204>
 800275a:	2307      	movs	r3, #7
 800275c:	e006      	b.n	800276c <HAL_GPIO_Init+0x204>
 800275e:	2303      	movs	r3, #3
 8002760:	e004      	b.n	800276c <HAL_GPIO_Init+0x204>
 8002762:	2302      	movs	r3, #2
 8002764:	e002      	b.n	800276c <HAL_GPIO_Init+0x204>
 8002766:	2301      	movs	r3, #1
 8002768:	e000      	b.n	800276c <HAL_GPIO_Init+0x204>
 800276a:	2300      	movs	r3, #0
 800276c:	69fa      	ldr	r2, [r7, #28]
 800276e:	f002 0203 	and.w	r2, r2, #3
 8002772:	0092      	lsls	r2, r2, #2
 8002774:	4093      	lsls	r3, r2
 8002776:	69ba      	ldr	r2, [r7, #24]
 8002778:	4313      	orrs	r3, r2
 800277a:	61bb      	str	r3, [r7, #24]
 800277c:	4935      	ldr	r1, [pc, #212]	; (8002854 <HAL_GPIO_Init+0x2ec>)
 800277e:	69fb      	ldr	r3, [r7, #28]
 8002780:	089b      	lsrs	r3, r3, #2
 8002782:	3302      	adds	r3, #2
 8002784:	69ba      	ldr	r2, [r7, #24]
 8002786:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800278a:	4b38      	ldr	r3, [pc, #224]	; (800286c <HAL_GPIO_Init+0x304>)
 800278c:	689b      	ldr	r3, [r3, #8]
 800278e:	61bb      	str	r3, [r7, #24]
 8002790:	693b      	ldr	r3, [r7, #16]
 8002792:	43db      	mvns	r3, r3
 8002794:	69ba      	ldr	r2, [r7, #24]
 8002796:	4013      	ands	r3, r2
 8002798:	61bb      	str	r3, [r7, #24]
 800279a:	683b      	ldr	r3, [r7, #0]
 800279c:	685b      	ldr	r3, [r3, #4]
 800279e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80027a2:	2b00      	cmp	r3, #0
 80027a4:	d003      	beq.n	80027ae <HAL_GPIO_Init+0x246>
 80027a6:	69ba      	ldr	r2, [r7, #24]
 80027a8:	693b      	ldr	r3, [r7, #16]
 80027aa:	4313      	orrs	r3, r2
 80027ac:	61bb      	str	r3, [r7, #24]
 80027ae:	4a2f      	ldr	r2, [pc, #188]	; (800286c <HAL_GPIO_Init+0x304>)
 80027b0:	69bb      	ldr	r3, [r7, #24]
 80027b2:	6093      	str	r3, [r2, #8]
 80027b4:	4b2d      	ldr	r3, [pc, #180]	; (800286c <HAL_GPIO_Init+0x304>)
 80027b6:	68db      	ldr	r3, [r3, #12]
 80027b8:	61bb      	str	r3, [r7, #24]
 80027ba:	693b      	ldr	r3, [r7, #16]
 80027bc:	43db      	mvns	r3, r3
 80027be:	69ba      	ldr	r2, [r7, #24]
 80027c0:	4013      	ands	r3, r2
 80027c2:	61bb      	str	r3, [r7, #24]
 80027c4:	683b      	ldr	r3, [r7, #0]
 80027c6:	685b      	ldr	r3, [r3, #4]
 80027c8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80027cc:	2b00      	cmp	r3, #0
 80027ce:	d003      	beq.n	80027d8 <HAL_GPIO_Init+0x270>
 80027d0:	69ba      	ldr	r2, [r7, #24]
 80027d2:	693b      	ldr	r3, [r7, #16]
 80027d4:	4313      	orrs	r3, r2
 80027d6:	61bb      	str	r3, [r7, #24]
 80027d8:	4a24      	ldr	r2, [pc, #144]	; (800286c <HAL_GPIO_Init+0x304>)
 80027da:	69bb      	ldr	r3, [r7, #24]
 80027dc:	60d3      	str	r3, [r2, #12]
 80027de:	4b23      	ldr	r3, [pc, #140]	; (800286c <HAL_GPIO_Init+0x304>)
 80027e0:	685b      	ldr	r3, [r3, #4]
 80027e2:	61bb      	str	r3, [r7, #24]
 80027e4:	693b      	ldr	r3, [r7, #16]
 80027e6:	43db      	mvns	r3, r3
 80027e8:	69ba      	ldr	r2, [r7, #24]
 80027ea:	4013      	ands	r3, r2
 80027ec:	61bb      	str	r3, [r7, #24]
 80027ee:	683b      	ldr	r3, [r7, #0]
 80027f0:	685b      	ldr	r3, [r3, #4]
 80027f2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80027f6:	2b00      	cmp	r3, #0
 80027f8:	d003      	beq.n	8002802 <HAL_GPIO_Init+0x29a>
 80027fa:	69ba      	ldr	r2, [r7, #24]
 80027fc:	693b      	ldr	r3, [r7, #16]
 80027fe:	4313      	orrs	r3, r2
 8002800:	61bb      	str	r3, [r7, #24]
 8002802:	4a1a      	ldr	r2, [pc, #104]	; (800286c <HAL_GPIO_Init+0x304>)
 8002804:	69bb      	ldr	r3, [r7, #24]
 8002806:	6053      	str	r3, [r2, #4]
 8002808:	4b18      	ldr	r3, [pc, #96]	; (800286c <HAL_GPIO_Init+0x304>)
 800280a:	681b      	ldr	r3, [r3, #0]
 800280c:	61bb      	str	r3, [r7, #24]
 800280e:	693b      	ldr	r3, [r7, #16]
 8002810:	43db      	mvns	r3, r3
 8002812:	69ba      	ldr	r2, [r7, #24]
 8002814:	4013      	ands	r3, r2
 8002816:	61bb      	str	r3, [r7, #24]
 8002818:	683b      	ldr	r3, [r7, #0]
 800281a:	685b      	ldr	r3, [r3, #4]
 800281c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002820:	2b00      	cmp	r3, #0
 8002822:	d003      	beq.n	800282c <HAL_GPIO_Init+0x2c4>
 8002824:	69ba      	ldr	r2, [r7, #24]
 8002826:	693b      	ldr	r3, [r7, #16]
 8002828:	4313      	orrs	r3, r2
 800282a:	61bb      	str	r3, [r7, #24]
 800282c:	4a0f      	ldr	r2, [pc, #60]	; (800286c <HAL_GPIO_Init+0x304>)
 800282e:	69bb      	ldr	r3, [r7, #24]
 8002830:	6013      	str	r3, [r2, #0]
 8002832:	69fb      	ldr	r3, [r7, #28]
 8002834:	3301      	adds	r3, #1
 8002836:	61fb      	str	r3, [r7, #28]
 8002838:	69fb      	ldr	r3, [r7, #28]
 800283a:	2b0f      	cmp	r3, #15
 800283c:	f67f aea2 	bls.w	8002584 <HAL_GPIO_Init+0x1c>
 8002840:	bf00      	nop
 8002842:	bf00      	nop
 8002844:	3724      	adds	r7, #36	; 0x24
 8002846:	46bd      	mov	sp, r7
 8002848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800284c:	4770      	bx	lr
 800284e:	bf00      	nop
 8002850:	40023800 	.word	0x40023800
 8002854:	40013800 	.word	0x40013800
 8002858:	40020000 	.word	0x40020000
 800285c:	40020400 	.word	0x40020400
 8002860:	40020800 	.word	0x40020800
 8002864:	40020c00 	.word	0x40020c00
 8002868:	40021000 	.word	0x40021000
 800286c:	40013c00 	.word	0x40013c00

08002870 <HAL_RCC_OscConfig>:
 8002870:	b580      	push	{r7, lr}
 8002872:	b086      	sub	sp, #24
 8002874:	af00      	add	r7, sp, #0
 8002876:	6078      	str	r0, [r7, #4]
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	2b00      	cmp	r3, #0
 800287c:	d101      	bne.n	8002882 <HAL_RCC_OscConfig+0x12>
 800287e:	2301      	movs	r3, #1
 8002880:	e267      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	681b      	ldr	r3, [r3, #0]
 8002886:	f003 0301 	and.w	r3, r3, #1
 800288a:	2b00      	cmp	r3, #0
 800288c:	d075      	beq.n	800297a <HAL_RCC_OscConfig+0x10a>
 800288e:	4b88      	ldr	r3, [pc, #544]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 8002890:	689b      	ldr	r3, [r3, #8]
 8002892:	f003 030c 	and.w	r3, r3, #12
 8002896:	2b04      	cmp	r3, #4
 8002898:	d00c      	beq.n	80028b4 <HAL_RCC_OscConfig+0x44>
 800289a:	4b85      	ldr	r3, [pc, #532]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 800289c:	689b      	ldr	r3, [r3, #8]
 800289e:	f003 030c 	and.w	r3, r3, #12
 80028a2:	2b08      	cmp	r3, #8
 80028a4:	d112      	bne.n	80028cc <HAL_RCC_OscConfig+0x5c>
 80028a6:	4b82      	ldr	r3, [pc, #520]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 80028a8:	685b      	ldr	r3, [r3, #4]
 80028aa:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80028ae:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80028b2:	d10b      	bne.n	80028cc <HAL_RCC_OscConfig+0x5c>
 80028b4:	4b7e      	ldr	r3, [pc, #504]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80028bc:	2b00      	cmp	r3, #0
 80028be:	d05b      	beq.n	8002978 <HAL_RCC_OscConfig+0x108>
 80028c0:	687b      	ldr	r3, [r7, #4]
 80028c2:	685b      	ldr	r3, [r3, #4]
 80028c4:	2b00      	cmp	r3, #0
 80028c6:	d157      	bne.n	8002978 <HAL_RCC_OscConfig+0x108>
 80028c8:	2301      	movs	r3, #1
 80028ca:	e242      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 80028cc:	687b      	ldr	r3, [r7, #4]
 80028ce:	685b      	ldr	r3, [r3, #4]
 80028d0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80028d4:	d106      	bne.n	80028e4 <HAL_RCC_OscConfig+0x74>
 80028d6:	4b76      	ldr	r3, [pc, #472]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 80028d8:	681b      	ldr	r3, [r3, #0]
 80028da:	4a75      	ldr	r2, [pc, #468]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 80028dc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80028e0:	6013      	str	r3, [r2, #0]
 80028e2:	e01d      	b.n	8002920 <HAL_RCC_OscConfig+0xb0>
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	685b      	ldr	r3, [r3, #4]
 80028e8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80028ec:	d10c      	bne.n	8002908 <HAL_RCC_OscConfig+0x98>
 80028ee:	4b70      	ldr	r3, [pc, #448]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 80028f0:	681b      	ldr	r3, [r3, #0]
 80028f2:	4a6f      	ldr	r2, [pc, #444]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 80028f4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80028f8:	6013      	str	r3, [r2, #0]
 80028fa:	4b6d      	ldr	r3, [pc, #436]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 80028fc:	681b      	ldr	r3, [r3, #0]
 80028fe:	4a6c      	ldr	r2, [pc, #432]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 8002900:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002904:	6013      	str	r3, [r2, #0]
 8002906:	e00b      	b.n	8002920 <HAL_RCC_OscConfig+0xb0>
 8002908:	4b69      	ldr	r3, [pc, #420]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 800290a:	681b      	ldr	r3, [r3, #0]
 800290c:	4a68      	ldr	r2, [pc, #416]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 800290e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002912:	6013      	str	r3, [r2, #0]
 8002914:	4b66      	ldr	r3, [pc, #408]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 8002916:	681b      	ldr	r3, [r3, #0]
 8002918:	4a65      	ldr	r2, [pc, #404]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 800291a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800291e:	6013      	str	r3, [r2, #0]
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	685b      	ldr	r3, [r3, #4]
 8002924:	2b00      	cmp	r3, #0
 8002926:	d013      	beq.n	8002950 <HAL_RCC_OscConfig+0xe0>
 8002928:	f7ff fd0c 	bl	8002344 <HAL_GetTick>
 800292c:	6138      	str	r0, [r7, #16]
 800292e:	e008      	b.n	8002942 <HAL_RCC_OscConfig+0xd2>
 8002930:	f7ff fd08 	bl	8002344 <HAL_GetTick>
 8002934:	4602      	mov	r2, r0
 8002936:	693b      	ldr	r3, [r7, #16]
 8002938:	1ad3      	subs	r3, r2, r3
 800293a:	2b64      	cmp	r3, #100	; 0x64
 800293c:	d901      	bls.n	8002942 <HAL_RCC_OscConfig+0xd2>
 800293e:	2303      	movs	r3, #3
 8002940:	e207      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 8002942:	4b5b      	ldr	r3, [pc, #364]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 8002944:	681b      	ldr	r3, [r3, #0]
 8002946:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800294a:	2b00      	cmp	r3, #0
 800294c:	d0f0      	beq.n	8002930 <HAL_RCC_OscConfig+0xc0>
 800294e:	e014      	b.n	800297a <HAL_RCC_OscConfig+0x10a>
 8002950:	f7ff fcf8 	bl	8002344 <HAL_GetTick>
 8002954:	6138      	str	r0, [r7, #16]
 8002956:	e008      	b.n	800296a <HAL_RCC_OscConfig+0xfa>
 8002958:	f7ff fcf4 	bl	8002344 <HAL_GetTick>
 800295c:	4602      	mov	r2, r0
 800295e:	693b      	ldr	r3, [r7, #16]
 8002960:	1ad3      	subs	r3, r2, r3
 8002962:	2b64      	cmp	r3, #100	; 0x64
 8002964:	d901      	bls.n	800296a <HAL_RCC_OscConfig+0xfa>
 8002966:	2303      	movs	r3, #3
 8002968:	e1f3      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 800296a:	4b51      	ldr	r3, [pc, #324]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 800296c:	681b      	ldr	r3, [r3, #0]
 800296e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002972:	2b00      	cmp	r3, #0
 8002974:	d1f0      	bne.n	8002958 <HAL_RCC_OscConfig+0xe8>
 8002976:	e000      	b.n	800297a <HAL_RCC_OscConfig+0x10a>
 8002978:	bf00      	nop
 800297a:	687b      	ldr	r3, [r7, #4]
 800297c:	681b      	ldr	r3, [r3, #0]
 800297e:	f003 0302 	and.w	r3, r3, #2
 8002982:	2b00      	cmp	r3, #0
 8002984:	d063      	beq.n	8002a4e <HAL_RCC_OscConfig+0x1de>
 8002986:	4b4a      	ldr	r3, [pc, #296]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 8002988:	689b      	ldr	r3, [r3, #8]
 800298a:	f003 030c 	and.w	r3, r3, #12
 800298e:	2b00      	cmp	r3, #0
 8002990:	d00b      	beq.n	80029aa <HAL_RCC_OscConfig+0x13a>
 8002992:	4b47      	ldr	r3, [pc, #284]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 8002994:	689b      	ldr	r3, [r3, #8]
 8002996:	f003 030c 	and.w	r3, r3, #12
 800299a:	2b08      	cmp	r3, #8
 800299c:	d11c      	bne.n	80029d8 <HAL_RCC_OscConfig+0x168>
 800299e:	4b44      	ldr	r3, [pc, #272]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 80029a0:	685b      	ldr	r3, [r3, #4]
 80029a2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80029a6:	2b00      	cmp	r3, #0
 80029a8:	d116      	bne.n	80029d8 <HAL_RCC_OscConfig+0x168>
 80029aa:	4b41      	ldr	r3, [pc, #260]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 80029ac:	681b      	ldr	r3, [r3, #0]
 80029ae:	f003 0302 	and.w	r3, r3, #2
 80029b2:	2b00      	cmp	r3, #0
 80029b4:	d005      	beq.n	80029c2 <HAL_RCC_OscConfig+0x152>
 80029b6:	687b      	ldr	r3, [r7, #4]
 80029b8:	68db      	ldr	r3, [r3, #12]
 80029ba:	2b01      	cmp	r3, #1
 80029bc:	d001      	beq.n	80029c2 <HAL_RCC_OscConfig+0x152>
 80029be:	2301      	movs	r3, #1
 80029c0:	e1c7      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 80029c2:	4b3b      	ldr	r3, [pc, #236]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 80029c4:	681b      	ldr	r3, [r3, #0]
 80029c6:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	691b      	ldr	r3, [r3, #16]
 80029ce:	00db      	lsls	r3, r3, #3
 80029d0:	4937      	ldr	r1, [pc, #220]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 80029d2:	4313      	orrs	r3, r2
 80029d4:	600b      	str	r3, [r1, #0]
 80029d6:	e03a      	b.n	8002a4e <HAL_RCC_OscConfig+0x1de>
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	68db      	ldr	r3, [r3, #12]
 80029dc:	2b00      	cmp	r3, #0
 80029de:	d020      	beq.n	8002a22 <HAL_RCC_OscConfig+0x1b2>
 80029e0:	4b34      	ldr	r3, [pc, #208]	; (8002ab4 <HAL_RCC_OscConfig+0x244>)
 80029e2:	2201      	movs	r2, #1
 80029e4:	601a      	str	r2, [r3, #0]
 80029e6:	f7ff fcad 	bl	8002344 <HAL_GetTick>
 80029ea:	6138      	str	r0, [r7, #16]
 80029ec:	e008      	b.n	8002a00 <HAL_RCC_OscConfig+0x190>
 80029ee:	f7ff fca9 	bl	8002344 <HAL_GetTick>
 80029f2:	4602      	mov	r2, r0
 80029f4:	693b      	ldr	r3, [r7, #16]
 80029f6:	1ad3      	subs	r3, r2, r3
 80029f8:	2b02      	cmp	r3, #2
 80029fa:	d901      	bls.n	8002a00 <HAL_RCC_OscConfig+0x190>
 80029fc:	2303      	movs	r3, #3
 80029fe:	e1a8      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 8002a00:	4b2b      	ldr	r3, [pc, #172]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 8002a02:	681b      	ldr	r3, [r3, #0]
 8002a04:	f003 0302 	and.w	r3, r3, #2
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	d0f0      	beq.n	80029ee <HAL_RCC_OscConfig+0x17e>
 8002a0c:	4b28      	ldr	r3, [pc, #160]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 8002a0e:	681b      	ldr	r3, [r3, #0]
 8002a10:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	691b      	ldr	r3, [r3, #16]
 8002a18:	00db      	lsls	r3, r3, #3
 8002a1a:	4925      	ldr	r1, [pc, #148]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 8002a1c:	4313      	orrs	r3, r2
 8002a1e:	600b      	str	r3, [r1, #0]
 8002a20:	e015      	b.n	8002a4e <HAL_RCC_OscConfig+0x1de>
 8002a22:	4b24      	ldr	r3, [pc, #144]	; (8002ab4 <HAL_RCC_OscConfig+0x244>)
 8002a24:	2200      	movs	r2, #0
 8002a26:	601a      	str	r2, [r3, #0]
 8002a28:	f7ff fc8c 	bl	8002344 <HAL_GetTick>
 8002a2c:	6138      	str	r0, [r7, #16]
 8002a2e:	e008      	b.n	8002a42 <HAL_RCC_OscConfig+0x1d2>
 8002a30:	f7ff fc88 	bl	8002344 <HAL_GetTick>
 8002a34:	4602      	mov	r2, r0
 8002a36:	693b      	ldr	r3, [r7, #16]
 8002a38:	1ad3      	subs	r3, r2, r3
 8002a3a:	2b02      	cmp	r3, #2
 8002a3c:	d901      	bls.n	8002a42 <HAL_RCC_OscConfig+0x1d2>
 8002a3e:	2303      	movs	r3, #3
 8002a40:	e187      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 8002a42:	4b1b      	ldr	r3, [pc, #108]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 8002a44:	681b      	ldr	r3, [r3, #0]
 8002a46:	f003 0302 	and.w	r3, r3, #2
 8002a4a:	2b00      	cmp	r3, #0
 8002a4c:	d1f0      	bne.n	8002a30 <HAL_RCC_OscConfig+0x1c0>
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	f003 0308 	and.w	r3, r3, #8
 8002a56:	2b00      	cmp	r3, #0
 8002a58:	d036      	beq.n	8002ac8 <HAL_RCC_OscConfig+0x258>
 8002a5a:	687b      	ldr	r3, [r7, #4]
 8002a5c:	695b      	ldr	r3, [r3, #20]
 8002a5e:	2b00      	cmp	r3, #0
 8002a60:	d016      	beq.n	8002a90 <HAL_RCC_OscConfig+0x220>
 8002a62:	4b15      	ldr	r3, [pc, #84]	; (8002ab8 <HAL_RCC_OscConfig+0x248>)
 8002a64:	2201      	movs	r2, #1
 8002a66:	601a      	str	r2, [r3, #0]
 8002a68:	f7ff fc6c 	bl	8002344 <HAL_GetTick>
 8002a6c:	6138      	str	r0, [r7, #16]
 8002a6e:	e008      	b.n	8002a82 <HAL_RCC_OscConfig+0x212>
 8002a70:	f7ff fc68 	bl	8002344 <HAL_GetTick>
 8002a74:	4602      	mov	r2, r0
 8002a76:	693b      	ldr	r3, [r7, #16]
 8002a78:	1ad3      	subs	r3, r2, r3
 8002a7a:	2b02      	cmp	r3, #2
 8002a7c:	d901      	bls.n	8002a82 <HAL_RCC_OscConfig+0x212>
 8002a7e:	2303      	movs	r3, #3
 8002a80:	e167      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 8002a82:	4b0b      	ldr	r3, [pc, #44]	; (8002ab0 <HAL_RCC_OscConfig+0x240>)
 8002a84:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002a86:	f003 0302 	and.w	r3, r3, #2
 8002a8a:	2b00      	cmp	r3, #0
 8002a8c:	d0f0      	beq.n	8002a70 <HAL_RCC_OscConfig+0x200>
 8002a8e:	e01b      	b.n	8002ac8 <HAL_RCC_OscConfig+0x258>
 8002a90:	4b09      	ldr	r3, [pc, #36]	; (8002ab8 <HAL_RCC_OscConfig+0x248>)
 8002a92:	2200      	movs	r2, #0
 8002a94:	601a      	str	r2, [r3, #0]
 8002a96:	f7ff fc55 	bl	8002344 <HAL_GetTick>
 8002a9a:	6138      	str	r0, [r7, #16]
 8002a9c:	e00e      	b.n	8002abc <HAL_RCC_OscConfig+0x24c>
 8002a9e:	f7ff fc51 	bl	8002344 <HAL_GetTick>
 8002aa2:	4602      	mov	r2, r0
 8002aa4:	693b      	ldr	r3, [r7, #16]
 8002aa6:	1ad3      	subs	r3, r2, r3
 8002aa8:	2b02      	cmp	r3, #2
 8002aaa:	d907      	bls.n	8002abc <HAL_RCC_OscConfig+0x24c>
 8002aac:	2303      	movs	r3, #3
 8002aae:	e150      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 8002ab0:	40023800 	.word	0x40023800
 8002ab4:	42470000 	.word	0x42470000
 8002ab8:	42470e80 	.word	0x42470e80
 8002abc:	4b88      	ldr	r3, [pc, #544]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002abe:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002ac0:	f003 0302 	and.w	r3, r3, #2
 8002ac4:	2b00      	cmp	r3, #0
 8002ac6:	d1ea      	bne.n	8002a9e <HAL_RCC_OscConfig+0x22e>
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	f003 0304 	and.w	r3, r3, #4
 8002ad0:	2b00      	cmp	r3, #0
 8002ad2:	f000 8097 	beq.w	8002c04 <HAL_RCC_OscConfig+0x394>
 8002ad6:	2300      	movs	r3, #0
 8002ad8:	75fb      	strb	r3, [r7, #23]
 8002ada:	4b81      	ldr	r3, [pc, #516]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002adc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ade:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002ae2:	2b00      	cmp	r3, #0
 8002ae4:	d10f      	bne.n	8002b06 <HAL_RCC_OscConfig+0x296>
 8002ae6:	2300      	movs	r3, #0
 8002ae8:	60bb      	str	r3, [r7, #8]
 8002aea:	4b7d      	ldr	r3, [pc, #500]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002aec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002aee:	4a7c      	ldr	r2, [pc, #496]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002af0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002af4:	6413      	str	r3, [r2, #64]	; 0x40
 8002af6:	4b7a      	ldr	r3, [pc, #488]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002af8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002afa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002afe:	60bb      	str	r3, [r7, #8]
 8002b00:	68bb      	ldr	r3, [r7, #8]
 8002b02:	2301      	movs	r3, #1
 8002b04:	75fb      	strb	r3, [r7, #23]
 8002b06:	4b77      	ldr	r3, [pc, #476]	; (8002ce4 <HAL_RCC_OscConfig+0x474>)
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002b0e:	2b00      	cmp	r3, #0
 8002b10:	d118      	bne.n	8002b44 <HAL_RCC_OscConfig+0x2d4>
 8002b12:	4b74      	ldr	r3, [pc, #464]	; (8002ce4 <HAL_RCC_OscConfig+0x474>)
 8002b14:	681b      	ldr	r3, [r3, #0]
 8002b16:	4a73      	ldr	r2, [pc, #460]	; (8002ce4 <HAL_RCC_OscConfig+0x474>)
 8002b18:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002b1c:	6013      	str	r3, [r2, #0]
 8002b1e:	f7ff fc11 	bl	8002344 <HAL_GetTick>
 8002b22:	6138      	str	r0, [r7, #16]
 8002b24:	e008      	b.n	8002b38 <HAL_RCC_OscConfig+0x2c8>
 8002b26:	f7ff fc0d 	bl	8002344 <HAL_GetTick>
 8002b2a:	4602      	mov	r2, r0
 8002b2c:	693b      	ldr	r3, [r7, #16]
 8002b2e:	1ad3      	subs	r3, r2, r3
 8002b30:	2b02      	cmp	r3, #2
 8002b32:	d901      	bls.n	8002b38 <HAL_RCC_OscConfig+0x2c8>
 8002b34:	2303      	movs	r3, #3
 8002b36:	e10c      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 8002b38:	4b6a      	ldr	r3, [pc, #424]	; (8002ce4 <HAL_RCC_OscConfig+0x474>)
 8002b3a:	681b      	ldr	r3, [r3, #0]
 8002b3c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002b40:	2b00      	cmp	r3, #0
 8002b42:	d0f0      	beq.n	8002b26 <HAL_RCC_OscConfig+0x2b6>
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	689b      	ldr	r3, [r3, #8]
 8002b48:	2b01      	cmp	r3, #1
 8002b4a:	d106      	bne.n	8002b5a <HAL_RCC_OscConfig+0x2ea>
 8002b4c:	4b64      	ldr	r3, [pc, #400]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002b4e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002b50:	4a63      	ldr	r2, [pc, #396]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002b52:	f043 0301 	orr.w	r3, r3, #1
 8002b56:	6713      	str	r3, [r2, #112]	; 0x70
 8002b58:	e01c      	b.n	8002b94 <HAL_RCC_OscConfig+0x324>
 8002b5a:	687b      	ldr	r3, [r7, #4]
 8002b5c:	689b      	ldr	r3, [r3, #8]
 8002b5e:	2b05      	cmp	r3, #5
 8002b60:	d10c      	bne.n	8002b7c <HAL_RCC_OscConfig+0x30c>
 8002b62:	4b5f      	ldr	r3, [pc, #380]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002b64:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002b66:	4a5e      	ldr	r2, [pc, #376]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002b68:	f043 0304 	orr.w	r3, r3, #4
 8002b6c:	6713      	str	r3, [r2, #112]	; 0x70
 8002b6e:	4b5c      	ldr	r3, [pc, #368]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002b70:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002b72:	4a5b      	ldr	r2, [pc, #364]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002b74:	f043 0301 	orr.w	r3, r3, #1
 8002b78:	6713      	str	r3, [r2, #112]	; 0x70
 8002b7a:	e00b      	b.n	8002b94 <HAL_RCC_OscConfig+0x324>
 8002b7c:	4b58      	ldr	r3, [pc, #352]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002b7e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002b80:	4a57      	ldr	r2, [pc, #348]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002b82:	f023 0301 	bic.w	r3, r3, #1
 8002b86:	6713      	str	r3, [r2, #112]	; 0x70
 8002b88:	4b55      	ldr	r3, [pc, #340]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002b8a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002b8c:	4a54      	ldr	r2, [pc, #336]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002b8e:	f023 0304 	bic.w	r3, r3, #4
 8002b92:	6713      	str	r3, [r2, #112]	; 0x70
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	689b      	ldr	r3, [r3, #8]
 8002b98:	2b00      	cmp	r3, #0
 8002b9a:	d015      	beq.n	8002bc8 <HAL_RCC_OscConfig+0x358>
 8002b9c:	f7ff fbd2 	bl	8002344 <HAL_GetTick>
 8002ba0:	6138      	str	r0, [r7, #16]
 8002ba2:	e00a      	b.n	8002bba <HAL_RCC_OscConfig+0x34a>
 8002ba4:	f7ff fbce 	bl	8002344 <HAL_GetTick>
 8002ba8:	4602      	mov	r2, r0
 8002baa:	693b      	ldr	r3, [r7, #16]
 8002bac:	1ad3      	subs	r3, r2, r3
 8002bae:	f241 3288 	movw	r2, #5000	; 0x1388
 8002bb2:	4293      	cmp	r3, r2
 8002bb4:	d901      	bls.n	8002bba <HAL_RCC_OscConfig+0x34a>
 8002bb6:	2303      	movs	r3, #3
 8002bb8:	e0cb      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 8002bba:	4b49      	ldr	r3, [pc, #292]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002bbc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002bbe:	f003 0302 	and.w	r3, r3, #2
 8002bc2:	2b00      	cmp	r3, #0
 8002bc4:	d0ee      	beq.n	8002ba4 <HAL_RCC_OscConfig+0x334>
 8002bc6:	e014      	b.n	8002bf2 <HAL_RCC_OscConfig+0x382>
 8002bc8:	f7ff fbbc 	bl	8002344 <HAL_GetTick>
 8002bcc:	6138      	str	r0, [r7, #16]
 8002bce:	e00a      	b.n	8002be6 <HAL_RCC_OscConfig+0x376>
 8002bd0:	f7ff fbb8 	bl	8002344 <HAL_GetTick>
 8002bd4:	4602      	mov	r2, r0
 8002bd6:	693b      	ldr	r3, [r7, #16]
 8002bd8:	1ad3      	subs	r3, r2, r3
 8002bda:	f241 3288 	movw	r2, #5000	; 0x1388
 8002bde:	4293      	cmp	r3, r2
 8002be0:	d901      	bls.n	8002be6 <HAL_RCC_OscConfig+0x376>
 8002be2:	2303      	movs	r3, #3
 8002be4:	e0b5      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 8002be6:	4b3e      	ldr	r3, [pc, #248]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002be8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002bea:	f003 0302 	and.w	r3, r3, #2
 8002bee:	2b00      	cmp	r3, #0
 8002bf0:	d1ee      	bne.n	8002bd0 <HAL_RCC_OscConfig+0x360>
 8002bf2:	7dfb      	ldrb	r3, [r7, #23]
 8002bf4:	2b01      	cmp	r3, #1
 8002bf6:	d105      	bne.n	8002c04 <HAL_RCC_OscConfig+0x394>
 8002bf8:	4b39      	ldr	r3, [pc, #228]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002bfa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bfc:	4a38      	ldr	r2, [pc, #224]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002bfe:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002c02:	6413      	str	r3, [r2, #64]	; 0x40
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	699b      	ldr	r3, [r3, #24]
 8002c08:	2b00      	cmp	r3, #0
 8002c0a:	f000 80a1 	beq.w	8002d50 <HAL_RCC_OscConfig+0x4e0>
 8002c0e:	4b34      	ldr	r3, [pc, #208]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002c10:	689b      	ldr	r3, [r3, #8]
 8002c12:	f003 030c 	and.w	r3, r3, #12
 8002c16:	2b08      	cmp	r3, #8
 8002c18:	d05c      	beq.n	8002cd4 <HAL_RCC_OscConfig+0x464>
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	699b      	ldr	r3, [r3, #24]
 8002c1e:	2b02      	cmp	r3, #2
 8002c20:	d141      	bne.n	8002ca6 <HAL_RCC_OscConfig+0x436>
 8002c22:	4b31      	ldr	r3, [pc, #196]	; (8002ce8 <HAL_RCC_OscConfig+0x478>)
 8002c24:	2200      	movs	r2, #0
 8002c26:	601a      	str	r2, [r3, #0]
 8002c28:	f7ff fb8c 	bl	8002344 <HAL_GetTick>
 8002c2c:	6138      	str	r0, [r7, #16]
 8002c2e:	e008      	b.n	8002c42 <HAL_RCC_OscConfig+0x3d2>
 8002c30:	f7ff fb88 	bl	8002344 <HAL_GetTick>
 8002c34:	4602      	mov	r2, r0
 8002c36:	693b      	ldr	r3, [r7, #16]
 8002c38:	1ad3      	subs	r3, r2, r3
 8002c3a:	2b02      	cmp	r3, #2
 8002c3c:	d901      	bls.n	8002c42 <HAL_RCC_OscConfig+0x3d2>
 8002c3e:	2303      	movs	r3, #3
 8002c40:	e087      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 8002c42:	4b27      	ldr	r3, [pc, #156]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002c44:	681b      	ldr	r3, [r3, #0]
 8002c46:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002c4a:	2b00      	cmp	r3, #0
 8002c4c:	d1f0      	bne.n	8002c30 <HAL_RCC_OscConfig+0x3c0>
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	69da      	ldr	r2, [r3, #28]
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	6a1b      	ldr	r3, [r3, #32]
 8002c56:	431a      	orrs	r2, r3
 8002c58:	687b      	ldr	r3, [r7, #4]
 8002c5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c5c:	019b      	lsls	r3, r3, #6
 8002c5e:	431a      	orrs	r2, r3
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002c64:	085b      	lsrs	r3, r3, #1
 8002c66:	3b01      	subs	r3, #1
 8002c68:	041b      	lsls	r3, r3, #16
 8002c6a:	431a      	orrs	r2, r3
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002c70:	061b      	lsls	r3, r3, #24
 8002c72:	491b      	ldr	r1, [pc, #108]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002c74:	4313      	orrs	r3, r2
 8002c76:	604b      	str	r3, [r1, #4]
 8002c78:	4b1b      	ldr	r3, [pc, #108]	; (8002ce8 <HAL_RCC_OscConfig+0x478>)
 8002c7a:	2201      	movs	r2, #1
 8002c7c:	601a      	str	r2, [r3, #0]
 8002c7e:	f7ff fb61 	bl	8002344 <HAL_GetTick>
 8002c82:	6138      	str	r0, [r7, #16]
 8002c84:	e008      	b.n	8002c98 <HAL_RCC_OscConfig+0x428>
 8002c86:	f7ff fb5d 	bl	8002344 <HAL_GetTick>
 8002c8a:	4602      	mov	r2, r0
 8002c8c:	693b      	ldr	r3, [r7, #16]
 8002c8e:	1ad3      	subs	r3, r2, r3
 8002c90:	2b02      	cmp	r3, #2
 8002c92:	d901      	bls.n	8002c98 <HAL_RCC_OscConfig+0x428>
 8002c94:	2303      	movs	r3, #3
 8002c96:	e05c      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 8002c98:	4b11      	ldr	r3, [pc, #68]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002ca0:	2b00      	cmp	r3, #0
 8002ca2:	d0f0      	beq.n	8002c86 <HAL_RCC_OscConfig+0x416>
 8002ca4:	e054      	b.n	8002d50 <HAL_RCC_OscConfig+0x4e0>
 8002ca6:	4b10      	ldr	r3, [pc, #64]	; (8002ce8 <HAL_RCC_OscConfig+0x478>)
 8002ca8:	2200      	movs	r2, #0
 8002caa:	601a      	str	r2, [r3, #0]
 8002cac:	f7ff fb4a 	bl	8002344 <HAL_GetTick>
 8002cb0:	6138      	str	r0, [r7, #16]
 8002cb2:	e008      	b.n	8002cc6 <HAL_RCC_OscConfig+0x456>
 8002cb4:	f7ff fb46 	bl	8002344 <HAL_GetTick>
 8002cb8:	4602      	mov	r2, r0
 8002cba:	693b      	ldr	r3, [r7, #16]
 8002cbc:	1ad3      	subs	r3, r2, r3
 8002cbe:	2b02      	cmp	r3, #2
 8002cc0:	d901      	bls.n	8002cc6 <HAL_RCC_OscConfig+0x456>
 8002cc2:	2303      	movs	r3, #3
 8002cc4:	e045      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 8002cc6:	4b06      	ldr	r3, [pc, #24]	; (8002ce0 <HAL_RCC_OscConfig+0x470>)
 8002cc8:	681b      	ldr	r3, [r3, #0]
 8002cca:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002cce:	2b00      	cmp	r3, #0
 8002cd0:	d1f0      	bne.n	8002cb4 <HAL_RCC_OscConfig+0x444>
 8002cd2:	e03d      	b.n	8002d50 <HAL_RCC_OscConfig+0x4e0>
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	699b      	ldr	r3, [r3, #24]
 8002cd8:	2b01      	cmp	r3, #1
 8002cda:	d107      	bne.n	8002cec <HAL_RCC_OscConfig+0x47c>
 8002cdc:	2301      	movs	r3, #1
 8002cde:	e038      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 8002ce0:	40023800 	.word	0x40023800
 8002ce4:	40007000 	.word	0x40007000
 8002ce8:	42470060 	.word	0x42470060
 8002cec:	4b1b      	ldr	r3, [pc, #108]	; (8002d5c <HAL_RCC_OscConfig+0x4ec>)
 8002cee:	685b      	ldr	r3, [r3, #4]
 8002cf0:	60fb      	str	r3, [r7, #12]
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	699b      	ldr	r3, [r3, #24]
 8002cf6:	2b01      	cmp	r3, #1
 8002cf8:	d028      	beq.n	8002d4c <HAL_RCC_OscConfig+0x4dc>
 8002cfa:	68fb      	ldr	r3, [r7, #12]
 8002cfc:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	69db      	ldr	r3, [r3, #28]
 8002d04:	429a      	cmp	r2, r3
 8002d06:	d121      	bne.n	8002d4c <HAL_RCC_OscConfig+0x4dc>
 8002d08:	68fb      	ldr	r3, [r7, #12]
 8002d0a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	6a1b      	ldr	r3, [r3, #32]
 8002d12:	429a      	cmp	r2, r3
 8002d14:	d11a      	bne.n	8002d4c <HAL_RCC_OscConfig+0x4dc>
 8002d16:	68fa      	ldr	r2, [r7, #12]
 8002d18:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8002d1c:	4013      	ands	r3, r2
 8002d1e:	687a      	ldr	r2, [r7, #4]
 8002d20:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8002d22:	0192      	lsls	r2, r2, #6
 8002d24:	4293      	cmp	r3, r2
 8002d26:	d111      	bne.n	8002d4c <HAL_RCC_OscConfig+0x4dc>
 8002d28:	68fb      	ldr	r3, [r7, #12]
 8002d2a:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002d32:	085b      	lsrs	r3, r3, #1
 8002d34:	3b01      	subs	r3, #1
 8002d36:	041b      	lsls	r3, r3, #16
 8002d38:	429a      	cmp	r2, r3
 8002d3a:	d107      	bne.n	8002d4c <HAL_RCC_OscConfig+0x4dc>
 8002d3c:	68fb      	ldr	r3, [r7, #12]
 8002d3e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d46:	061b      	lsls	r3, r3, #24
 8002d48:	429a      	cmp	r2, r3
 8002d4a:	d001      	beq.n	8002d50 <HAL_RCC_OscConfig+0x4e0>
 8002d4c:	2301      	movs	r3, #1
 8002d4e:	e000      	b.n	8002d52 <HAL_RCC_OscConfig+0x4e2>
 8002d50:	2300      	movs	r3, #0
 8002d52:	4618      	mov	r0, r3
 8002d54:	3718      	adds	r7, #24
 8002d56:	46bd      	mov	sp, r7
 8002d58:	bd80      	pop	{r7, pc}
 8002d5a:	bf00      	nop
 8002d5c:	40023800 	.word	0x40023800

08002d60 <HAL_RCC_ClockConfig>:
 8002d60:	b580      	push	{r7, lr}
 8002d62:	b084      	sub	sp, #16
 8002d64:	af00      	add	r7, sp, #0
 8002d66:	6078      	str	r0, [r7, #4]
 8002d68:	6039      	str	r1, [r7, #0]
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	2b00      	cmp	r3, #0
 8002d6e:	d101      	bne.n	8002d74 <HAL_RCC_ClockConfig+0x14>
 8002d70:	2301      	movs	r3, #1
 8002d72:	e0cc      	b.n	8002f0e <HAL_RCC_ClockConfig+0x1ae>
 8002d74:	4b68      	ldr	r3, [pc, #416]	; (8002f18 <HAL_RCC_ClockConfig+0x1b8>)
 8002d76:	681b      	ldr	r3, [r3, #0]
 8002d78:	f003 0307 	and.w	r3, r3, #7
 8002d7c:	683a      	ldr	r2, [r7, #0]
 8002d7e:	429a      	cmp	r2, r3
 8002d80:	d90c      	bls.n	8002d9c <HAL_RCC_ClockConfig+0x3c>
 8002d82:	4b65      	ldr	r3, [pc, #404]	; (8002f18 <HAL_RCC_ClockConfig+0x1b8>)
 8002d84:	683a      	ldr	r2, [r7, #0]
 8002d86:	b2d2      	uxtb	r2, r2
 8002d88:	701a      	strb	r2, [r3, #0]
 8002d8a:	4b63      	ldr	r3, [pc, #396]	; (8002f18 <HAL_RCC_ClockConfig+0x1b8>)
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	f003 0307 	and.w	r3, r3, #7
 8002d92:	683a      	ldr	r2, [r7, #0]
 8002d94:	429a      	cmp	r2, r3
 8002d96:	d001      	beq.n	8002d9c <HAL_RCC_ClockConfig+0x3c>
 8002d98:	2301      	movs	r3, #1
 8002d9a:	e0b8      	b.n	8002f0e <HAL_RCC_ClockConfig+0x1ae>
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	f003 0302 	and.w	r3, r3, #2
 8002da4:	2b00      	cmp	r3, #0
 8002da6:	d020      	beq.n	8002dea <HAL_RCC_ClockConfig+0x8a>
 8002da8:	687b      	ldr	r3, [r7, #4]
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	f003 0304 	and.w	r3, r3, #4
 8002db0:	2b00      	cmp	r3, #0
 8002db2:	d005      	beq.n	8002dc0 <HAL_RCC_ClockConfig+0x60>
 8002db4:	4b59      	ldr	r3, [pc, #356]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002db6:	689b      	ldr	r3, [r3, #8]
 8002db8:	4a58      	ldr	r2, [pc, #352]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002dba:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8002dbe:	6093      	str	r3, [r2, #8]
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	681b      	ldr	r3, [r3, #0]
 8002dc4:	f003 0308 	and.w	r3, r3, #8
 8002dc8:	2b00      	cmp	r3, #0
 8002dca:	d005      	beq.n	8002dd8 <HAL_RCC_ClockConfig+0x78>
 8002dcc:	4b53      	ldr	r3, [pc, #332]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002dce:	689b      	ldr	r3, [r3, #8]
 8002dd0:	4a52      	ldr	r2, [pc, #328]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002dd2:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8002dd6:	6093      	str	r3, [r2, #8]
 8002dd8:	4b50      	ldr	r3, [pc, #320]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002dda:	689b      	ldr	r3, [r3, #8]
 8002ddc:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002de0:	687b      	ldr	r3, [r7, #4]
 8002de2:	689b      	ldr	r3, [r3, #8]
 8002de4:	494d      	ldr	r1, [pc, #308]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002de6:	4313      	orrs	r3, r2
 8002de8:	608b      	str	r3, [r1, #8]
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	681b      	ldr	r3, [r3, #0]
 8002dee:	f003 0301 	and.w	r3, r3, #1
 8002df2:	2b00      	cmp	r3, #0
 8002df4:	d044      	beq.n	8002e80 <HAL_RCC_ClockConfig+0x120>
 8002df6:	687b      	ldr	r3, [r7, #4]
 8002df8:	685b      	ldr	r3, [r3, #4]
 8002dfa:	2b01      	cmp	r3, #1
 8002dfc:	d107      	bne.n	8002e0e <HAL_RCC_ClockConfig+0xae>
 8002dfe:	4b47      	ldr	r3, [pc, #284]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002e06:	2b00      	cmp	r3, #0
 8002e08:	d119      	bne.n	8002e3e <HAL_RCC_ClockConfig+0xde>
 8002e0a:	2301      	movs	r3, #1
 8002e0c:	e07f      	b.n	8002f0e <HAL_RCC_ClockConfig+0x1ae>
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	685b      	ldr	r3, [r3, #4]
 8002e12:	2b02      	cmp	r3, #2
 8002e14:	d003      	beq.n	8002e1e <HAL_RCC_ClockConfig+0xbe>
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	685b      	ldr	r3, [r3, #4]
 8002e1a:	2b03      	cmp	r3, #3
 8002e1c:	d107      	bne.n	8002e2e <HAL_RCC_ClockConfig+0xce>
 8002e1e:	4b3f      	ldr	r3, [pc, #252]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002e20:	681b      	ldr	r3, [r3, #0]
 8002e22:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002e26:	2b00      	cmp	r3, #0
 8002e28:	d109      	bne.n	8002e3e <HAL_RCC_ClockConfig+0xde>
 8002e2a:	2301      	movs	r3, #1
 8002e2c:	e06f      	b.n	8002f0e <HAL_RCC_ClockConfig+0x1ae>
 8002e2e:	4b3b      	ldr	r3, [pc, #236]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002e30:	681b      	ldr	r3, [r3, #0]
 8002e32:	f003 0302 	and.w	r3, r3, #2
 8002e36:	2b00      	cmp	r3, #0
 8002e38:	d101      	bne.n	8002e3e <HAL_RCC_ClockConfig+0xde>
 8002e3a:	2301      	movs	r3, #1
 8002e3c:	e067      	b.n	8002f0e <HAL_RCC_ClockConfig+0x1ae>
 8002e3e:	4b37      	ldr	r3, [pc, #220]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002e40:	689b      	ldr	r3, [r3, #8]
 8002e42:	f023 0203 	bic.w	r2, r3, #3
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	685b      	ldr	r3, [r3, #4]
 8002e4a:	4934      	ldr	r1, [pc, #208]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002e4c:	4313      	orrs	r3, r2
 8002e4e:	608b      	str	r3, [r1, #8]
 8002e50:	f7ff fa78 	bl	8002344 <HAL_GetTick>
 8002e54:	60f8      	str	r0, [r7, #12]
 8002e56:	e00a      	b.n	8002e6e <HAL_RCC_ClockConfig+0x10e>
 8002e58:	f7ff fa74 	bl	8002344 <HAL_GetTick>
 8002e5c:	4602      	mov	r2, r0
 8002e5e:	68fb      	ldr	r3, [r7, #12]
 8002e60:	1ad3      	subs	r3, r2, r3
 8002e62:	f241 3288 	movw	r2, #5000	; 0x1388
 8002e66:	4293      	cmp	r3, r2
 8002e68:	d901      	bls.n	8002e6e <HAL_RCC_ClockConfig+0x10e>
 8002e6a:	2303      	movs	r3, #3
 8002e6c:	e04f      	b.n	8002f0e <HAL_RCC_ClockConfig+0x1ae>
 8002e6e:	4b2b      	ldr	r3, [pc, #172]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002e70:	689b      	ldr	r3, [r3, #8]
 8002e72:	f003 020c 	and.w	r2, r3, #12
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	685b      	ldr	r3, [r3, #4]
 8002e7a:	009b      	lsls	r3, r3, #2
 8002e7c:	429a      	cmp	r2, r3
 8002e7e:	d1eb      	bne.n	8002e58 <HAL_RCC_ClockConfig+0xf8>
 8002e80:	4b25      	ldr	r3, [pc, #148]	; (8002f18 <HAL_RCC_ClockConfig+0x1b8>)
 8002e82:	681b      	ldr	r3, [r3, #0]
 8002e84:	f003 0307 	and.w	r3, r3, #7
 8002e88:	683a      	ldr	r2, [r7, #0]
 8002e8a:	429a      	cmp	r2, r3
 8002e8c:	d20c      	bcs.n	8002ea8 <HAL_RCC_ClockConfig+0x148>
 8002e8e:	4b22      	ldr	r3, [pc, #136]	; (8002f18 <HAL_RCC_ClockConfig+0x1b8>)
 8002e90:	683a      	ldr	r2, [r7, #0]
 8002e92:	b2d2      	uxtb	r2, r2
 8002e94:	701a      	strb	r2, [r3, #0]
 8002e96:	4b20      	ldr	r3, [pc, #128]	; (8002f18 <HAL_RCC_ClockConfig+0x1b8>)
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	f003 0307 	and.w	r3, r3, #7
 8002e9e:	683a      	ldr	r2, [r7, #0]
 8002ea0:	429a      	cmp	r2, r3
 8002ea2:	d001      	beq.n	8002ea8 <HAL_RCC_ClockConfig+0x148>
 8002ea4:	2301      	movs	r3, #1
 8002ea6:	e032      	b.n	8002f0e <HAL_RCC_ClockConfig+0x1ae>
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	f003 0304 	and.w	r3, r3, #4
 8002eb0:	2b00      	cmp	r3, #0
 8002eb2:	d008      	beq.n	8002ec6 <HAL_RCC_ClockConfig+0x166>
 8002eb4:	4b19      	ldr	r3, [pc, #100]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002eb6:	689b      	ldr	r3, [r3, #8]
 8002eb8:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	68db      	ldr	r3, [r3, #12]
 8002ec0:	4916      	ldr	r1, [pc, #88]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002ec2:	4313      	orrs	r3, r2
 8002ec4:	608b      	str	r3, [r1, #8]
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	f003 0308 	and.w	r3, r3, #8
 8002ece:	2b00      	cmp	r3, #0
 8002ed0:	d009      	beq.n	8002ee6 <HAL_RCC_ClockConfig+0x186>
 8002ed2:	4b12      	ldr	r3, [pc, #72]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002ed4:	689b      	ldr	r3, [r3, #8]
 8002ed6:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	691b      	ldr	r3, [r3, #16]
 8002ede:	00db      	lsls	r3, r3, #3
 8002ee0:	490e      	ldr	r1, [pc, #56]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002ee2:	4313      	orrs	r3, r2
 8002ee4:	608b      	str	r3, [r1, #8]
 8002ee6:	f000 f821 	bl	8002f2c <HAL_RCC_GetSysClockFreq>
 8002eea:	4602      	mov	r2, r0
 8002eec:	4b0b      	ldr	r3, [pc, #44]	; (8002f1c <HAL_RCC_ClockConfig+0x1bc>)
 8002eee:	689b      	ldr	r3, [r3, #8]
 8002ef0:	091b      	lsrs	r3, r3, #4
 8002ef2:	f003 030f 	and.w	r3, r3, #15
 8002ef6:	490a      	ldr	r1, [pc, #40]	; (8002f20 <HAL_RCC_ClockConfig+0x1c0>)
 8002ef8:	5ccb      	ldrb	r3, [r1, r3]
 8002efa:	fa22 f303 	lsr.w	r3, r2, r3
 8002efe:	4a09      	ldr	r2, [pc, #36]	; (8002f24 <HAL_RCC_ClockConfig+0x1c4>)
 8002f00:	6013      	str	r3, [r2, #0]
 8002f02:	4b09      	ldr	r3, [pc, #36]	; (8002f28 <HAL_RCC_ClockConfig+0x1c8>)
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	4618      	mov	r0, r3
 8002f08:	f7fe ffe0 	bl	8001ecc <HAL_InitTick>
 8002f0c:	2300      	movs	r3, #0
 8002f0e:	4618      	mov	r0, r3
 8002f10:	3710      	adds	r7, #16
 8002f12:	46bd      	mov	sp, r7
 8002f14:	bd80      	pop	{r7, pc}
 8002f16:	bf00      	nop
 8002f18:	40023c00 	.word	0x40023c00
 8002f1c:	40023800 	.word	0x40023800
 8002f20:	0800a470 	.word	0x0800a470
 8002f24:	20000000 	.word	0x20000000
 8002f28:	20000004 	.word	0x20000004

08002f2c <HAL_RCC_GetSysClockFreq>:
 8002f2c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002f30:	b090      	sub	sp, #64	; 0x40
 8002f32:	af00      	add	r7, sp, #0
 8002f34:	2300      	movs	r3, #0
 8002f36:	637b      	str	r3, [r7, #52]	; 0x34
 8002f38:	2300      	movs	r3, #0
 8002f3a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002f3c:	2300      	movs	r3, #0
 8002f3e:	633b      	str	r3, [r7, #48]	; 0x30
 8002f40:	2300      	movs	r3, #0
 8002f42:	63bb      	str	r3, [r7, #56]	; 0x38
 8002f44:	4b59      	ldr	r3, [pc, #356]	; (80030ac <HAL_RCC_GetSysClockFreq+0x180>)
 8002f46:	689b      	ldr	r3, [r3, #8]
 8002f48:	f003 030c 	and.w	r3, r3, #12
 8002f4c:	2b08      	cmp	r3, #8
 8002f4e:	d00d      	beq.n	8002f6c <HAL_RCC_GetSysClockFreq+0x40>
 8002f50:	2b08      	cmp	r3, #8
 8002f52:	f200 80a1 	bhi.w	8003098 <HAL_RCC_GetSysClockFreq+0x16c>
 8002f56:	2b00      	cmp	r3, #0
 8002f58:	d002      	beq.n	8002f60 <HAL_RCC_GetSysClockFreq+0x34>
 8002f5a:	2b04      	cmp	r3, #4
 8002f5c:	d003      	beq.n	8002f66 <HAL_RCC_GetSysClockFreq+0x3a>
 8002f5e:	e09b      	b.n	8003098 <HAL_RCC_GetSysClockFreq+0x16c>
 8002f60:	4b53      	ldr	r3, [pc, #332]	; (80030b0 <HAL_RCC_GetSysClockFreq+0x184>)
 8002f62:	63bb      	str	r3, [r7, #56]	; 0x38
 8002f64:	e09b      	b.n	800309e <HAL_RCC_GetSysClockFreq+0x172>
 8002f66:	4b53      	ldr	r3, [pc, #332]	; (80030b4 <HAL_RCC_GetSysClockFreq+0x188>)
 8002f68:	63bb      	str	r3, [r7, #56]	; 0x38
 8002f6a:	e098      	b.n	800309e <HAL_RCC_GetSysClockFreq+0x172>
 8002f6c:	4b4f      	ldr	r3, [pc, #316]	; (80030ac <HAL_RCC_GetSysClockFreq+0x180>)
 8002f6e:	685b      	ldr	r3, [r3, #4]
 8002f70:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002f74:	637b      	str	r3, [r7, #52]	; 0x34
 8002f76:	4b4d      	ldr	r3, [pc, #308]	; (80030ac <HAL_RCC_GetSysClockFreq+0x180>)
 8002f78:	685b      	ldr	r3, [r3, #4]
 8002f7a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002f7e:	2b00      	cmp	r3, #0
 8002f80:	d028      	beq.n	8002fd4 <HAL_RCC_GetSysClockFreq+0xa8>
 8002f82:	4b4a      	ldr	r3, [pc, #296]	; (80030ac <HAL_RCC_GetSysClockFreq+0x180>)
 8002f84:	685b      	ldr	r3, [r3, #4]
 8002f86:	099b      	lsrs	r3, r3, #6
 8002f88:	2200      	movs	r2, #0
 8002f8a:	623b      	str	r3, [r7, #32]
 8002f8c:	627a      	str	r2, [r7, #36]	; 0x24
 8002f8e:	6a3b      	ldr	r3, [r7, #32]
 8002f90:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8002f94:	2100      	movs	r1, #0
 8002f96:	4b47      	ldr	r3, [pc, #284]	; (80030b4 <HAL_RCC_GetSysClockFreq+0x188>)
 8002f98:	fb03 f201 	mul.w	r2, r3, r1
 8002f9c:	2300      	movs	r3, #0
 8002f9e:	fb00 f303 	mul.w	r3, r0, r3
 8002fa2:	4413      	add	r3, r2
 8002fa4:	4a43      	ldr	r2, [pc, #268]	; (80030b4 <HAL_RCC_GetSysClockFreq+0x188>)
 8002fa6:	fba0 1202 	umull	r1, r2, r0, r2
 8002faa:	62fa      	str	r2, [r7, #44]	; 0x2c
 8002fac:	460a      	mov	r2, r1
 8002fae:	62ba      	str	r2, [r7, #40]	; 0x28
 8002fb0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8002fb2:	4413      	add	r3, r2
 8002fb4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002fb6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002fb8:	2200      	movs	r2, #0
 8002fba:	61bb      	str	r3, [r7, #24]
 8002fbc:	61fa      	str	r2, [r7, #28]
 8002fbe:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002fc2:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8002fc6:	f7fd fdf7 	bl	8000bb8 <__aeabi_uldivmod>
 8002fca:	4602      	mov	r2, r0
 8002fcc:	460b      	mov	r3, r1
 8002fce:	4613      	mov	r3, r2
 8002fd0:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002fd2:	e053      	b.n	800307c <HAL_RCC_GetSysClockFreq+0x150>
 8002fd4:	4b35      	ldr	r3, [pc, #212]	; (80030ac <HAL_RCC_GetSysClockFreq+0x180>)
 8002fd6:	685b      	ldr	r3, [r3, #4]
 8002fd8:	099b      	lsrs	r3, r3, #6
 8002fda:	2200      	movs	r2, #0
 8002fdc:	613b      	str	r3, [r7, #16]
 8002fde:	617a      	str	r2, [r7, #20]
 8002fe0:	693b      	ldr	r3, [r7, #16]
 8002fe2:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8002fe6:	f04f 0b00 	mov.w	fp, #0
 8002fea:	4652      	mov	r2, sl
 8002fec:	465b      	mov	r3, fp
 8002fee:	f04f 0000 	mov.w	r0, #0
 8002ff2:	f04f 0100 	mov.w	r1, #0
 8002ff6:	0159      	lsls	r1, r3, #5
 8002ff8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002ffc:	0150      	lsls	r0, r2, #5
 8002ffe:	4602      	mov	r2, r0
 8003000:	460b      	mov	r3, r1
 8003002:	ebb2 080a 	subs.w	r8, r2, sl
 8003006:	eb63 090b 	sbc.w	r9, r3, fp
 800300a:	f04f 0200 	mov.w	r2, #0
 800300e:	f04f 0300 	mov.w	r3, #0
 8003012:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8003016:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 800301a:	ea4f 1288 	mov.w	r2, r8, lsl #6
 800301e:	ebb2 0408 	subs.w	r4, r2, r8
 8003022:	eb63 0509 	sbc.w	r5, r3, r9
 8003026:	f04f 0200 	mov.w	r2, #0
 800302a:	f04f 0300 	mov.w	r3, #0
 800302e:	00eb      	lsls	r3, r5, #3
 8003030:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003034:	00e2      	lsls	r2, r4, #3
 8003036:	4614      	mov	r4, r2
 8003038:	461d      	mov	r5, r3
 800303a:	eb14 030a 	adds.w	r3, r4, sl
 800303e:	603b      	str	r3, [r7, #0]
 8003040:	eb45 030b 	adc.w	r3, r5, fp
 8003044:	607b      	str	r3, [r7, #4]
 8003046:	f04f 0200 	mov.w	r2, #0
 800304a:	f04f 0300 	mov.w	r3, #0
 800304e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8003052:	4629      	mov	r1, r5
 8003054:	028b      	lsls	r3, r1, #10
 8003056:	4621      	mov	r1, r4
 8003058:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800305c:	4621      	mov	r1, r4
 800305e:	028a      	lsls	r2, r1, #10
 8003060:	4610      	mov	r0, r2
 8003062:	4619      	mov	r1, r3
 8003064:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003066:	2200      	movs	r2, #0
 8003068:	60bb      	str	r3, [r7, #8]
 800306a:	60fa      	str	r2, [r7, #12]
 800306c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003070:	f7fd fda2 	bl	8000bb8 <__aeabi_uldivmod>
 8003074:	4602      	mov	r2, r0
 8003076:	460b      	mov	r3, r1
 8003078:	4613      	mov	r3, r2
 800307a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800307c:	4b0b      	ldr	r3, [pc, #44]	; (80030ac <HAL_RCC_GetSysClockFreq+0x180>)
 800307e:	685b      	ldr	r3, [r3, #4]
 8003080:	0c1b      	lsrs	r3, r3, #16
 8003082:	f003 0303 	and.w	r3, r3, #3
 8003086:	3301      	adds	r3, #1
 8003088:	005b      	lsls	r3, r3, #1
 800308a:	633b      	str	r3, [r7, #48]	; 0x30
 800308c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800308e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003090:	fbb2 f3f3 	udiv	r3, r2, r3
 8003094:	63bb      	str	r3, [r7, #56]	; 0x38
 8003096:	e002      	b.n	800309e <HAL_RCC_GetSysClockFreq+0x172>
 8003098:	4b05      	ldr	r3, [pc, #20]	; (80030b0 <HAL_RCC_GetSysClockFreq+0x184>)
 800309a:	63bb      	str	r3, [r7, #56]	; 0x38
 800309c:	bf00      	nop
 800309e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80030a0:	4618      	mov	r0, r3
 80030a2:	3740      	adds	r7, #64	; 0x40
 80030a4:	46bd      	mov	sp, r7
 80030a6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80030aa:	bf00      	nop
 80030ac:	40023800 	.word	0x40023800
 80030b0:	00f42400 	.word	0x00f42400
 80030b4:	017d7840 	.word	0x017d7840

080030b8 <HAL_RCC_GetHCLKFreq>:
 80030b8:	b480      	push	{r7}
 80030ba:	af00      	add	r7, sp, #0
 80030bc:	4b03      	ldr	r3, [pc, #12]	; (80030cc <HAL_RCC_GetHCLKFreq+0x14>)
 80030be:	681b      	ldr	r3, [r3, #0]
 80030c0:	4618      	mov	r0, r3
 80030c2:	46bd      	mov	sp, r7
 80030c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030c8:	4770      	bx	lr
 80030ca:	bf00      	nop
 80030cc:	20000000 	.word	0x20000000

080030d0 <HAL_RCC_GetPCLK1Freq>:
 80030d0:	b580      	push	{r7, lr}
 80030d2:	af00      	add	r7, sp, #0
 80030d4:	f7ff fff0 	bl	80030b8 <HAL_RCC_GetHCLKFreq>
 80030d8:	4602      	mov	r2, r0
 80030da:	4b05      	ldr	r3, [pc, #20]	; (80030f0 <HAL_RCC_GetPCLK1Freq+0x20>)
 80030dc:	689b      	ldr	r3, [r3, #8]
 80030de:	0a9b      	lsrs	r3, r3, #10
 80030e0:	f003 0307 	and.w	r3, r3, #7
 80030e4:	4903      	ldr	r1, [pc, #12]	; (80030f4 <HAL_RCC_GetPCLK1Freq+0x24>)
 80030e6:	5ccb      	ldrb	r3, [r1, r3]
 80030e8:	fa22 f303 	lsr.w	r3, r2, r3
 80030ec:	4618      	mov	r0, r3
 80030ee:	bd80      	pop	{r7, pc}
 80030f0:	40023800 	.word	0x40023800
 80030f4:	0800a480 	.word	0x0800a480

080030f8 <HAL_RCC_GetPCLK2Freq>:
 80030f8:	b580      	push	{r7, lr}
 80030fa:	af00      	add	r7, sp, #0
 80030fc:	f7ff ffdc 	bl	80030b8 <HAL_RCC_GetHCLKFreq>
 8003100:	4602      	mov	r2, r0
 8003102:	4b05      	ldr	r3, [pc, #20]	; (8003118 <HAL_RCC_GetPCLK2Freq+0x20>)
 8003104:	689b      	ldr	r3, [r3, #8]
 8003106:	0b5b      	lsrs	r3, r3, #13
 8003108:	f003 0307 	and.w	r3, r3, #7
 800310c:	4903      	ldr	r1, [pc, #12]	; (800311c <HAL_RCC_GetPCLK2Freq+0x24>)
 800310e:	5ccb      	ldrb	r3, [r1, r3]
 8003110:	fa22 f303 	lsr.w	r3, r2, r3
 8003114:	4618      	mov	r0, r3
 8003116:	bd80      	pop	{r7, pc}
 8003118:	40023800 	.word	0x40023800
 800311c:	0800a480 	.word	0x0800a480

08003120 <HAL_RCC_GetClockConfig>:
 8003120:	b480      	push	{r7}
 8003122:	b083      	sub	sp, #12
 8003124:	af00      	add	r7, sp, #0
 8003126:	6078      	str	r0, [r7, #4]
 8003128:	6039      	str	r1, [r7, #0]
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	220f      	movs	r2, #15
 800312e:	601a      	str	r2, [r3, #0]
 8003130:	4b12      	ldr	r3, [pc, #72]	; (800317c <HAL_RCC_GetClockConfig+0x5c>)
 8003132:	689b      	ldr	r3, [r3, #8]
 8003134:	f003 0203 	and.w	r2, r3, #3
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	605a      	str	r2, [r3, #4]
 800313c:	4b0f      	ldr	r3, [pc, #60]	; (800317c <HAL_RCC_GetClockConfig+0x5c>)
 800313e:	689b      	ldr	r3, [r3, #8]
 8003140:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	609a      	str	r2, [r3, #8]
 8003148:	4b0c      	ldr	r3, [pc, #48]	; (800317c <HAL_RCC_GetClockConfig+0x5c>)
 800314a:	689b      	ldr	r3, [r3, #8]
 800314c:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	60da      	str	r2, [r3, #12]
 8003154:	4b09      	ldr	r3, [pc, #36]	; (800317c <HAL_RCC_GetClockConfig+0x5c>)
 8003156:	689b      	ldr	r3, [r3, #8]
 8003158:	08db      	lsrs	r3, r3, #3
 800315a:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	611a      	str	r2, [r3, #16]
 8003162:	4b07      	ldr	r3, [pc, #28]	; (8003180 <HAL_RCC_GetClockConfig+0x60>)
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	f003 0207 	and.w	r2, r3, #7
 800316a:	683b      	ldr	r3, [r7, #0]
 800316c:	601a      	str	r2, [r3, #0]
 800316e:	bf00      	nop
 8003170:	370c      	adds	r7, #12
 8003172:	46bd      	mov	sp, r7
 8003174:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003178:	4770      	bx	lr
 800317a:	bf00      	nop
 800317c:	40023800 	.word	0x40023800
 8003180:	40023c00 	.word	0x40023c00

08003184 <HAL_TIM_Base_Init>:
 8003184:	b580      	push	{r7, lr}
 8003186:	b082      	sub	sp, #8
 8003188:	af00      	add	r7, sp, #0
 800318a:	6078      	str	r0, [r7, #4]
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	2b00      	cmp	r3, #0
 8003190:	d101      	bne.n	8003196 <HAL_TIM_Base_Init+0x12>
 8003192:	2301      	movs	r3, #1
 8003194:	e041      	b.n	800321a <HAL_TIM_Base_Init+0x96>
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800319c:	b2db      	uxtb	r3, r3
 800319e:	2b00      	cmp	r3, #0
 80031a0:	d106      	bne.n	80031b0 <HAL_TIM_Base_Init+0x2c>
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	2200      	movs	r2, #0
 80031a6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80031aa:	6878      	ldr	r0, [r7, #4]
 80031ac:	f000 f839 	bl	8003222 <HAL_TIM_Base_MspInit>
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	2202      	movs	r2, #2
 80031b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	681a      	ldr	r2, [r3, #0]
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	3304      	adds	r3, #4
 80031c0:	4619      	mov	r1, r3
 80031c2:	4610      	mov	r0, r2
 80031c4:	f000 f9ca 	bl	800355c <TIM_Base_SetConfig>
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	2201      	movs	r2, #1
 80031cc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	2201      	movs	r2, #1
 80031d4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	2201      	movs	r2, #1
 80031dc:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	2201      	movs	r2, #1
 80031e4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	2201      	movs	r2, #1
 80031ec:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	2201      	movs	r2, #1
 80031f4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	2201      	movs	r2, #1
 80031fc:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	2201      	movs	r2, #1
 8003204:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	2201      	movs	r2, #1
 800320c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	2201      	movs	r2, #1
 8003214:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003218:	2300      	movs	r3, #0
 800321a:	4618      	mov	r0, r3
 800321c:	3708      	adds	r7, #8
 800321e:	46bd      	mov	sp, r7
 8003220:	bd80      	pop	{r7, pc}

08003222 <HAL_TIM_Base_MspInit>:
 8003222:	b480      	push	{r7}
 8003224:	b083      	sub	sp, #12
 8003226:	af00      	add	r7, sp, #0
 8003228:	6078      	str	r0, [r7, #4]
 800322a:	bf00      	nop
 800322c:	370c      	adds	r7, #12
 800322e:	46bd      	mov	sp, r7
 8003230:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003234:	4770      	bx	lr
	...

08003238 <HAL_TIM_Base_Start_IT>:
 8003238:	b480      	push	{r7}
 800323a:	b085      	sub	sp, #20
 800323c:	af00      	add	r7, sp, #0
 800323e:	6078      	str	r0, [r7, #4]
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003246:	b2db      	uxtb	r3, r3
 8003248:	2b01      	cmp	r3, #1
 800324a:	d001      	beq.n	8003250 <HAL_TIM_Base_Start_IT+0x18>
 800324c:	2301      	movs	r3, #1
 800324e:	e044      	b.n	80032da <HAL_TIM_Base_Start_IT+0xa2>
 8003250:	687b      	ldr	r3, [r7, #4]
 8003252:	2202      	movs	r2, #2
 8003254:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	68da      	ldr	r2, [r3, #12]
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	f042 0201 	orr.w	r2, r2, #1
 8003266:	60da      	str	r2, [r3, #12]
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	681b      	ldr	r3, [r3, #0]
 800326c:	4a1e      	ldr	r2, [pc, #120]	; (80032e8 <HAL_TIM_Base_Start_IT+0xb0>)
 800326e:	4293      	cmp	r3, r2
 8003270:	d018      	beq.n	80032a4 <HAL_TIM_Base_Start_IT+0x6c>
 8003272:	687b      	ldr	r3, [r7, #4]
 8003274:	681b      	ldr	r3, [r3, #0]
 8003276:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800327a:	d013      	beq.n	80032a4 <HAL_TIM_Base_Start_IT+0x6c>
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	681b      	ldr	r3, [r3, #0]
 8003280:	4a1a      	ldr	r2, [pc, #104]	; (80032ec <HAL_TIM_Base_Start_IT+0xb4>)
 8003282:	4293      	cmp	r3, r2
 8003284:	d00e      	beq.n	80032a4 <HAL_TIM_Base_Start_IT+0x6c>
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	4a19      	ldr	r2, [pc, #100]	; (80032f0 <HAL_TIM_Base_Start_IT+0xb8>)
 800328c:	4293      	cmp	r3, r2
 800328e:	d009      	beq.n	80032a4 <HAL_TIM_Base_Start_IT+0x6c>
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	4a17      	ldr	r2, [pc, #92]	; (80032f4 <HAL_TIM_Base_Start_IT+0xbc>)
 8003296:	4293      	cmp	r3, r2
 8003298:	d004      	beq.n	80032a4 <HAL_TIM_Base_Start_IT+0x6c>
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	681b      	ldr	r3, [r3, #0]
 800329e:	4a16      	ldr	r2, [pc, #88]	; (80032f8 <HAL_TIM_Base_Start_IT+0xc0>)
 80032a0:	4293      	cmp	r3, r2
 80032a2:	d111      	bne.n	80032c8 <HAL_TIM_Base_Start_IT+0x90>
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	681b      	ldr	r3, [r3, #0]
 80032a8:	689b      	ldr	r3, [r3, #8]
 80032aa:	f003 0307 	and.w	r3, r3, #7
 80032ae:	60fb      	str	r3, [r7, #12]
 80032b0:	68fb      	ldr	r3, [r7, #12]
 80032b2:	2b06      	cmp	r3, #6
 80032b4:	d010      	beq.n	80032d8 <HAL_TIM_Base_Start_IT+0xa0>
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	681b      	ldr	r3, [r3, #0]
 80032ba:	681a      	ldr	r2, [r3, #0]
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	681b      	ldr	r3, [r3, #0]
 80032c0:	f042 0201 	orr.w	r2, r2, #1
 80032c4:	601a      	str	r2, [r3, #0]
 80032c6:	e007      	b.n	80032d8 <HAL_TIM_Base_Start_IT+0xa0>
 80032c8:	687b      	ldr	r3, [r7, #4]
 80032ca:	681b      	ldr	r3, [r3, #0]
 80032cc:	681a      	ldr	r2, [r3, #0]
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	681b      	ldr	r3, [r3, #0]
 80032d2:	f042 0201 	orr.w	r2, r2, #1
 80032d6:	601a      	str	r2, [r3, #0]
 80032d8:	2300      	movs	r3, #0
 80032da:	4618      	mov	r0, r3
 80032dc:	3714      	adds	r7, #20
 80032de:	46bd      	mov	sp, r7
 80032e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032e4:	4770      	bx	lr
 80032e6:	bf00      	nop
 80032e8:	40010000 	.word	0x40010000
 80032ec:	40000400 	.word	0x40000400
 80032f0:	40000800 	.word	0x40000800
 80032f4:	40000c00 	.word	0x40000c00
 80032f8:	40014000 	.word	0x40014000

080032fc <HAL_TIM_IRQHandler>:
 80032fc:	b580      	push	{r7, lr}
 80032fe:	b082      	sub	sp, #8
 8003300:	af00      	add	r7, sp, #0
 8003302:	6078      	str	r0, [r7, #4]
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	681b      	ldr	r3, [r3, #0]
 8003308:	691b      	ldr	r3, [r3, #16]
 800330a:	f003 0302 	and.w	r3, r3, #2
 800330e:	2b02      	cmp	r3, #2
 8003310:	d122      	bne.n	8003358 <HAL_TIM_IRQHandler+0x5c>
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	68db      	ldr	r3, [r3, #12]
 8003318:	f003 0302 	and.w	r3, r3, #2
 800331c:	2b02      	cmp	r3, #2
 800331e:	d11b      	bne.n	8003358 <HAL_TIM_IRQHandler+0x5c>
 8003320:	687b      	ldr	r3, [r7, #4]
 8003322:	681b      	ldr	r3, [r3, #0]
 8003324:	f06f 0202 	mvn.w	r2, #2
 8003328:	611a      	str	r2, [r3, #16]
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	2201      	movs	r2, #1
 800332e:	771a      	strb	r2, [r3, #28]
 8003330:	687b      	ldr	r3, [r7, #4]
 8003332:	681b      	ldr	r3, [r3, #0]
 8003334:	699b      	ldr	r3, [r3, #24]
 8003336:	f003 0303 	and.w	r3, r3, #3
 800333a:	2b00      	cmp	r3, #0
 800333c:	d003      	beq.n	8003346 <HAL_TIM_IRQHandler+0x4a>
 800333e:	6878      	ldr	r0, [r7, #4]
 8003340:	f000 f8ee 	bl	8003520 <HAL_TIM_IC_CaptureCallback>
 8003344:	e005      	b.n	8003352 <HAL_TIM_IRQHandler+0x56>
 8003346:	6878      	ldr	r0, [r7, #4]
 8003348:	f000 f8e0 	bl	800350c <HAL_TIM_OC_DelayElapsedCallback>
 800334c:	6878      	ldr	r0, [r7, #4]
 800334e:	f000 f8f1 	bl	8003534 <HAL_TIM_PWM_PulseFinishedCallback>
 8003352:	687b      	ldr	r3, [r7, #4]
 8003354:	2200      	movs	r2, #0
 8003356:	771a      	strb	r2, [r3, #28]
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	681b      	ldr	r3, [r3, #0]
 800335c:	691b      	ldr	r3, [r3, #16]
 800335e:	f003 0304 	and.w	r3, r3, #4
 8003362:	2b04      	cmp	r3, #4
 8003364:	d122      	bne.n	80033ac <HAL_TIM_IRQHandler+0xb0>
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	681b      	ldr	r3, [r3, #0]
 800336a:	68db      	ldr	r3, [r3, #12]
 800336c:	f003 0304 	and.w	r3, r3, #4
 8003370:	2b04      	cmp	r3, #4
 8003372:	d11b      	bne.n	80033ac <HAL_TIM_IRQHandler+0xb0>
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	f06f 0204 	mvn.w	r2, #4
 800337c:	611a      	str	r2, [r3, #16]
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	2202      	movs	r2, #2
 8003382:	771a      	strb	r2, [r3, #28]
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	681b      	ldr	r3, [r3, #0]
 8003388:	699b      	ldr	r3, [r3, #24]
 800338a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800338e:	2b00      	cmp	r3, #0
 8003390:	d003      	beq.n	800339a <HAL_TIM_IRQHandler+0x9e>
 8003392:	6878      	ldr	r0, [r7, #4]
 8003394:	f000 f8c4 	bl	8003520 <HAL_TIM_IC_CaptureCallback>
 8003398:	e005      	b.n	80033a6 <HAL_TIM_IRQHandler+0xaa>
 800339a:	6878      	ldr	r0, [r7, #4]
 800339c:	f000 f8b6 	bl	800350c <HAL_TIM_OC_DelayElapsedCallback>
 80033a0:	6878      	ldr	r0, [r7, #4]
 80033a2:	f000 f8c7 	bl	8003534 <HAL_TIM_PWM_PulseFinishedCallback>
 80033a6:	687b      	ldr	r3, [r7, #4]
 80033a8:	2200      	movs	r2, #0
 80033aa:	771a      	strb	r2, [r3, #28]
 80033ac:	687b      	ldr	r3, [r7, #4]
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	691b      	ldr	r3, [r3, #16]
 80033b2:	f003 0308 	and.w	r3, r3, #8
 80033b6:	2b08      	cmp	r3, #8
 80033b8:	d122      	bne.n	8003400 <HAL_TIM_IRQHandler+0x104>
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	681b      	ldr	r3, [r3, #0]
 80033be:	68db      	ldr	r3, [r3, #12]
 80033c0:	f003 0308 	and.w	r3, r3, #8
 80033c4:	2b08      	cmp	r3, #8
 80033c6:	d11b      	bne.n	8003400 <HAL_TIM_IRQHandler+0x104>
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	f06f 0208 	mvn.w	r2, #8
 80033d0:	611a      	str	r2, [r3, #16]
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	2204      	movs	r2, #4
 80033d6:	771a      	strb	r2, [r3, #28]
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	681b      	ldr	r3, [r3, #0]
 80033dc:	69db      	ldr	r3, [r3, #28]
 80033de:	f003 0303 	and.w	r3, r3, #3
 80033e2:	2b00      	cmp	r3, #0
 80033e4:	d003      	beq.n	80033ee <HAL_TIM_IRQHandler+0xf2>
 80033e6:	6878      	ldr	r0, [r7, #4]
 80033e8:	f000 f89a 	bl	8003520 <HAL_TIM_IC_CaptureCallback>
 80033ec:	e005      	b.n	80033fa <HAL_TIM_IRQHandler+0xfe>
 80033ee:	6878      	ldr	r0, [r7, #4]
 80033f0:	f000 f88c 	bl	800350c <HAL_TIM_OC_DelayElapsedCallback>
 80033f4:	6878      	ldr	r0, [r7, #4]
 80033f6:	f000 f89d 	bl	8003534 <HAL_TIM_PWM_PulseFinishedCallback>
 80033fa:	687b      	ldr	r3, [r7, #4]
 80033fc:	2200      	movs	r2, #0
 80033fe:	771a      	strb	r2, [r3, #28]
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	681b      	ldr	r3, [r3, #0]
 8003404:	691b      	ldr	r3, [r3, #16]
 8003406:	f003 0310 	and.w	r3, r3, #16
 800340a:	2b10      	cmp	r3, #16
 800340c:	d122      	bne.n	8003454 <HAL_TIM_IRQHandler+0x158>
 800340e:	687b      	ldr	r3, [r7, #4]
 8003410:	681b      	ldr	r3, [r3, #0]
 8003412:	68db      	ldr	r3, [r3, #12]
 8003414:	f003 0310 	and.w	r3, r3, #16
 8003418:	2b10      	cmp	r3, #16
 800341a:	d11b      	bne.n	8003454 <HAL_TIM_IRQHandler+0x158>
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	681b      	ldr	r3, [r3, #0]
 8003420:	f06f 0210 	mvn.w	r2, #16
 8003424:	611a      	str	r2, [r3, #16]
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	2208      	movs	r2, #8
 800342a:	771a      	strb	r2, [r3, #28]
 800342c:	687b      	ldr	r3, [r7, #4]
 800342e:	681b      	ldr	r3, [r3, #0]
 8003430:	69db      	ldr	r3, [r3, #28]
 8003432:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003436:	2b00      	cmp	r3, #0
 8003438:	d003      	beq.n	8003442 <HAL_TIM_IRQHandler+0x146>
 800343a:	6878      	ldr	r0, [r7, #4]
 800343c:	f000 f870 	bl	8003520 <HAL_TIM_IC_CaptureCallback>
 8003440:	e005      	b.n	800344e <HAL_TIM_IRQHandler+0x152>
 8003442:	6878      	ldr	r0, [r7, #4]
 8003444:	f000 f862 	bl	800350c <HAL_TIM_OC_DelayElapsedCallback>
 8003448:	6878      	ldr	r0, [r7, #4]
 800344a:	f000 f873 	bl	8003534 <HAL_TIM_PWM_PulseFinishedCallback>
 800344e:	687b      	ldr	r3, [r7, #4]
 8003450:	2200      	movs	r2, #0
 8003452:	771a      	strb	r2, [r3, #28]
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	681b      	ldr	r3, [r3, #0]
 8003458:	691b      	ldr	r3, [r3, #16]
 800345a:	f003 0301 	and.w	r3, r3, #1
 800345e:	2b01      	cmp	r3, #1
 8003460:	d10e      	bne.n	8003480 <HAL_TIM_IRQHandler+0x184>
 8003462:	687b      	ldr	r3, [r7, #4]
 8003464:	681b      	ldr	r3, [r3, #0]
 8003466:	68db      	ldr	r3, [r3, #12]
 8003468:	f003 0301 	and.w	r3, r3, #1
 800346c:	2b01      	cmp	r3, #1
 800346e:	d107      	bne.n	8003480 <HAL_TIM_IRQHandler+0x184>
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	681b      	ldr	r3, [r3, #0]
 8003474:	f06f 0201 	mvn.w	r2, #1
 8003478:	611a      	str	r2, [r3, #16]
 800347a:	6878      	ldr	r0, [r7, #4]
 800347c:	f7fe f818 	bl	80014b0 <HAL_TIM_PeriodElapsedCallback>
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	681b      	ldr	r3, [r3, #0]
 8003484:	691b      	ldr	r3, [r3, #16]
 8003486:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800348a:	2b80      	cmp	r3, #128	; 0x80
 800348c:	d10e      	bne.n	80034ac <HAL_TIM_IRQHandler+0x1b0>
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	68db      	ldr	r3, [r3, #12]
 8003494:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003498:	2b80      	cmp	r3, #128	; 0x80
 800349a:	d107      	bne.n	80034ac <HAL_TIM_IRQHandler+0x1b0>
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80034a4:	611a      	str	r2, [r3, #16]
 80034a6:	6878      	ldr	r0, [r7, #4]
 80034a8:	f000 f8e2 	bl	8003670 <HAL_TIMEx_BreakCallback>
 80034ac:	687b      	ldr	r3, [r7, #4]
 80034ae:	681b      	ldr	r3, [r3, #0]
 80034b0:	691b      	ldr	r3, [r3, #16]
 80034b2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80034b6:	2b40      	cmp	r3, #64	; 0x40
 80034b8:	d10e      	bne.n	80034d8 <HAL_TIM_IRQHandler+0x1dc>
 80034ba:	687b      	ldr	r3, [r7, #4]
 80034bc:	681b      	ldr	r3, [r3, #0]
 80034be:	68db      	ldr	r3, [r3, #12]
 80034c0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80034c4:	2b40      	cmp	r3, #64	; 0x40
 80034c6:	d107      	bne.n	80034d8 <HAL_TIM_IRQHandler+0x1dc>
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	681b      	ldr	r3, [r3, #0]
 80034cc:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80034d0:	611a      	str	r2, [r3, #16]
 80034d2:	6878      	ldr	r0, [r7, #4]
 80034d4:	f000 f838 	bl	8003548 <HAL_TIM_TriggerCallback>
 80034d8:	687b      	ldr	r3, [r7, #4]
 80034da:	681b      	ldr	r3, [r3, #0]
 80034dc:	691b      	ldr	r3, [r3, #16]
 80034de:	f003 0320 	and.w	r3, r3, #32
 80034e2:	2b20      	cmp	r3, #32
 80034e4:	d10e      	bne.n	8003504 <HAL_TIM_IRQHandler+0x208>
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	681b      	ldr	r3, [r3, #0]
 80034ea:	68db      	ldr	r3, [r3, #12]
 80034ec:	f003 0320 	and.w	r3, r3, #32
 80034f0:	2b20      	cmp	r3, #32
 80034f2:	d107      	bne.n	8003504 <HAL_TIM_IRQHandler+0x208>
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	681b      	ldr	r3, [r3, #0]
 80034f8:	f06f 0220 	mvn.w	r2, #32
 80034fc:	611a      	str	r2, [r3, #16]
 80034fe:	6878      	ldr	r0, [r7, #4]
 8003500:	f000 f8ac 	bl	800365c <HAL_TIMEx_CommutCallback>
 8003504:	bf00      	nop
 8003506:	3708      	adds	r7, #8
 8003508:	46bd      	mov	sp, r7
 800350a:	bd80      	pop	{r7, pc}

0800350c <HAL_TIM_OC_DelayElapsedCallback>:
 800350c:	b480      	push	{r7}
 800350e:	b083      	sub	sp, #12
 8003510:	af00      	add	r7, sp, #0
 8003512:	6078      	str	r0, [r7, #4]
 8003514:	bf00      	nop
 8003516:	370c      	adds	r7, #12
 8003518:	46bd      	mov	sp, r7
 800351a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800351e:	4770      	bx	lr

08003520 <HAL_TIM_IC_CaptureCallback>:
 8003520:	b480      	push	{r7}
 8003522:	b083      	sub	sp, #12
 8003524:	af00      	add	r7, sp, #0
 8003526:	6078      	str	r0, [r7, #4]
 8003528:	bf00      	nop
 800352a:	370c      	adds	r7, #12
 800352c:	46bd      	mov	sp, r7
 800352e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003532:	4770      	bx	lr

08003534 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003534:	b480      	push	{r7}
 8003536:	b083      	sub	sp, #12
 8003538:	af00      	add	r7, sp, #0
 800353a:	6078      	str	r0, [r7, #4]
 800353c:	bf00      	nop
 800353e:	370c      	adds	r7, #12
 8003540:	46bd      	mov	sp, r7
 8003542:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003546:	4770      	bx	lr

08003548 <HAL_TIM_TriggerCallback>:
 8003548:	b480      	push	{r7}
 800354a:	b083      	sub	sp, #12
 800354c:	af00      	add	r7, sp, #0
 800354e:	6078      	str	r0, [r7, #4]
 8003550:	bf00      	nop
 8003552:	370c      	adds	r7, #12
 8003554:	46bd      	mov	sp, r7
 8003556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800355a:	4770      	bx	lr

0800355c <TIM_Base_SetConfig>:
 800355c:	b480      	push	{r7}
 800355e:	b085      	sub	sp, #20
 8003560:	af00      	add	r7, sp, #0
 8003562:	6078      	str	r0, [r7, #4]
 8003564:	6039      	str	r1, [r7, #0]
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	681b      	ldr	r3, [r3, #0]
 800356a:	60fb      	str	r3, [r7, #12]
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	4a34      	ldr	r2, [pc, #208]	; (8003640 <TIM_Base_SetConfig+0xe4>)
 8003570:	4293      	cmp	r3, r2
 8003572:	d00f      	beq.n	8003594 <TIM_Base_SetConfig+0x38>
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800357a:	d00b      	beq.n	8003594 <TIM_Base_SetConfig+0x38>
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	4a31      	ldr	r2, [pc, #196]	; (8003644 <TIM_Base_SetConfig+0xe8>)
 8003580:	4293      	cmp	r3, r2
 8003582:	d007      	beq.n	8003594 <TIM_Base_SetConfig+0x38>
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	4a30      	ldr	r2, [pc, #192]	; (8003648 <TIM_Base_SetConfig+0xec>)
 8003588:	4293      	cmp	r3, r2
 800358a:	d003      	beq.n	8003594 <TIM_Base_SetConfig+0x38>
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	4a2f      	ldr	r2, [pc, #188]	; (800364c <TIM_Base_SetConfig+0xf0>)
 8003590:	4293      	cmp	r3, r2
 8003592:	d108      	bne.n	80035a6 <TIM_Base_SetConfig+0x4a>
 8003594:	68fb      	ldr	r3, [r7, #12]
 8003596:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800359a:	60fb      	str	r3, [r7, #12]
 800359c:	683b      	ldr	r3, [r7, #0]
 800359e:	685b      	ldr	r3, [r3, #4]
 80035a0:	68fa      	ldr	r2, [r7, #12]
 80035a2:	4313      	orrs	r3, r2
 80035a4:	60fb      	str	r3, [r7, #12]
 80035a6:	687b      	ldr	r3, [r7, #4]
 80035a8:	4a25      	ldr	r2, [pc, #148]	; (8003640 <TIM_Base_SetConfig+0xe4>)
 80035aa:	4293      	cmp	r3, r2
 80035ac:	d01b      	beq.n	80035e6 <TIM_Base_SetConfig+0x8a>
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80035b4:	d017      	beq.n	80035e6 <TIM_Base_SetConfig+0x8a>
 80035b6:	687b      	ldr	r3, [r7, #4]
 80035b8:	4a22      	ldr	r2, [pc, #136]	; (8003644 <TIM_Base_SetConfig+0xe8>)
 80035ba:	4293      	cmp	r3, r2
 80035bc:	d013      	beq.n	80035e6 <TIM_Base_SetConfig+0x8a>
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	4a21      	ldr	r2, [pc, #132]	; (8003648 <TIM_Base_SetConfig+0xec>)
 80035c2:	4293      	cmp	r3, r2
 80035c4:	d00f      	beq.n	80035e6 <TIM_Base_SetConfig+0x8a>
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	4a20      	ldr	r2, [pc, #128]	; (800364c <TIM_Base_SetConfig+0xf0>)
 80035ca:	4293      	cmp	r3, r2
 80035cc:	d00b      	beq.n	80035e6 <TIM_Base_SetConfig+0x8a>
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	4a1f      	ldr	r2, [pc, #124]	; (8003650 <TIM_Base_SetConfig+0xf4>)
 80035d2:	4293      	cmp	r3, r2
 80035d4:	d007      	beq.n	80035e6 <TIM_Base_SetConfig+0x8a>
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	4a1e      	ldr	r2, [pc, #120]	; (8003654 <TIM_Base_SetConfig+0xf8>)
 80035da:	4293      	cmp	r3, r2
 80035dc:	d003      	beq.n	80035e6 <TIM_Base_SetConfig+0x8a>
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	4a1d      	ldr	r2, [pc, #116]	; (8003658 <TIM_Base_SetConfig+0xfc>)
 80035e2:	4293      	cmp	r3, r2
 80035e4:	d108      	bne.n	80035f8 <TIM_Base_SetConfig+0x9c>
 80035e6:	68fb      	ldr	r3, [r7, #12]
 80035e8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80035ec:	60fb      	str	r3, [r7, #12]
 80035ee:	683b      	ldr	r3, [r7, #0]
 80035f0:	68db      	ldr	r3, [r3, #12]
 80035f2:	68fa      	ldr	r2, [r7, #12]
 80035f4:	4313      	orrs	r3, r2
 80035f6:	60fb      	str	r3, [r7, #12]
 80035f8:	68fb      	ldr	r3, [r7, #12]
 80035fa:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80035fe:	683b      	ldr	r3, [r7, #0]
 8003600:	695b      	ldr	r3, [r3, #20]
 8003602:	4313      	orrs	r3, r2
 8003604:	60fb      	str	r3, [r7, #12]
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	68fa      	ldr	r2, [r7, #12]
 800360a:	601a      	str	r2, [r3, #0]
 800360c:	683b      	ldr	r3, [r7, #0]
 800360e:	689a      	ldr	r2, [r3, #8]
 8003610:	687b      	ldr	r3, [r7, #4]
 8003612:	62da      	str	r2, [r3, #44]	; 0x2c
 8003614:	683b      	ldr	r3, [r7, #0]
 8003616:	681a      	ldr	r2, [r3, #0]
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	629a      	str	r2, [r3, #40]	; 0x28
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	4a08      	ldr	r2, [pc, #32]	; (8003640 <TIM_Base_SetConfig+0xe4>)
 8003620:	4293      	cmp	r3, r2
 8003622:	d103      	bne.n	800362c <TIM_Base_SetConfig+0xd0>
 8003624:	683b      	ldr	r3, [r7, #0]
 8003626:	691a      	ldr	r2, [r3, #16]
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	631a      	str	r2, [r3, #48]	; 0x30
 800362c:	687b      	ldr	r3, [r7, #4]
 800362e:	2201      	movs	r2, #1
 8003630:	615a      	str	r2, [r3, #20]
 8003632:	bf00      	nop
 8003634:	3714      	adds	r7, #20
 8003636:	46bd      	mov	sp, r7
 8003638:	f85d 7b04 	ldr.w	r7, [sp], #4
 800363c:	4770      	bx	lr
 800363e:	bf00      	nop
 8003640:	40010000 	.word	0x40010000
 8003644:	40000400 	.word	0x40000400
 8003648:	40000800 	.word	0x40000800
 800364c:	40000c00 	.word	0x40000c00
 8003650:	40014000 	.word	0x40014000
 8003654:	40014400 	.word	0x40014400
 8003658:	40014800 	.word	0x40014800

0800365c <HAL_TIMEx_CommutCallback>:
 800365c:	b480      	push	{r7}
 800365e:	b083      	sub	sp, #12
 8003660:	af00      	add	r7, sp, #0
 8003662:	6078      	str	r0, [r7, #4]
 8003664:	bf00      	nop
 8003666:	370c      	adds	r7, #12
 8003668:	46bd      	mov	sp, r7
 800366a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800366e:	4770      	bx	lr

08003670 <HAL_TIMEx_BreakCallback>:
 8003670:	b480      	push	{r7}
 8003672:	b083      	sub	sp, #12
 8003674:	af00      	add	r7, sp, #0
 8003676:	6078      	str	r0, [r7, #4]
 8003678:	bf00      	nop
 800367a:	370c      	adds	r7, #12
 800367c:	46bd      	mov	sp, r7
 800367e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003682:	4770      	bx	lr

08003684 <HAL_UART_Init>:
 8003684:	b580      	push	{r7, lr}
 8003686:	b082      	sub	sp, #8
 8003688:	af00      	add	r7, sp, #0
 800368a:	6078      	str	r0, [r7, #4]
 800368c:	687b      	ldr	r3, [r7, #4]
 800368e:	2b00      	cmp	r3, #0
 8003690:	d101      	bne.n	8003696 <HAL_UART_Init+0x12>
 8003692:	2301      	movs	r3, #1
 8003694:	e03f      	b.n	8003716 <HAL_UART_Init+0x92>
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800369c:	b2db      	uxtb	r3, r3
 800369e:	2b00      	cmp	r3, #0
 80036a0:	d106      	bne.n	80036b0 <HAL_UART_Init+0x2c>
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	2200      	movs	r2, #0
 80036a6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80036aa:	6878      	ldr	r0, [r7, #4]
 80036ac:	f7fe fda2 	bl	80021f4 <HAL_UART_MspInit>
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	2224      	movs	r2, #36	; 0x24
 80036b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	681b      	ldr	r3, [r3, #0]
 80036bc:	68da      	ldr	r2, [r3, #12]
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	681b      	ldr	r3, [r3, #0]
 80036c2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80036c6:	60da      	str	r2, [r3, #12]
 80036c8:	6878      	ldr	r0, [r7, #4]
 80036ca:	f000 f929 	bl	8003920 <UART_SetConfig>
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	681b      	ldr	r3, [r3, #0]
 80036d2:	691a      	ldr	r2, [r3, #16]
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	681b      	ldr	r3, [r3, #0]
 80036d8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80036dc:	611a      	str	r2, [r3, #16]
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	681b      	ldr	r3, [r3, #0]
 80036e2:	695a      	ldr	r2, [r3, #20]
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	681b      	ldr	r3, [r3, #0]
 80036e8:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80036ec:	615a      	str	r2, [r3, #20]
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	68da      	ldr	r2, [r3, #12]
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	681b      	ldr	r3, [r3, #0]
 80036f8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80036fc:	60da      	str	r2, [r3, #12]
 80036fe:	687b      	ldr	r3, [r7, #4]
 8003700:	2200      	movs	r2, #0
 8003702:	641a      	str	r2, [r3, #64]	; 0x40
 8003704:	687b      	ldr	r3, [r7, #4]
 8003706:	2220      	movs	r2, #32
 8003708:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	2220      	movs	r2, #32
 8003710:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003714:	2300      	movs	r3, #0
 8003716:	4618      	mov	r0, r3
 8003718:	3708      	adds	r7, #8
 800371a:	46bd      	mov	sp, r7
 800371c:	bd80      	pop	{r7, pc}

0800371e <HAL_UART_Transmit>:
 800371e:	b580      	push	{r7, lr}
 8003720:	b08a      	sub	sp, #40	; 0x28
 8003722:	af02      	add	r7, sp, #8
 8003724:	60f8      	str	r0, [r7, #12]
 8003726:	60b9      	str	r1, [r7, #8]
 8003728:	603b      	str	r3, [r7, #0]
 800372a:	4613      	mov	r3, r2
 800372c:	80fb      	strh	r3, [r7, #6]
 800372e:	2300      	movs	r3, #0
 8003730:	617b      	str	r3, [r7, #20]
 8003732:	68fb      	ldr	r3, [r7, #12]
 8003734:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003738:	b2db      	uxtb	r3, r3
 800373a:	2b20      	cmp	r3, #32
 800373c:	d17c      	bne.n	8003838 <HAL_UART_Transmit+0x11a>
 800373e:	68bb      	ldr	r3, [r7, #8]
 8003740:	2b00      	cmp	r3, #0
 8003742:	d002      	beq.n	800374a <HAL_UART_Transmit+0x2c>
 8003744:	88fb      	ldrh	r3, [r7, #6]
 8003746:	2b00      	cmp	r3, #0
 8003748:	d101      	bne.n	800374e <HAL_UART_Transmit+0x30>
 800374a:	2301      	movs	r3, #1
 800374c:	e075      	b.n	800383a <HAL_UART_Transmit+0x11c>
 800374e:	68fb      	ldr	r3, [r7, #12]
 8003750:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003754:	2b01      	cmp	r3, #1
 8003756:	d101      	bne.n	800375c <HAL_UART_Transmit+0x3e>
 8003758:	2302      	movs	r3, #2
 800375a:	e06e      	b.n	800383a <HAL_UART_Transmit+0x11c>
 800375c:	68fb      	ldr	r3, [r7, #12]
 800375e:	2201      	movs	r2, #1
 8003760:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003764:	68fb      	ldr	r3, [r7, #12]
 8003766:	2200      	movs	r2, #0
 8003768:	641a      	str	r2, [r3, #64]	; 0x40
 800376a:	68fb      	ldr	r3, [r7, #12]
 800376c:	2221      	movs	r2, #33	; 0x21
 800376e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003772:	f7fe fde7 	bl	8002344 <HAL_GetTick>
 8003776:	6178      	str	r0, [r7, #20]
 8003778:	68fb      	ldr	r3, [r7, #12]
 800377a:	88fa      	ldrh	r2, [r7, #6]
 800377c:	849a      	strh	r2, [r3, #36]	; 0x24
 800377e:	68fb      	ldr	r3, [r7, #12]
 8003780:	88fa      	ldrh	r2, [r7, #6]
 8003782:	84da      	strh	r2, [r3, #38]	; 0x26
 8003784:	68fb      	ldr	r3, [r7, #12]
 8003786:	689b      	ldr	r3, [r3, #8]
 8003788:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800378c:	d108      	bne.n	80037a0 <HAL_UART_Transmit+0x82>
 800378e:	68fb      	ldr	r3, [r7, #12]
 8003790:	691b      	ldr	r3, [r3, #16]
 8003792:	2b00      	cmp	r3, #0
 8003794:	d104      	bne.n	80037a0 <HAL_UART_Transmit+0x82>
 8003796:	2300      	movs	r3, #0
 8003798:	61fb      	str	r3, [r7, #28]
 800379a:	68bb      	ldr	r3, [r7, #8]
 800379c:	61bb      	str	r3, [r7, #24]
 800379e:	e003      	b.n	80037a8 <HAL_UART_Transmit+0x8a>
 80037a0:	68bb      	ldr	r3, [r7, #8]
 80037a2:	61fb      	str	r3, [r7, #28]
 80037a4:	2300      	movs	r3, #0
 80037a6:	61bb      	str	r3, [r7, #24]
 80037a8:	68fb      	ldr	r3, [r7, #12]
 80037aa:	2200      	movs	r2, #0
 80037ac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80037b0:	e02a      	b.n	8003808 <HAL_UART_Transmit+0xea>
 80037b2:	683b      	ldr	r3, [r7, #0]
 80037b4:	9300      	str	r3, [sp, #0]
 80037b6:	697b      	ldr	r3, [r7, #20]
 80037b8:	2200      	movs	r2, #0
 80037ba:	2180      	movs	r1, #128	; 0x80
 80037bc:	68f8      	ldr	r0, [r7, #12]
 80037be:	f000 f840 	bl	8003842 <UART_WaitOnFlagUntilTimeout>
 80037c2:	4603      	mov	r3, r0
 80037c4:	2b00      	cmp	r3, #0
 80037c6:	d001      	beq.n	80037cc <HAL_UART_Transmit+0xae>
 80037c8:	2303      	movs	r3, #3
 80037ca:	e036      	b.n	800383a <HAL_UART_Transmit+0x11c>
 80037cc:	69fb      	ldr	r3, [r7, #28]
 80037ce:	2b00      	cmp	r3, #0
 80037d0:	d10b      	bne.n	80037ea <HAL_UART_Transmit+0xcc>
 80037d2:	69bb      	ldr	r3, [r7, #24]
 80037d4:	881b      	ldrh	r3, [r3, #0]
 80037d6:	461a      	mov	r2, r3
 80037d8:	68fb      	ldr	r3, [r7, #12]
 80037da:	681b      	ldr	r3, [r3, #0]
 80037dc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80037e0:	605a      	str	r2, [r3, #4]
 80037e2:	69bb      	ldr	r3, [r7, #24]
 80037e4:	3302      	adds	r3, #2
 80037e6:	61bb      	str	r3, [r7, #24]
 80037e8:	e007      	b.n	80037fa <HAL_UART_Transmit+0xdc>
 80037ea:	69fb      	ldr	r3, [r7, #28]
 80037ec:	781a      	ldrb	r2, [r3, #0]
 80037ee:	68fb      	ldr	r3, [r7, #12]
 80037f0:	681b      	ldr	r3, [r3, #0]
 80037f2:	605a      	str	r2, [r3, #4]
 80037f4:	69fb      	ldr	r3, [r7, #28]
 80037f6:	3301      	adds	r3, #1
 80037f8:	61fb      	str	r3, [r7, #28]
 80037fa:	68fb      	ldr	r3, [r7, #12]
 80037fc:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80037fe:	b29b      	uxth	r3, r3
 8003800:	3b01      	subs	r3, #1
 8003802:	b29a      	uxth	r2, r3
 8003804:	68fb      	ldr	r3, [r7, #12]
 8003806:	84da      	strh	r2, [r3, #38]	; 0x26
 8003808:	68fb      	ldr	r3, [r7, #12]
 800380a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800380c:	b29b      	uxth	r3, r3
 800380e:	2b00      	cmp	r3, #0
 8003810:	d1cf      	bne.n	80037b2 <HAL_UART_Transmit+0x94>
 8003812:	683b      	ldr	r3, [r7, #0]
 8003814:	9300      	str	r3, [sp, #0]
 8003816:	697b      	ldr	r3, [r7, #20]
 8003818:	2200      	movs	r2, #0
 800381a:	2140      	movs	r1, #64	; 0x40
 800381c:	68f8      	ldr	r0, [r7, #12]
 800381e:	f000 f810 	bl	8003842 <UART_WaitOnFlagUntilTimeout>
 8003822:	4603      	mov	r3, r0
 8003824:	2b00      	cmp	r3, #0
 8003826:	d001      	beq.n	800382c <HAL_UART_Transmit+0x10e>
 8003828:	2303      	movs	r3, #3
 800382a:	e006      	b.n	800383a <HAL_UART_Transmit+0x11c>
 800382c:	68fb      	ldr	r3, [r7, #12]
 800382e:	2220      	movs	r2, #32
 8003830:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003834:	2300      	movs	r3, #0
 8003836:	e000      	b.n	800383a <HAL_UART_Transmit+0x11c>
 8003838:	2302      	movs	r3, #2
 800383a:	4618      	mov	r0, r3
 800383c:	3720      	adds	r7, #32
 800383e:	46bd      	mov	sp, r7
 8003840:	bd80      	pop	{r7, pc}

08003842 <UART_WaitOnFlagUntilTimeout>:
 8003842:	b580      	push	{r7, lr}
 8003844:	b090      	sub	sp, #64	; 0x40
 8003846:	af00      	add	r7, sp, #0
 8003848:	60f8      	str	r0, [r7, #12]
 800384a:	60b9      	str	r1, [r7, #8]
 800384c:	603b      	str	r3, [r7, #0]
 800384e:	4613      	mov	r3, r2
 8003850:	71fb      	strb	r3, [r7, #7]
 8003852:	e050      	b.n	80038f6 <UART_WaitOnFlagUntilTimeout+0xb4>
 8003854:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003856:	f1b3 3fff 	cmp.w	r3, #4294967295
 800385a:	d04c      	beq.n	80038f6 <UART_WaitOnFlagUntilTimeout+0xb4>
 800385c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800385e:	2b00      	cmp	r3, #0
 8003860:	d007      	beq.n	8003872 <UART_WaitOnFlagUntilTimeout+0x30>
 8003862:	f7fe fd6f 	bl	8002344 <HAL_GetTick>
 8003866:	4602      	mov	r2, r0
 8003868:	683b      	ldr	r3, [r7, #0]
 800386a:	1ad3      	subs	r3, r2, r3
 800386c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800386e:	429a      	cmp	r2, r3
 8003870:	d241      	bcs.n	80038f6 <UART_WaitOnFlagUntilTimeout+0xb4>
 8003872:	68fb      	ldr	r3, [r7, #12]
 8003874:	681b      	ldr	r3, [r3, #0]
 8003876:	330c      	adds	r3, #12
 8003878:	62bb      	str	r3, [r7, #40]	; 0x28
 800387a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800387c:	e853 3f00 	ldrex	r3, [r3]
 8003880:	627b      	str	r3, [r7, #36]	; 0x24
 8003882:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003884:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8003888:	63fb      	str	r3, [r7, #60]	; 0x3c
 800388a:	68fb      	ldr	r3, [r7, #12]
 800388c:	681b      	ldr	r3, [r3, #0]
 800388e:	330c      	adds	r3, #12
 8003890:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8003892:	637a      	str	r2, [r7, #52]	; 0x34
 8003894:	633b      	str	r3, [r7, #48]	; 0x30
 8003896:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8003898:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800389a:	e841 2300 	strex	r3, r2, [r1]
 800389e:	62fb      	str	r3, [r7, #44]	; 0x2c
 80038a0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80038a2:	2b00      	cmp	r3, #0
 80038a4:	d1e5      	bne.n	8003872 <UART_WaitOnFlagUntilTimeout+0x30>
 80038a6:	68fb      	ldr	r3, [r7, #12]
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	3314      	adds	r3, #20
 80038ac:	617b      	str	r3, [r7, #20]
 80038ae:	697b      	ldr	r3, [r7, #20]
 80038b0:	e853 3f00 	ldrex	r3, [r3]
 80038b4:	613b      	str	r3, [r7, #16]
 80038b6:	693b      	ldr	r3, [r7, #16]
 80038b8:	f023 0301 	bic.w	r3, r3, #1
 80038bc:	63bb      	str	r3, [r7, #56]	; 0x38
 80038be:	68fb      	ldr	r3, [r7, #12]
 80038c0:	681b      	ldr	r3, [r3, #0]
 80038c2:	3314      	adds	r3, #20
 80038c4:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80038c6:	623a      	str	r2, [r7, #32]
 80038c8:	61fb      	str	r3, [r7, #28]
 80038ca:	69f9      	ldr	r1, [r7, #28]
 80038cc:	6a3a      	ldr	r2, [r7, #32]
 80038ce:	e841 2300 	strex	r3, r2, [r1]
 80038d2:	61bb      	str	r3, [r7, #24]
 80038d4:	69bb      	ldr	r3, [r7, #24]
 80038d6:	2b00      	cmp	r3, #0
 80038d8:	d1e5      	bne.n	80038a6 <UART_WaitOnFlagUntilTimeout+0x64>
 80038da:	68fb      	ldr	r3, [r7, #12]
 80038dc:	2220      	movs	r2, #32
 80038de:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80038e2:	68fb      	ldr	r3, [r7, #12]
 80038e4:	2220      	movs	r2, #32
 80038e6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80038ea:	68fb      	ldr	r3, [r7, #12]
 80038ec:	2200      	movs	r2, #0
 80038ee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80038f2:	2303      	movs	r3, #3
 80038f4:	e00f      	b.n	8003916 <UART_WaitOnFlagUntilTimeout+0xd4>
 80038f6:	68fb      	ldr	r3, [r7, #12]
 80038f8:	681b      	ldr	r3, [r3, #0]
 80038fa:	681a      	ldr	r2, [r3, #0]
 80038fc:	68bb      	ldr	r3, [r7, #8]
 80038fe:	4013      	ands	r3, r2
 8003900:	68ba      	ldr	r2, [r7, #8]
 8003902:	429a      	cmp	r2, r3
 8003904:	bf0c      	ite	eq
 8003906:	2301      	moveq	r3, #1
 8003908:	2300      	movne	r3, #0
 800390a:	b2db      	uxtb	r3, r3
 800390c:	461a      	mov	r2, r3
 800390e:	79fb      	ldrb	r3, [r7, #7]
 8003910:	429a      	cmp	r2, r3
 8003912:	d09f      	beq.n	8003854 <UART_WaitOnFlagUntilTimeout+0x12>
 8003914:	2300      	movs	r3, #0
 8003916:	4618      	mov	r0, r3
 8003918:	3740      	adds	r7, #64	; 0x40
 800391a:	46bd      	mov	sp, r7
 800391c:	bd80      	pop	{r7, pc}
	...

08003920 <UART_SetConfig>:
 8003920:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003924:	b0c0      	sub	sp, #256	; 0x100
 8003926:	af00      	add	r7, sp, #0
 8003928:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 800392c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003930:	681b      	ldr	r3, [r3, #0]
 8003932:	691b      	ldr	r3, [r3, #16]
 8003934:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8003938:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800393c:	68d9      	ldr	r1, [r3, #12]
 800393e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003942:	681a      	ldr	r2, [r3, #0]
 8003944:	ea40 0301 	orr.w	r3, r0, r1
 8003948:	6113      	str	r3, [r2, #16]
 800394a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800394e:	689a      	ldr	r2, [r3, #8]
 8003950:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003954:	691b      	ldr	r3, [r3, #16]
 8003956:	431a      	orrs	r2, r3
 8003958:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800395c:	695b      	ldr	r3, [r3, #20]
 800395e:	431a      	orrs	r2, r3
 8003960:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003964:	69db      	ldr	r3, [r3, #28]
 8003966:	4313      	orrs	r3, r2
 8003968:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800396c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003970:	681b      	ldr	r3, [r3, #0]
 8003972:	68db      	ldr	r3, [r3, #12]
 8003974:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8003978:	f021 010c 	bic.w	r1, r1, #12
 800397c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003980:	681a      	ldr	r2, [r3, #0]
 8003982:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8003986:	430b      	orrs	r3, r1
 8003988:	60d3      	str	r3, [r2, #12]
 800398a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800398e:	681b      	ldr	r3, [r3, #0]
 8003990:	695b      	ldr	r3, [r3, #20]
 8003992:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8003996:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800399a:	6999      	ldr	r1, [r3, #24]
 800399c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80039a0:	681a      	ldr	r2, [r3, #0]
 80039a2:	ea40 0301 	orr.w	r3, r0, r1
 80039a6:	6153      	str	r3, [r2, #20]
 80039a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80039ac:	681a      	ldr	r2, [r3, #0]
 80039ae:	4b8f      	ldr	r3, [pc, #572]	; (8003bec <UART_SetConfig+0x2cc>)
 80039b0:	429a      	cmp	r2, r3
 80039b2:	d005      	beq.n	80039c0 <UART_SetConfig+0xa0>
 80039b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80039b8:	681a      	ldr	r2, [r3, #0]
 80039ba:	4b8d      	ldr	r3, [pc, #564]	; (8003bf0 <UART_SetConfig+0x2d0>)
 80039bc:	429a      	cmp	r2, r3
 80039be:	d104      	bne.n	80039ca <UART_SetConfig+0xaa>
 80039c0:	f7ff fb9a 	bl	80030f8 <HAL_RCC_GetPCLK2Freq>
 80039c4:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 80039c8:	e003      	b.n	80039d2 <UART_SetConfig+0xb2>
 80039ca:	f7ff fb81 	bl	80030d0 <HAL_RCC_GetPCLK1Freq>
 80039ce:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 80039d2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80039d6:	69db      	ldr	r3, [r3, #28]
 80039d8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80039dc:	f040 810c 	bne.w	8003bf8 <UART_SetConfig+0x2d8>
 80039e0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80039e4:	2200      	movs	r2, #0
 80039e6:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 80039ea:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 80039ee:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 80039f2:	4622      	mov	r2, r4
 80039f4:	462b      	mov	r3, r5
 80039f6:	1891      	adds	r1, r2, r2
 80039f8:	65b9      	str	r1, [r7, #88]	; 0x58
 80039fa:	415b      	adcs	r3, r3
 80039fc:	65fb      	str	r3, [r7, #92]	; 0x5c
 80039fe:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8003a02:	4621      	mov	r1, r4
 8003a04:	eb12 0801 	adds.w	r8, r2, r1
 8003a08:	4629      	mov	r1, r5
 8003a0a:	eb43 0901 	adc.w	r9, r3, r1
 8003a0e:	f04f 0200 	mov.w	r2, #0
 8003a12:	f04f 0300 	mov.w	r3, #0
 8003a16:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003a1a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003a1e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003a22:	4690      	mov	r8, r2
 8003a24:	4699      	mov	r9, r3
 8003a26:	4623      	mov	r3, r4
 8003a28:	eb18 0303 	adds.w	r3, r8, r3
 8003a2c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8003a30:	462b      	mov	r3, r5
 8003a32:	eb49 0303 	adc.w	r3, r9, r3
 8003a36:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8003a3a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003a3e:	685b      	ldr	r3, [r3, #4]
 8003a40:	2200      	movs	r2, #0
 8003a42:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8003a46:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8003a4a:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8003a4e:	460b      	mov	r3, r1
 8003a50:	18db      	adds	r3, r3, r3
 8003a52:	653b      	str	r3, [r7, #80]	; 0x50
 8003a54:	4613      	mov	r3, r2
 8003a56:	eb42 0303 	adc.w	r3, r2, r3
 8003a5a:	657b      	str	r3, [r7, #84]	; 0x54
 8003a5c:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8003a60:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8003a64:	f7fd f8a8 	bl	8000bb8 <__aeabi_uldivmod>
 8003a68:	4602      	mov	r2, r0
 8003a6a:	460b      	mov	r3, r1
 8003a6c:	4b61      	ldr	r3, [pc, #388]	; (8003bf4 <UART_SetConfig+0x2d4>)
 8003a6e:	fba3 2302 	umull	r2, r3, r3, r2
 8003a72:	095b      	lsrs	r3, r3, #5
 8003a74:	011c      	lsls	r4, r3, #4
 8003a76:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003a7a:	2200      	movs	r2, #0
 8003a7c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8003a80:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 8003a84:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 8003a88:	4642      	mov	r2, r8
 8003a8a:	464b      	mov	r3, r9
 8003a8c:	1891      	adds	r1, r2, r2
 8003a8e:	64b9      	str	r1, [r7, #72]	; 0x48
 8003a90:	415b      	adcs	r3, r3
 8003a92:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003a94:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8003a98:	4641      	mov	r1, r8
 8003a9a:	eb12 0a01 	adds.w	sl, r2, r1
 8003a9e:	4649      	mov	r1, r9
 8003aa0:	eb43 0b01 	adc.w	fp, r3, r1
 8003aa4:	f04f 0200 	mov.w	r2, #0
 8003aa8:	f04f 0300 	mov.w	r3, #0
 8003aac:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8003ab0:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8003ab4:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8003ab8:	4692      	mov	sl, r2
 8003aba:	469b      	mov	fp, r3
 8003abc:	4643      	mov	r3, r8
 8003abe:	eb1a 0303 	adds.w	r3, sl, r3
 8003ac2:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8003ac6:	464b      	mov	r3, r9
 8003ac8:	eb4b 0303 	adc.w	r3, fp, r3
 8003acc:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8003ad0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003ad4:	685b      	ldr	r3, [r3, #4]
 8003ad6:	2200      	movs	r2, #0
 8003ad8:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8003adc:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8003ae0:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8003ae4:	460b      	mov	r3, r1
 8003ae6:	18db      	adds	r3, r3, r3
 8003ae8:	643b      	str	r3, [r7, #64]	; 0x40
 8003aea:	4613      	mov	r3, r2
 8003aec:	eb42 0303 	adc.w	r3, r2, r3
 8003af0:	647b      	str	r3, [r7, #68]	; 0x44
 8003af2:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8003af6:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8003afa:	f7fd f85d 	bl	8000bb8 <__aeabi_uldivmod>
 8003afe:	4602      	mov	r2, r0
 8003b00:	460b      	mov	r3, r1
 8003b02:	4611      	mov	r1, r2
 8003b04:	4b3b      	ldr	r3, [pc, #236]	; (8003bf4 <UART_SetConfig+0x2d4>)
 8003b06:	fba3 2301 	umull	r2, r3, r3, r1
 8003b0a:	095b      	lsrs	r3, r3, #5
 8003b0c:	2264      	movs	r2, #100	; 0x64
 8003b0e:	fb02 f303 	mul.w	r3, r2, r3
 8003b12:	1acb      	subs	r3, r1, r3
 8003b14:	00db      	lsls	r3, r3, #3
 8003b16:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8003b1a:	4b36      	ldr	r3, [pc, #216]	; (8003bf4 <UART_SetConfig+0x2d4>)
 8003b1c:	fba3 2302 	umull	r2, r3, r3, r2
 8003b20:	095b      	lsrs	r3, r3, #5
 8003b22:	005b      	lsls	r3, r3, #1
 8003b24:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8003b28:	441c      	add	r4, r3
 8003b2a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003b2e:	2200      	movs	r2, #0
 8003b30:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8003b34:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8003b38:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8003b3c:	4642      	mov	r2, r8
 8003b3e:	464b      	mov	r3, r9
 8003b40:	1891      	adds	r1, r2, r2
 8003b42:	63b9      	str	r1, [r7, #56]	; 0x38
 8003b44:	415b      	adcs	r3, r3
 8003b46:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003b48:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8003b4c:	4641      	mov	r1, r8
 8003b4e:	1851      	adds	r1, r2, r1
 8003b50:	6339      	str	r1, [r7, #48]	; 0x30
 8003b52:	4649      	mov	r1, r9
 8003b54:	414b      	adcs	r3, r1
 8003b56:	637b      	str	r3, [r7, #52]	; 0x34
 8003b58:	f04f 0200 	mov.w	r2, #0
 8003b5c:	f04f 0300 	mov.w	r3, #0
 8003b60:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 8003b64:	4659      	mov	r1, fp
 8003b66:	00cb      	lsls	r3, r1, #3
 8003b68:	4651      	mov	r1, sl
 8003b6a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003b6e:	4651      	mov	r1, sl
 8003b70:	00ca      	lsls	r2, r1, #3
 8003b72:	4610      	mov	r0, r2
 8003b74:	4619      	mov	r1, r3
 8003b76:	4603      	mov	r3, r0
 8003b78:	4642      	mov	r2, r8
 8003b7a:	189b      	adds	r3, r3, r2
 8003b7c:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8003b80:	464b      	mov	r3, r9
 8003b82:	460a      	mov	r2, r1
 8003b84:	eb42 0303 	adc.w	r3, r2, r3
 8003b88:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8003b8c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003b90:	685b      	ldr	r3, [r3, #4]
 8003b92:	2200      	movs	r2, #0
 8003b94:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8003b98:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 8003b9c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8003ba0:	460b      	mov	r3, r1
 8003ba2:	18db      	adds	r3, r3, r3
 8003ba4:	62bb      	str	r3, [r7, #40]	; 0x28
 8003ba6:	4613      	mov	r3, r2
 8003ba8:	eb42 0303 	adc.w	r3, r2, r3
 8003bac:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003bae:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8003bb2:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8003bb6:	f7fc ffff 	bl	8000bb8 <__aeabi_uldivmod>
 8003bba:	4602      	mov	r2, r0
 8003bbc:	460b      	mov	r3, r1
 8003bbe:	4b0d      	ldr	r3, [pc, #52]	; (8003bf4 <UART_SetConfig+0x2d4>)
 8003bc0:	fba3 1302 	umull	r1, r3, r3, r2
 8003bc4:	095b      	lsrs	r3, r3, #5
 8003bc6:	2164      	movs	r1, #100	; 0x64
 8003bc8:	fb01 f303 	mul.w	r3, r1, r3
 8003bcc:	1ad3      	subs	r3, r2, r3
 8003bce:	00db      	lsls	r3, r3, #3
 8003bd0:	3332      	adds	r3, #50	; 0x32
 8003bd2:	4a08      	ldr	r2, [pc, #32]	; (8003bf4 <UART_SetConfig+0x2d4>)
 8003bd4:	fba2 2303 	umull	r2, r3, r2, r3
 8003bd8:	095b      	lsrs	r3, r3, #5
 8003bda:	f003 0207 	and.w	r2, r3, #7
 8003bde:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003be2:	681b      	ldr	r3, [r3, #0]
 8003be4:	4422      	add	r2, r4
 8003be6:	609a      	str	r2, [r3, #8]
 8003be8:	e106      	b.n	8003df8 <UART_SetConfig+0x4d8>
 8003bea:	bf00      	nop
 8003bec:	40011000 	.word	0x40011000
 8003bf0:	40011400 	.word	0x40011400
 8003bf4:	51eb851f 	.word	0x51eb851f
 8003bf8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003bfc:	2200      	movs	r2, #0
 8003bfe:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8003c02:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8003c06:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8003c0a:	4642      	mov	r2, r8
 8003c0c:	464b      	mov	r3, r9
 8003c0e:	1891      	adds	r1, r2, r2
 8003c10:	6239      	str	r1, [r7, #32]
 8003c12:	415b      	adcs	r3, r3
 8003c14:	627b      	str	r3, [r7, #36]	; 0x24
 8003c16:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8003c1a:	4641      	mov	r1, r8
 8003c1c:	1854      	adds	r4, r2, r1
 8003c1e:	4649      	mov	r1, r9
 8003c20:	eb43 0501 	adc.w	r5, r3, r1
 8003c24:	f04f 0200 	mov.w	r2, #0
 8003c28:	f04f 0300 	mov.w	r3, #0
 8003c2c:	00eb      	lsls	r3, r5, #3
 8003c2e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003c32:	00e2      	lsls	r2, r4, #3
 8003c34:	4614      	mov	r4, r2
 8003c36:	461d      	mov	r5, r3
 8003c38:	4643      	mov	r3, r8
 8003c3a:	18e3      	adds	r3, r4, r3
 8003c3c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8003c40:	464b      	mov	r3, r9
 8003c42:	eb45 0303 	adc.w	r3, r5, r3
 8003c46:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8003c4a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003c4e:	685b      	ldr	r3, [r3, #4]
 8003c50:	2200      	movs	r2, #0
 8003c52:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8003c56:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8003c5a:	f04f 0200 	mov.w	r2, #0
 8003c5e:	f04f 0300 	mov.w	r3, #0
 8003c62:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8003c66:	4629      	mov	r1, r5
 8003c68:	008b      	lsls	r3, r1, #2
 8003c6a:	4621      	mov	r1, r4
 8003c6c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003c70:	4621      	mov	r1, r4
 8003c72:	008a      	lsls	r2, r1, #2
 8003c74:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8003c78:	f7fc ff9e 	bl	8000bb8 <__aeabi_uldivmod>
 8003c7c:	4602      	mov	r2, r0
 8003c7e:	460b      	mov	r3, r1
 8003c80:	4b60      	ldr	r3, [pc, #384]	; (8003e04 <UART_SetConfig+0x4e4>)
 8003c82:	fba3 2302 	umull	r2, r3, r3, r2
 8003c86:	095b      	lsrs	r3, r3, #5
 8003c88:	011c      	lsls	r4, r3, #4
 8003c8a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003c8e:	2200      	movs	r2, #0
 8003c90:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8003c94:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8003c98:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8003c9c:	4642      	mov	r2, r8
 8003c9e:	464b      	mov	r3, r9
 8003ca0:	1891      	adds	r1, r2, r2
 8003ca2:	61b9      	str	r1, [r7, #24]
 8003ca4:	415b      	adcs	r3, r3
 8003ca6:	61fb      	str	r3, [r7, #28]
 8003ca8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003cac:	4641      	mov	r1, r8
 8003cae:	1851      	adds	r1, r2, r1
 8003cb0:	6139      	str	r1, [r7, #16]
 8003cb2:	4649      	mov	r1, r9
 8003cb4:	414b      	adcs	r3, r1
 8003cb6:	617b      	str	r3, [r7, #20]
 8003cb8:	f04f 0200 	mov.w	r2, #0
 8003cbc:	f04f 0300 	mov.w	r3, #0
 8003cc0:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8003cc4:	4659      	mov	r1, fp
 8003cc6:	00cb      	lsls	r3, r1, #3
 8003cc8:	4651      	mov	r1, sl
 8003cca:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003cce:	4651      	mov	r1, sl
 8003cd0:	00ca      	lsls	r2, r1, #3
 8003cd2:	4610      	mov	r0, r2
 8003cd4:	4619      	mov	r1, r3
 8003cd6:	4603      	mov	r3, r0
 8003cd8:	4642      	mov	r2, r8
 8003cda:	189b      	adds	r3, r3, r2
 8003cdc:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8003ce0:	464b      	mov	r3, r9
 8003ce2:	460a      	mov	r2, r1
 8003ce4:	eb42 0303 	adc.w	r3, r2, r3
 8003ce8:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8003cec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003cf0:	685b      	ldr	r3, [r3, #4]
 8003cf2:	2200      	movs	r2, #0
 8003cf4:	67bb      	str	r3, [r7, #120]	; 0x78
 8003cf6:	67fa      	str	r2, [r7, #124]	; 0x7c
 8003cf8:	f04f 0200 	mov.w	r2, #0
 8003cfc:	f04f 0300 	mov.w	r3, #0
 8003d00:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 8003d04:	4649      	mov	r1, r9
 8003d06:	008b      	lsls	r3, r1, #2
 8003d08:	4641      	mov	r1, r8
 8003d0a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003d0e:	4641      	mov	r1, r8
 8003d10:	008a      	lsls	r2, r1, #2
 8003d12:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8003d16:	f7fc ff4f 	bl	8000bb8 <__aeabi_uldivmod>
 8003d1a:	4602      	mov	r2, r0
 8003d1c:	460b      	mov	r3, r1
 8003d1e:	4611      	mov	r1, r2
 8003d20:	4b38      	ldr	r3, [pc, #224]	; (8003e04 <UART_SetConfig+0x4e4>)
 8003d22:	fba3 2301 	umull	r2, r3, r3, r1
 8003d26:	095b      	lsrs	r3, r3, #5
 8003d28:	2264      	movs	r2, #100	; 0x64
 8003d2a:	fb02 f303 	mul.w	r3, r2, r3
 8003d2e:	1acb      	subs	r3, r1, r3
 8003d30:	011b      	lsls	r3, r3, #4
 8003d32:	3332      	adds	r3, #50	; 0x32
 8003d34:	4a33      	ldr	r2, [pc, #204]	; (8003e04 <UART_SetConfig+0x4e4>)
 8003d36:	fba2 2303 	umull	r2, r3, r2, r3
 8003d3a:	095b      	lsrs	r3, r3, #5
 8003d3c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003d40:	441c      	add	r4, r3
 8003d42:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003d46:	2200      	movs	r2, #0
 8003d48:	673b      	str	r3, [r7, #112]	; 0x70
 8003d4a:	677a      	str	r2, [r7, #116]	; 0x74
 8003d4c:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 8003d50:	4642      	mov	r2, r8
 8003d52:	464b      	mov	r3, r9
 8003d54:	1891      	adds	r1, r2, r2
 8003d56:	60b9      	str	r1, [r7, #8]
 8003d58:	415b      	adcs	r3, r3
 8003d5a:	60fb      	str	r3, [r7, #12]
 8003d5c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003d60:	4641      	mov	r1, r8
 8003d62:	1851      	adds	r1, r2, r1
 8003d64:	6039      	str	r1, [r7, #0]
 8003d66:	4649      	mov	r1, r9
 8003d68:	414b      	adcs	r3, r1
 8003d6a:	607b      	str	r3, [r7, #4]
 8003d6c:	f04f 0200 	mov.w	r2, #0
 8003d70:	f04f 0300 	mov.w	r3, #0
 8003d74:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8003d78:	4659      	mov	r1, fp
 8003d7a:	00cb      	lsls	r3, r1, #3
 8003d7c:	4651      	mov	r1, sl
 8003d7e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003d82:	4651      	mov	r1, sl
 8003d84:	00ca      	lsls	r2, r1, #3
 8003d86:	4610      	mov	r0, r2
 8003d88:	4619      	mov	r1, r3
 8003d8a:	4603      	mov	r3, r0
 8003d8c:	4642      	mov	r2, r8
 8003d8e:	189b      	adds	r3, r3, r2
 8003d90:	66bb      	str	r3, [r7, #104]	; 0x68
 8003d92:	464b      	mov	r3, r9
 8003d94:	460a      	mov	r2, r1
 8003d96:	eb42 0303 	adc.w	r3, r2, r3
 8003d9a:	66fb      	str	r3, [r7, #108]	; 0x6c
 8003d9c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003da0:	685b      	ldr	r3, [r3, #4]
 8003da2:	2200      	movs	r2, #0
 8003da4:	663b      	str	r3, [r7, #96]	; 0x60
 8003da6:	667a      	str	r2, [r7, #100]	; 0x64
 8003da8:	f04f 0200 	mov.w	r2, #0
 8003dac:	f04f 0300 	mov.w	r3, #0
 8003db0:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8003db4:	4649      	mov	r1, r9
 8003db6:	008b      	lsls	r3, r1, #2
 8003db8:	4641      	mov	r1, r8
 8003dba:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003dbe:	4641      	mov	r1, r8
 8003dc0:	008a      	lsls	r2, r1, #2
 8003dc2:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8003dc6:	f7fc fef7 	bl	8000bb8 <__aeabi_uldivmod>
 8003dca:	4602      	mov	r2, r0
 8003dcc:	460b      	mov	r3, r1
 8003dce:	4b0d      	ldr	r3, [pc, #52]	; (8003e04 <UART_SetConfig+0x4e4>)
 8003dd0:	fba3 1302 	umull	r1, r3, r3, r2
 8003dd4:	095b      	lsrs	r3, r3, #5
 8003dd6:	2164      	movs	r1, #100	; 0x64
 8003dd8:	fb01 f303 	mul.w	r3, r1, r3
 8003ddc:	1ad3      	subs	r3, r2, r3
 8003dde:	011b      	lsls	r3, r3, #4
 8003de0:	3332      	adds	r3, #50	; 0x32
 8003de2:	4a08      	ldr	r2, [pc, #32]	; (8003e04 <UART_SetConfig+0x4e4>)
 8003de4:	fba2 2303 	umull	r2, r3, r2, r3
 8003de8:	095b      	lsrs	r3, r3, #5
 8003dea:	f003 020f 	and.w	r2, r3, #15
 8003dee:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003df2:	681b      	ldr	r3, [r3, #0]
 8003df4:	4422      	add	r2, r4
 8003df6:	609a      	str	r2, [r3, #8]
 8003df8:	bf00      	nop
 8003dfa:	f507 7780 	add.w	r7, r7, #256	; 0x100
 8003dfe:	46bd      	mov	sp, r7
 8003e00:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003e04:	51eb851f 	.word	0x51eb851f

08003e08 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003e08:	b480      	push	{r7}
 8003e0a:	b083      	sub	sp, #12
 8003e0c:	af00      	add	r7, sp, #0
 8003e0e:	4603      	mov	r3, r0
 8003e10:	6039      	str	r1, [r7, #0]
 8003e12:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003e14:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003e18:	2b00      	cmp	r3, #0
 8003e1a:	db0a      	blt.n	8003e32 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003e1c:	683b      	ldr	r3, [r7, #0]
 8003e1e:	b2da      	uxtb	r2, r3
 8003e20:	490c      	ldr	r1, [pc, #48]	; (8003e54 <__NVIC_SetPriority+0x4c>)
 8003e22:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003e26:	0112      	lsls	r2, r2, #4
 8003e28:	b2d2      	uxtb	r2, r2
 8003e2a:	440b      	add	r3, r1
 8003e2c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8003e30:	e00a      	b.n	8003e48 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003e32:	683b      	ldr	r3, [r7, #0]
 8003e34:	b2da      	uxtb	r2, r3
 8003e36:	4908      	ldr	r1, [pc, #32]	; (8003e58 <__NVIC_SetPriority+0x50>)
 8003e38:	79fb      	ldrb	r3, [r7, #7]
 8003e3a:	f003 030f 	and.w	r3, r3, #15
 8003e3e:	3b04      	subs	r3, #4
 8003e40:	0112      	lsls	r2, r2, #4
 8003e42:	b2d2      	uxtb	r2, r2
 8003e44:	440b      	add	r3, r1
 8003e46:	761a      	strb	r2, [r3, #24]
}
 8003e48:	bf00      	nop
 8003e4a:	370c      	adds	r7, #12
 8003e4c:	46bd      	mov	sp, r7
 8003e4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e52:	4770      	bx	lr
 8003e54:	e000e100 	.word	0xe000e100
 8003e58:	e000ed00 	.word	0xe000ed00

08003e5c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8003e5c:	b580      	push	{r7, lr}
 8003e5e:	af00      	add	r7, sp, #0
  /* Clear overflow flag */
  SysTick->CTRL;
 8003e60:	4b05      	ldr	r3, [pc, #20]	; (8003e78 <SysTick_Handler+0x1c>)
 8003e62:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8003e64:	f002 f9fa 	bl	800625c <xTaskGetSchedulerState>
 8003e68:	4603      	mov	r3, r0
 8003e6a:	2b01      	cmp	r3, #1
 8003e6c:	d001      	beq.n	8003e72 <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
 8003e6e:	f003 f9c3 	bl	80071f8 <xPortSysTickHandler>
  }
}
 8003e72:	bf00      	nop
 8003e74:	bd80      	pop	{r7, pc}
 8003e76:	bf00      	nop
 8003e78:	e000e010 	.word	0xe000e010

08003e7c <SVC_Setup>:
#endif /* SysTick */

/*
  Setup SVC to reset value.
*/
__STATIC_INLINE void SVC_Setup (void) {
 8003e7c:	b580      	push	{r7, lr}
 8003e7e:	af00      	add	r7, sp, #0
#if (__ARM_ARCH_7A__ == 0U)
  /* Service Call interrupt might be configured before kernel start     */
  /* and when its priority is lower or equal to BASEPRI, svc intruction */
  /* causes a Hard Fault.                                               */
  NVIC_SetPriority (SVCall_IRQ_NBR, 0U);
 8003e80:	2100      	movs	r1, #0
 8003e82:	f06f 0004 	mvn.w	r0, #4
 8003e86:	f7ff ffbf 	bl	8003e08 <__NVIC_SetPriority>
#endif
}
 8003e8a:	bf00      	nop
 8003e8c:	bd80      	pop	{r7, pc}
	...

08003e90 <osKernelInitialize>:
static uint32_t OS_Tick_GetOverflow (void);
/* Get OS Tick interval */
static uint32_t OS_Tick_GetInterval (void);
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
 8003e90:	b480      	push	{r7}
 8003e92:	b083      	sub	sp, #12
 8003e94:	af00      	add	r7, sp, #0
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8003e96:	f3ef 8305 	mrs	r3, IPSR
 8003e9a:	603b      	str	r3, [r7, #0]
  return(result);
 8003e9c:	683b      	ldr	r3, [r7, #0]
  osStatus_t stat;

  if (IS_IRQ()) {
 8003e9e:	2b00      	cmp	r3, #0
 8003ea0:	d003      	beq.n	8003eaa <osKernelInitialize+0x1a>
    stat = osErrorISR;
 8003ea2:	f06f 0305 	mvn.w	r3, #5
 8003ea6:	607b      	str	r3, [r7, #4]
 8003ea8:	e00c      	b.n	8003ec4 <osKernelInitialize+0x34>
  }
  else {
    if (KernelState == osKernelInactive) {
 8003eaa:	4b0a      	ldr	r3, [pc, #40]	; (8003ed4 <osKernelInitialize+0x44>)
 8003eac:	681b      	ldr	r3, [r3, #0]
 8003eae:	2b00      	cmp	r3, #0
 8003eb0:	d105      	bne.n	8003ebe <osKernelInitialize+0x2e>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8003eb2:	4b08      	ldr	r3, [pc, #32]	; (8003ed4 <osKernelInitialize+0x44>)
 8003eb4:	2201      	movs	r2, #1
 8003eb6:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8003eb8:	2300      	movs	r3, #0
 8003eba:	607b      	str	r3, [r7, #4]
 8003ebc:	e002      	b.n	8003ec4 <osKernelInitialize+0x34>
    } else {
      stat = osError;
 8003ebe:	f04f 33ff 	mov.w	r3, #4294967295
 8003ec2:	607b      	str	r3, [r7, #4]
    }
  }

  return (stat);
 8003ec4:	687b      	ldr	r3, [r7, #4]
}
 8003ec6:	4618      	mov	r0, r3
 8003ec8:	370c      	adds	r7, #12
 8003eca:	46bd      	mov	sp, r7
 8003ecc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ed0:	4770      	bx	lr
 8003ed2:	bf00      	nop
 8003ed4:	20000440 	.word	0x20000440

08003ed8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8003ed8:	b580      	push	{r7, lr}
 8003eda:	b082      	sub	sp, #8
 8003edc:	af00      	add	r7, sp, #0
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8003ede:	f3ef 8305 	mrs	r3, IPSR
 8003ee2:	603b      	str	r3, [r7, #0]
  return(result);
 8003ee4:	683b      	ldr	r3, [r7, #0]
  osStatus_t stat;

  if (IS_IRQ()) {
 8003ee6:	2b00      	cmp	r3, #0
 8003ee8:	d003      	beq.n	8003ef2 <osKernelStart+0x1a>
    stat = osErrorISR;
 8003eea:	f06f 0305 	mvn.w	r3, #5
 8003eee:	607b      	str	r3, [r7, #4]
 8003ef0:	e010      	b.n	8003f14 <osKernelStart+0x3c>
  }
  else {
    if (KernelState == osKernelReady) {
 8003ef2:	4b0b      	ldr	r3, [pc, #44]	; (8003f20 <osKernelStart+0x48>)
 8003ef4:	681b      	ldr	r3, [r3, #0]
 8003ef6:	2b01      	cmp	r3, #1
 8003ef8:	d109      	bne.n	8003f0e <osKernelStart+0x36>
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
 8003efa:	f7ff ffbf 	bl	8003e7c <SVC_Setup>
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8003efe:	4b08      	ldr	r3, [pc, #32]	; (8003f20 <osKernelStart+0x48>)
 8003f00:	2202      	movs	r2, #2
 8003f02:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      //vTaskStartScheduler();
      vSchedulerStart();
 8003f04:	f7fd ffa0 	bl	8001e48 <vSchedulerStart>
      stat = osOK;
 8003f08:	2300      	movs	r3, #0
 8003f0a:	607b      	str	r3, [r7, #4]
 8003f0c:	e002      	b.n	8003f14 <osKernelStart+0x3c>
    } else {
      stat = osError;
 8003f0e:	f04f 33ff 	mov.w	r3, #4294967295
 8003f12:	607b      	str	r3, [r7, #4]
    }
  }

  return (stat);
 8003f14:	687b      	ldr	r3, [r7, #4]
}
 8003f16:	4618      	mov	r0, r3
 8003f18:	3708      	adds	r7, #8
 8003f1a:	46bd      	mov	sp, r7
 8003f1c:	bd80      	pop	{r7, pc}
 8003f1e:	bf00      	nop
 8003f20:	20000440 	.word	0x20000440

08003f24 <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
 8003f24:	b580      	push	{r7, lr}
 8003f26:	b088      	sub	sp, #32
 8003f28:	af00      	add	r7, sp, #0
 8003f2a:	6078      	str	r0, [r7, #4]
  int32_t  mem;
  #if (configQUEUE_REGISTRY_SIZE > 0)
  const char *name;
  #endif

  hMutex = NULL;
 8003f2c:	2300      	movs	r3, #0
 8003f2e:	61fb      	str	r3, [r7, #28]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8003f30:	f3ef 8305 	mrs	r3, IPSR
 8003f34:	60bb      	str	r3, [r7, #8]
  return(result);
 8003f36:	68bb      	ldr	r3, [r7, #8]

  if (!IS_IRQ()) {
 8003f38:	2b00      	cmp	r3, #0
 8003f3a:	d174      	bne.n	8004026 <osMutexNew+0x102>
    if (attr != NULL) {
 8003f3c:	687b      	ldr	r3, [r7, #4]
 8003f3e:	2b00      	cmp	r3, #0
 8003f40:	d003      	beq.n	8003f4a <osMutexNew+0x26>
      type = attr->attr_bits;
 8003f42:	687b      	ldr	r3, [r7, #4]
 8003f44:	685b      	ldr	r3, [r3, #4]
 8003f46:	61bb      	str	r3, [r7, #24]
 8003f48:	e001      	b.n	8003f4e <osMutexNew+0x2a>
    } else {
      type = 0U;
 8003f4a:	2300      	movs	r3, #0
 8003f4c:	61bb      	str	r3, [r7, #24]
    }

    if ((type & osMutexRecursive) == osMutexRecursive) {
 8003f4e:	69bb      	ldr	r3, [r7, #24]
 8003f50:	f003 0301 	and.w	r3, r3, #1
 8003f54:	2b00      	cmp	r3, #0
 8003f56:	d002      	beq.n	8003f5e <osMutexNew+0x3a>
      rmtx = 1U;
 8003f58:	2301      	movs	r3, #1
 8003f5a:	617b      	str	r3, [r7, #20]
 8003f5c:	e001      	b.n	8003f62 <osMutexNew+0x3e>
    } else {
      rmtx = 0U;
 8003f5e:	2300      	movs	r3, #0
 8003f60:	617b      	str	r3, [r7, #20]
    }

    if ((type & osMutexRobust) != osMutexRobust) {
 8003f62:	69bb      	ldr	r3, [r7, #24]
 8003f64:	f003 0308 	and.w	r3, r3, #8
 8003f68:	2b00      	cmp	r3, #0
 8003f6a:	d15c      	bne.n	8004026 <osMutexNew+0x102>
      mem = -1;
 8003f6c:	f04f 33ff 	mov.w	r3, #4294967295
 8003f70:	613b      	str	r3, [r7, #16]

      if (attr != NULL) {
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	2b00      	cmp	r3, #0
 8003f76:	d015      	beq.n	8003fa4 <osMutexNew+0x80>
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	689b      	ldr	r3, [r3, #8]
 8003f7c:	2b00      	cmp	r3, #0
 8003f7e:	d006      	beq.n	8003f8e <osMutexNew+0x6a>
 8003f80:	687b      	ldr	r3, [r7, #4]
 8003f82:	68db      	ldr	r3, [r3, #12]
 8003f84:	2b4f      	cmp	r3, #79	; 0x4f
 8003f86:	d902      	bls.n	8003f8e <osMutexNew+0x6a>
          mem = 1;
 8003f88:	2301      	movs	r3, #1
 8003f8a:	613b      	str	r3, [r7, #16]
 8003f8c:	e00c      	b.n	8003fa8 <osMutexNew+0x84>
        }
        else {
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8003f8e:	687b      	ldr	r3, [r7, #4]
 8003f90:	689b      	ldr	r3, [r3, #8]
 8003f92:	2b00      	cmp	r3, #0
 8003f94:	d108      	bne.n	8003fa8 <osMutexNew+0x84>
 8003f96:	687b      	ldr	r3, [r7, #4]
 8003f98:	68db      	ldr	r3, [r3, #12]
 8003f9a:	2b00      	cmp	r3, #0
 8003f9c:	d104      	bne.n	8003fa8 <osMutexNew+0x84>
            mem = 0;
 8003f9e:	2300      	movs	r3, #0
 8003fa0:	613b      	str	r3, [r7, #16]
 8003fa2:	e001      	b.n	8003fa8 <osMutexNew+0x84>
          }
        }
      }
      else {
        mem = 0;
 8003fa4:	2300      	movs	r3, #0
 8003fa6:	613b      	str	r3, [r7, #16]
      }

      if (mem == 1) {
 8003fa8:	693b      	ldr	r3, [r7, #16]
 8003faa:	2b01      	cmp	r3, #1
 8003fac:	d112      	bne.n	8003fd4 <osMutexNew+0xb0>
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
 8003fae:	697b      	ldr	r3, [r7, #20]
 8003fb0:	2b00      	cmp	r3, #0
 8003fb2:	d007      	beq.n	8003fc4 <osMutexNew+0xa0>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
 8003fb4:	687b      	ldr	r3, [r7, #4]
 8003fb6:	689b      	ldr	r3, [r3, #8]
 8003fb8:	4619      	mov	r1, r3
 8003fba:	2004      	movs	r0, #4
 8003fbc:	f000 fb17 	bl	80045ee <xQueueCreateMutexStatic>
 8003fc0:	61f8      	str	r0, [r7, #28]
 8003fc2:	e016      	b.n	8003ff2 <osMutexNew+0xce>
            #endif
          }
          else {
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
 8003fc4:	687b      	ldr	r3, [r7, #4]
 8003fc6:	689b      	ldr	r3, [r3, #8]
 8003fc8:	4619      	mov	r1, r3
 8003fca:	2001      	movs	r0, #1
 8003fcc:	f000 fb0f 	bl	80045ee <xQueueCreateMutexStatic>
 8003fd0:	61f8      	str	r0, [r7, #28]
 8003fd2:	e00e      	b.n	8003ff2 <osMutexNew+0xce>
          }
        #endif
      }
      else {
        if (mem == 0) {
 8003fd4:	693b      	ldr	r3, [r7, #16]
 8003fd6:	2b00      	cmp	r3, #0
 8003fd8:	d10b      	bne.n	8003ff2 <osMutexNew+0xce>
          #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
            if (rmtx != 0U) {
 8003fda:	697b      	ldr	r3, [r7, #20]
 8003fdc:	2b00      	cmp	r3, #0
 8003fde:	d004      	beq.n	8003fea <osMutexNew+0xc6>
              #if (configUSE_RECURSIVE_MUTEXES == 1)
              hMutex = xSemaphoreCreateRecursiveMutex ();
 8003fe0:	2004      	movs	r0, #4
 8003fe2:	f000 faec 	bl	80045be <xQueueCreateMutex>
 8003fe6:	61f8      	str	r0, [r7, #28]
 8003fe8:	e003      	b.n	8003ff2 <osMutexNew+0xce>
              #endif
            } else {
              hMutex = xSemaphoreCreateMutex ();
 8003fea:	2001      	movs	r0, #1
 8003fec:	f000 fae7 	bl	80045be <xQueueCreateMutex>
 8003ff0:	61f8      	str	r0, [r7, #28]
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
 8003ff2:	69fb      	ldr	r3, [r7, #28]
 8003ff4:	2b00      	cmp	r3, #0
 8003ff6:	d00c      	beq.n	8004012 <osMutexNew+0xee>
        if (attr != NULL) {
 8003ff8:	687b      	ldr	r3, [r7, #4]
 8003ffa:	2b00      	cmp	r3, #0
 8003ffc:	d003      	beq.n	8004006 <osMutexNew+0xe2>
          name = attr->name;
 8003ffe:	687b      	ldr	r3, [r7, #4]
 8004000:	681b      	ldr	r3, [r3, #0]
 8004002:	60fb      	str	r3, [r7, #12]
 8004004:	e001      	b.n	800400a <osMutexNew+0xe6>
        } else {
          name = NULL;
 8004006:	2300      	movs	r3, #0
 8004008:	60fb      	str	r3, [r7, #12]
        }
        vQueueAddToRegistry (hMutex, name);
 800400a:	68f9      	ldr	r1, [r7, #12]
 800400c:	69f8      	ldr	r0, [r7, #28]
 800400e:	f001 f821 	bl	8005054 <vQueueAddToRegistry>
      }
      #endif

      if ((hMutex != NULL) && (rmtx != 0U)) {
 8004012:	69fb      	ldr	r3, [r7, #28]
 8004014:	2b00      	cmp	r3, #0
 8004016:	d006      	beq.n	8004026 <osMutexNew+0x102>
 8004018:	697b      	ldr	r3, [r7, #20]
 800401a:	2b00      	cmp	r3, #0
 800401c:	d003      	beq.n	8004026 <osMutexNew+0x102>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
 800401e:	69fb      	ldr	r3, [r7, #28]
 8004020:	f043 0301 	orr.w	r3, r3, #1
 8004024:	61fb      	str	r3, [r7, #28]
      }
    }
  }

  return ((osMutexId_t)hMutex);
 8004026:	69fb      	ldr	r3, [r7, #28]
}
 8004028:	4618      	mov	r0, r3
 800402a:	3720      	adds	r7, #32
 800402c:	46bd      	mov	sp, r7
 800402e:	bd80      	pop	{r7, pc}

08004030 <osMutexAcquire>:

osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
 8004030:	b580      	push	{r7, lr}
 8004032:	b086      	sub	sp, #24
 8004034:	af00      	add	r7, sp, #0
 8004036:	6078      	str	r0, [r7, #4]
 8004038:	6039      	str	r1, [r7, #0]
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
 800403a:	687b      	ldr	r3, [r7, #4]
 800403c:	f023 0301 	bic.w	r3, r3, #1
 8004040:	613b      	str	r3, [r7, #16]

  rmtx = (uint32_t)mutex_id & 1U;
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	f003 0301 	and.w	r3, r3, #1
 8004048:	60fb      	str	r3, [r7, #12]

  stat = osOK;
 800404a:	2300      	movs	r3, #0
 800404c:	617b      	str	r3, [r7, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800404e:	f3ef 8305 	mrs	r3, IPSR
 8004052:	60bb      	str	r3, [r7, #8]
  return(result);
 8004054:	68bb      	ldr	r3, [r7, #8]

  if (IS_IRQ()) {
 8004056:	2b00      	cmp	r3, #0
 8004058:	d003      	beq.n	8004062 <osMutexAcquire+0x32>
    stat = osErrorISR;
 800405a:	f06f 0305 	mvn.w	r3, #5
 800405e:	617b      	str	r3, [r7, #20]
 8004060:	e02c      	b.n	80040bc <osMutexAcquire+0x8c>
  }
  else if (hMutex == NULL) {
 8004062:	693b      	ldr	r3, [r7, #16]
 8004064:	2b00      	cmp	r3, #0
 8004066:	d103      	bne.n	8004070 <osMutexAcquire+0x40>
    stat = osErrorParameter;
 8004068:	f06f 0303 	mvn.w	r3, #3
 800406c:	617b      	str	r3, [r7, #20]
 800406e:	e025      	b.n	80040bc <osMutexAcquire+0x8c>
  }
  else {
    if (rmtx != 0U) {
 8004070:	68fb      	ldr	r3, [r7, #12]
 8004072:	2b00      	cmp	r3, #0
 8004074:	d011      	beq.n	800409a <osMutexAcquire+0x6a>
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
 8004076:	6839      	ldr	r1, [r7, #0]
 8004078:	6938      	ldr	r0, [r7, #16]
 800407a:	f000 fb07 	bl	800468c <xQueueTakeMutexRecursive>
 800407e:	4603      	mov	r3, r0
 8004080:	2b01      	cmp	r3, #1
 8004082:	d01b      	beq.n	80040bc <osMutexAcquire+0x8c>
        if (timeout != 0U) {
 8004084:	683b      	ldr	r3, [r7, #0]
 8004086:	2b00      	cmp	r3, #0
 8004088:	d003      	beq.n	8004092 <osMutexAcquire+0x62>
          stat = osErrorTimeout;
 800408a:	f06f 0301 	mvn.w	r3, #1
 800408e:	617b      	str	r3, [r7, #20]
 8004090:	e014      	b.n	80040bc <osMutexAcquire+0x8c>
        } else {
          stat = osErrorResource;
 8004092:	f06f 0302 	mvn.w	r3, #2
 8004096:	617b      	str	r3, [r7, #20]
 8004098:	e010      	b.n	80040bc <osMutexAcquire+0x8c>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
 800409a:	6839      	ldr	r1, [r7, #0]
 800409c:	6938      	ldr	r0, [r7, #16]
 800409e:	f000 fda5 	bl	8004bec <xQueueSemaphoreTake>
 80040a2:	4603      	mov	r3, r0
 80040a4:	2b01      	cmp	r3, #1
 80040a6:	d009      	beq.n	80040bc <osMutexAcquire+0x8c>
        if (timeout != 0U) {
 80040a8:	683b      	ldr	r3, [r7, #0]
 80040aa:	2b00      	cmp	r3, #0
 80040ac:	d003      	beq.n	80040b6 <osMutexAcquire+0x86>
          stat = osErrorTimeout;
 80040ae:	f06f 0301 	mvn.w	r3, #1
 80040b2:	617b      	str	r3, [r7, #20]
 80040b4:	e002      	b.n	80040bc <osMutexAcquire+0x8c>
        } else {
          stat = osErrorResource;
 80040b6:	f06f 0302 	mvn.w	r3, #2
 80040ba:	617b      	str	r3, [r7, #20]
        }
      }
    }
  }

  return (stat);
 80040bc:	697b      	ldr	r3, [r7, #20]
}
 80040be:	4618      	mov	r0, r3
 80040c0:	3718      	adds	r7, #24
 80040c2:	46bd      	mov	sp, r7
 80040c4:	bd80      	pop	{r7, pc}

080040c6 <osMutexRelease>:

osStatus_t osMutexRelease (osMutexId_t mutex_id) {
 80040c6:	b580      	push	{r7, lr}
 80040c8:	b086      	sub	sp, #24
 80040ca:	af00      	add	r7, sp, #0
 80040cc:	6078      	str	r0, [r7, #4]
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
 80040ce:	687b      	ldr	r3, [r7, #4]
 80040d0:	f023 0301 	bic.w	r3, r3, #1
 80040d4:	613b      	str	r3, [r7, #16]

  rmtx = (uint32_t)mutex_id & 1U;
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	f003 0301 	and.w	r3, r3, #1
 80040dc:	60fb      	str	r3, [r7, #12]

  stat = osOK;
 80040de:	2300      	movs	r3, #0
 80040e0:	617b      	str	r3, [r7, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80040e2:	f3ef 8305 	mrs	r3, IPSR
 80040e6:	60bb      	str	r3, [r7, #8]
  return(result);
 80040e8:	68bb      	ldr	r3, [r7, #8]

  if (IS_IRQ()) {
 80040ea:	2b00      	cmp	r3, #0
 80040ec:	d003      	beq.n	80040f6 <osMutexRelease+0x30>
    stat = osErrorISR;
 80040ee:	f06f 0305 	mvn.w	r3, #5
 80040f2:	617b      	str	r3, [r7, #20]
 80040f4:	e01f      	b.n	8004136 <osMutexRelease+0x70>
  }
  else if (hMutex == NULL) {
 80040f6:	693b      	ldr	r3, [r7, #16]
 80040f8:	2b00      	cmp	r3, #0
 80040fa:	d103      	bne.n	8004104 <osMutexRelease+0x3e>
    stat = osErrorParameter;
 80040fc:	f06f 0303 	mvn.w	r3, #3
 8004100:	617b      	str	r3, [r7, #20]
 8004102:	e018      	b.n	8004136 <osMutexRelease+0x70>
  }
  else {
    if (rmtx != 0U) {
 8004104:	68fb      	ldr	r3, [r7, #12]
 8004106:	2b00      	cmp	r3, #0
 8004108:	d009      	beq.n	800411e <osMutexRelease+0x58>
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
 800410a:	6938      	ldr	r0, [r7, #16]
 800410c:	f000 fa8a 	bl	8004624 <xQueueGiveMutexRecursive>
 8004110:	4603      	mov	r3, r0
 8004112:	2b01      	cmp	r3, #1
 8004114:	d00f      	beq.n	8004136 <osMutexRelease+0x70>
        stat = osErrorResource;
 8004116:	f06f 0302 	mvn.w	r3, #2
 800411a:	617b      	str	r3, [r7, #20]
 800411c:	e00b      	b.n	8004136 <osMutexRelease+0x70>
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
 800411e:	2300      	movs	r3, #0
 8004120:	2200      	movs	r2, #0
 8004122:	2100      	movs	r1, #0
 8004124:	6938      	ldr	r0, [r7, #16]
 8004126:	f000 fae7 	bl	80046f8 <xQueueGenericSend>
 800412a:	4603      	mov	r3, r0
 800412c:	2b01      	cmp	r3, #1
 800412e:	d002      	beq.n	8004136 <osMutexRelease+0x70>
        stat = osErrorResource;
 8004130:	f06f 0302 	mvn.w	r3, #2
 8004134:	617b      	str	r3, [r7, #20]
      }
    }
  }

  return (stat);
 8004136:	697b      	ldr	r3, [r7, #20]
}
 8004138:	4618      	mov	r0, r3
 800413a:	3718      	adds	r7, #24
 800413c:	46bd      	mov	sp, r7
 800413e:	bd80      	pop	{r7, pc}

08004140 <vApplicationGetIdleTaskMemory>:

/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 8004140:	b480      	push	{r7}
 8004142:	b085      	sub	sp, #20
 8004144:	af00      	add	r7, sp, #0
 8004146:	60f8      	str	r0, [r7, #12]
 8004148:	60b9      	str	r1, [r7, #8]
 800414a:	607a      	str	r2, [r7, #4]
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800414c:	68fb      	ldr	r3, [r7, #12]
 800414e:	4a07      	ldr	r2, [pc, #28]	; (800416c <vApplicationGetIdleTaskMemory+0x2c>)
 8004150:	601a      	str	r2, [r3, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8004152:	68bb      	ldr	r3, [r7, #8]
 8004154:	4a06      	ldr	r2, [pc, #24]	; (8004170 <vApplicationGetIdleTaskMemory+0x30>)
 8004156:	601a      	str	r2, [r3, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8004158:	687b      	ldr	r3, [r7, #4]
 800415a:	2280      	movs	r2, #128	; 0x80
 800415c:	601a      	str	r2, [r3, #0]
}
 800415e:	bf00      	nop
 8004160:	3714      	adds	r7, #20
 8004162:	46bd      	mov	sp, r7
 8004164:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004168:	4770      	bx	lr
 800416a:	bf00      	nop
 800416c:	20000444 	.word	0x20000444
 8004170:	200004f0 	.word	0x200004f0

08004174 <vApplicationGetTimerTaskMemory>:

/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 8004174:	b480      	push	{r7}
 8004176:	b085      	sub	sp, #20
 8004178:	af00      	add	r7, sp, #0
 800417a:	60f8      	str	r0, [r7, #12]
 800417c:	60b9      	str	r1, [r7, #8]
 800417e:	607a      	str	r2, [r7, #4]
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8004180:	68fb      	ldr	r3, [r7, #12]
 8004182:	4a07      	ldr	r2, [pc, #28]	; (80041a0 <vApplicationGetTimerTaskMemory+0x2c>)
 8004184:	601a      	str	r2, [r3, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8004186:	68bb      	ldr	r3, [r7, #8]
 8004188:	4a06      	ldr	r2, [pc, #24]	; (80041a4 <vApplicationGetTimerTaskMemory+0x30>)
 800418a:	601a      	str	r2, [r3, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004192:	601a      	str	r2, [r3, #0]
}
 8004194:	bf00      	nop
 8004196:	3714      	adds	r7, #20
 8004198:	46bd      	mov	sp, r7
 800419a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800419e:	4770      	bx	lr
 80041a0:	200006f0 	.word	0x200006f0
 80041a4:	2000079c 	.word	0x2000079c

080041a8 <vListInitialise>:
 80041a8:	b480      	push	{r7}
 80041aa:	b083      	sub	sp, #12
 80041ac:	af00      	add	r7, sp, #0
 80041ae:	6078      	str	r0, [r7, #4]
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	f103 0208 	add.w	r2, r3, #8
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	605a      	str	r2, [r3, #4]
 80041ba:	687b      	ldr	r3, [r7, #4]
 80041bc:	f04f 32ff 	mov.w	r2, #4294967295
 80041c0:	609a      	str	r2, [r3, #8]
 80041c2:	687b      	ldr	r3, [r7, #4]
 80041c4:	f103 0208 	add.w	r2, r3, #8
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	60da      	str	r2, [r3, #12]
 80041cc:	687b      	ldr	r3, [r7, #4]
 80041ce:	f103 0208 	add.w	r2, r3, #8
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	611a      	str	r2, [r3, #16]
 80041d6:	687b      	ldr	r3, [r7, #4]
 80041d8:	2200      	movs	r2, #0
 80041da:	601a      	str	r2, [r3, #0]
 80041dc:	bf00      	nop
 80041de:	370c      	adds	r7, #12
 80041e0:	46bd      	mov	sp, r7
 80041e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041e6:	4770      	bx	lr

080041e8 <vListInitialiseItem>:
 80041e8:	b480      	push	{r7}
 80041ea:	b083      	sub	sp, #12
 80041ec:	af00      	add	r7, sp, #0
 80041ee:	6078      	str	r0, [r7, #4]
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	2200      	movs	r2, #0
 80041f4:	611a      	str	r2, [r3, #16]
 80041f6:	bf00      	nop
 80041f8:	370c      	adds	r7, #12
 80041fa:	46bd      	mov	sp, r7
 80041fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004200:	4770      	bx	lr

08004202 <vListInsertEnd>:
 8004202:	b480      	push	{r7}
 8004204:	b085      	sub	sp, #20
 8004206:	af00      	add	r7, sp, #0
 8004208:	6078      	str	r0, [r7, #4]
 800420a:	6039      	str	r1, [r7, #0]
 800420c:	687b      	ldr	r3, [r7, #4]
 800420e:	685b      	ldr	r3, [r3, #4]
 8004210:	60fb      	str	r3, [r7, #12]
 8004212:	683b      	ldr	r3, [r7, #0]
 8004214:	68fa      	ldr	r2, [r7, #12]
 8004216:	605a      	str	r2, [r3, #4]
 8004218:	68fb      	ldr	r3, [r7, #12]
 800421a:	689a      	ldr	r2, [r3, #8]
 800421c:	683b      	ldr	r3, [r7, #0]
 800421e:	609a      	str	r2, [r3, #8]
 8004220:	68fb      	ldr	r3, [r7, #12]
 8004222:	689b      	ldr	r3, [r3, #8]
 8004224:	683a      	ldr	r2, [r7, #0]
 8004226:	605a      	str	r2, [r3, #4]
 8004228:	68fb      	ldr	r3, [r7, #12]
 800422a:	683a      	ldr	r2, [r7, #0]
 800422c:	609a      	str	r2, [r3, #8]
 800422e:	683b      	ldr	r3, [r7, #0]
 8004230:	687a      	ldr	r2, [r7, #4]
 8004232:	611a      	str	r2, [r3, #16]
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	681b      	ldr	r3, [r3, #0]
 8004238:	1c5a      	adds	r2, r3, #1
 800423a:	687b      	ldr	r3, [r7, #4]
 800423c:	601a      	str	r2, [r3, #0]
 800423e:	bf00      	nop
 8004240:	3714      	adds	r7, #20
 8004242:	46bd      	mov	sp, r7
 8004244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004248:	4770      	bx	lr

0800424a <vListInsert>:
 800424a:	b480      	push	{r7}
 800424c:	b085      	sub	sp, #20
 800424e:	af00      	add	r7, sp, #0
 8004250:	6078      	str	r0, [r7, #4]
 8004252:	6039      	str	r1, [r7, #0]
 8004254:	683b      	ldr	r3, [r7, #0]
 8004256:	681b      	ldr	r3, [r3, #0]
 8004258:	60bb      	str	r3, [r7, #8]
 800425a:	68bb      	ldr	r3, [r7, #8]
 800425c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004260:	d103      	bne.n	800426a <vListInsert+0x20>
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	691b      	ldr	r3, [r3, #16]
 8004266:	60fb      	str	r3, [r7, #12]
 8004268:	e00c      	b.n	8004284 <vListInsert+0x3a>
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	3308      	adds	r3, #8
 800426e:	60fb      	str	r3, [r7, #12]
 8004270:	e002      	b.n	8004278 <vListInsert+0x2e>
 8004272:	68fb      	ldr	r3, [r7, #12]
 8004274:	685b      	ldr	r3, [r3, #4]
 8004276:	60fb      	str	r3, [r7, #12]
 8004278:	68fb      	ldr	r3, [r7, #12]
 800427a:	685b      	ldr	r3, [r3, #4]
 800427c:	681b      	ldr	r3, [r3, #0]
 800427e:	68ba      	ldr	r2, [r7, #8]
 8004280:	429a      	cmp	r2, r3
 8004282:	d2f6      	bcs.n	8004272 <vListInsert+0x28>
 8004284:	68fb      	ldr	r3, [r7, #12]
 8004286:	685a      	ldr	r2, [r3, #4]
 8004288:	683b      	ldr	r3, [r7, #0]
 800428a:	605a      	str	r2, [r3, #4]
 800428c:	683b      	ldr	r3, [r7, #0]
 800428e:	685b      	ldr	r3, [r3, #4]
 8004290:	683a      	ldr	r2, [r7, #0]
 8004292:	609a      	str	r2, [r3, #8]
 8004294:	683b      	ldr	r3, [r7, #0]
 8004296:	68fa      	ldr	r2, [r7, #12]
 8004298:	609a      	str	r2, [r3, #8]
 800429a:	68fb      	ldr	r3, [r7, #12]
 800429c:	683a      	ldr	r2, [r7, #0]
 800429e:	605a      	str	r2, [r3, #4]
 80042a0:	683b      	ldr	r3, [r7, #0]
 80042a2:	687a      	ldr	r2, [r7, #4]
 80042a4:	611a      	str	r2, [r3, #16]
 80042a6:	687b      	ldr	r3, [r7, #4]
 80042a8:	681b      	ldr	r3, [r3, #0]
 80042aa:	1c5a      	adds	r2, r3, #1
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	601a      	str	r2, [r3, #0]
 80042b0:	bf00      	nop
 80042b2:	3714      	adds	r7, #20
 80042b4:	46bd      	mov	sp, r7
 80042b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042ba:	4770      	bx	lr

080042bc <uxListRemove>:
 80042bc:	b480      	push	{r7}
 80042be:	b085      	sub	sp, #20
 80042c0:	af00      	add	r7, sp, #0
 80042c2:	6078      	str	r0, [r7, #4]
 80042c4:	687b      	ldr	r3, [r7, #4]
 80042c6:	691b      	ldr	r3, [r3, #16]
 80042c8:	60fb      	str	r3, [r7, #12]
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	685b      	ldr	r3, [r3, #4]
 80042ce:	687a      	ldr	r2, [r7, #4]
 80042d0:	6892      	ldr	r2, [r2, #8]
 80042d2:	609a      	str	r2, [r3, #8]
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	689b      	ldr	r3, [r3, #8]
 80042d8:	687a      	ldr	r2, [r7, #4]
 80042da:	6852      	ldr	r2, [r2, #4]
 80042dc:	605a      	str	r2, [r3, #4]
 80042de:	68fb      	ldr	r3, [r7, #12]
 80042e0:	685b      	ldr	r3, [r3, #4]
 80042e2:	687a      	ldr	r2, [r7, #4]
 80042e4:	429a      	cmp	r2, r3
 80042e6:	d103      	bne.n	80042f0 <uxListRemove+0x34>
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	689a      	ldr	r2, [r3, #8]
 80042ec:	68fb      	ldr	r3, [r7, #12]
 80042ee:	605a      	str	r2, [r3, #4]
 80042f0:	687b      	ldr	r3, [r7, #4]
 80042f2:	2200      	movs	r2, #0
 80042f4:	611a      	str	r2, [r3, #16]
 80042f6:	68fb      	ldr	r3, [r7, #12]
 80042f8:	681b      	ldr	r3, [r3, #0]
 80042fa:	1e5a      	subs	r2, r3, #1
 80042fc:	68fb      	ldr	r3, [r7, #12]
 80042fe:	601a      	str	r2, [r3, #0]
 8004300:	68fb      	ldr	r3, [r7, #12]
 8004302:	681b      	ldr	r3, [r3, #0]
 8004304:	4618      	mov	r0, r3
 8004306:	3714      	adds	r7, #20
 8004308:	46bd      	mov	sp, r7
 800430a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800430e:	4770      	bx	lr

08004310 <xQueueGenericReset>:
 8004310:	b580      	push	{r7, lr}
 8004312:	b084      	sub	sp, #16
 8004314:	af00      	add	r7, sp, #0
 8004316:	6078      	str	r0, [r7, #4]
 8004318:	6039      	str	r1, [r7, #0]
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	60fb      	str	r3, [r7, #12]
 800431e:	68fb      	ldr	r3, [r7, #12]
 8004320:	2b00      	cmp	r3, #0
 8004322:	d10a      	bne.n	800433a <xQueueGenericReset+0x2a>
 8004324:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004328:	f383 8811 	msr	BASEPRI, r3
 800432c:	f3bf 8f6f 	isb	sy
 8004330:	f3bf 8f4f 	dsb	sy
 8004334:	60bb      	str	r3, [r7, #8]
 8004336:	bf00      	nop
 8004338:	e7fe      	b.n	8004338 <xQueueGenericReset+0x28>
 800433a:	f002 fecb 	bl	80070d4 <vPortEnterCritical>
 800433e:	68fb      	ldr	r3, [r7, #12]
 8004340:	681a      	ldr	r2, [r3, #0]
 8004342:	68fb      	ldr	r3, [r7, #12]
 8004344:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004346:	68f9      	ldr	r1, [r7, #12]
 8004348:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800434a:	fb01 f303 	mul.w	r3, r1, r3
 800434e:	441a      	add	r2, r3
 8004350:	68fb      	ldr	r3, [r7, #12]
 8004352:	609a      	str	r2, [r3, #8]
 8004354:	68fb      	ldr	r3, [r7, #12]
 8004356:	2200      	movs	r2, #0
 8004358:	639a      	str	r2, [r3, #56]	; 0x38
 800435a:	68fb      	ldr	r3, [r7, #12]
 800435c:	681a      	ldr	r2, [r3, #0]
 800435e:	68fb      	ldr	r3, [r7, #12]
 8004360:	605a      	str	r2, [r3, #4]
 8004362:	68fb      	ldr	r3, [r7, #12]
 8004364:	681a      	ldr	r2, [r3, #0]
 8004366:	68fb      	ldr	r3, [r7, #12]
 8004368:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800436a:	3b01      	subs	r3, #1
 800436c:	68f9      	ldr	r1, [r7, #12]
 800436e:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8004370:	fb01 f303 	mul.w	r3, r1, r3
 8004374:	441a      	add	r2, r3
 8004376:	68fb      	ldr	r3, [r7, #12]
 8004378:	60da      	str	r2, [r3, #12]
 800437a:	68fb      	ldr	r3, [r7, #12]
 800437c:	22ff      	movs	r2, #255	; 0xff
 800437e:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004382:	68fb      	ldr	r3, [r7, #12]
 8004384:	22ff      	movs	r2, #255	; 0xff
 8004386:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800438a:	683b      	ldr	r3, [r7, #0]
 800438c:	2b00      	cmp	r3, #0
 800438e:	d114      	bne.n	80043ba <xQueueGenericReset+0xaa>
 8004390:	68fb      	ldr	r3, [r7, #12]
 8004392:	691b      	ldr	r3, [r3, #16]
 8004394:	2b00      	cmp	r3, #0
 8004396:	d01a      	beq.n	80043ce <xQueueGenericReset+0xbe>
 8004398:	68fb      	ldr	r3, [r7, #12]
 800439a:	3310      	adds	r3, #16
 800439c:	4618      	mov	r0, r3
 800439e:	f001 fd37 	bl	8005e10 <xTaskRemoveFromEventList>
 80043a2:	4603      	mov	r3, r0
 80043a4:	2b00      	cmp	r3, #0
 80043a6:	d012      	beq.n	80043ce <xQueueGenericReset+0xbe>
 80043a8:	4b0c      	ldr	r3, [pc, #48]	; (80043dc <xQueueGenericReset+0xcc>)
 80043aa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80043ae:	601a      	str	r2, [r3, #0]
 80043b0:	f3bf 8f4f 	dsb	sy
 80043b4:	f3bf 8f6f 	isb	sy
 80043b8:	e009      	b.n	80043ce <xQueueGenericReset+0xbe>
 80043ba:	68fb      	ldr	r3, [r7, #12]
 80043bc:	3310      	adds	r3, #16
 80043be:	4618      	mov	r0, r3
 80043c0:	f7ff fef2 	bl	80041a8 <vListInitialise>
 80043c4:	68fb      	ldr	r3, [r7, #12]
 80043c6:	3324      	adds	r3, #36	; 0x24
 80043c8:	4618      	mov	r0, r3
 80043ca:	f7ff feed 	bl	80041a8 <vListInitialise>
 80043ce:	f002 feb1 	bl	8007134 <vPortExitCritical>
 80043d2:	2301      	movs	r3, #1
 80043d4:	4618      	mov	r0, r3
 80043d6:	3710      	adds	r7, #16
 80043d8:	46bd      	mov	sp, r7
 80043da:	bd80      	pop	{r7, pc}
 80043dc:	e000ed04 	.word	0xe000ed04

080043e0 <xQueueGenericCreateStatic>:
 80043e0:	b580      	push	{r7, lr}
 80043e2:	b08e      	sub	sp, #56	; 0x38
 80043e4:	af02      	add	r7, sp, #8
 80043e6:	60f8      	str	r0, [r7, #12]
 80043e8:	60b9      	str	r1, [r7, #8]
 80043ea:	607a      	str	r2, [r7, #4]
 80043ec:	603b      	str	r3, [r7, #0]
 80043ee:	68fb      	ldr	r3, [r7, #12]
 80043f0:	2b00      	cmp	r3, #0
 80043f2:	d10a      	bne.n	800440a <xQueueGenericCreateStatic+0x2a>
 80043f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80043f8:	f383 8811 	msr	BASEPRI, r3
 80043fc:	f3bf 8f6f 	isb	sy
 8004400:	f3bf 8f4f 	dsb	sy
 8004404:	62bb      	str	r3, [r7, #40]	; 0x28
 8004406:	bf00      	nop
 8004408:	e7fe      	b.n	8004408 <xQueueGenericCreateStatic+0x28>
 800440a:	683b      	ldr	r3, [r7, #0]
 800440c:	2b00      	cmp	r3, #0
 800440e:	d10a      	bne.n	8004426 <xQueueGenericCreateStatic+0x46>
 8004410:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004414:	f383 8811 	msr	BASEPRI, r3
 8004418:	f3bf 8f6f 	isb	sy
 800441c:	f3bf 8f4f 	dsb	sy
 8004420:	627b      	str	r3, [r7, #36]	; 0x24
 8004422:	bf00      	nop
 8004424:	e7fe      	b.n	8004424 <xQueueGenericCreateStatic+0x44>
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	2b00      	cmp	r3, #0
 800442a:	d002      	beq.n	8004432 <xQueueGenericCreateStatic+0x52>
 800442c:	68bb      	ldr	r3, [r7, #8]
 800442e:	2b00      	cmp	r3, #0
 8004430:	d001      	beq.n	8004436 <xQueueGenericCreateStatic+0x56>
 8004432:	2301      	movs	r3, #1
 8004434:	e000      	b.n	8004438 <xQueueGenericCreateStatic+0x58>
 8004436:	2300      	movs	r3, #0
 8004438:	2b00      	cmp	r3, #0
 800443a:	d10a      	bne.n	8004452 <xQueueGenericCreateStatic+0x72>
 800443c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004440:	f383 8811 	msr	BASEPRI, r3
 8004444:	f3bf 8f6f 	isb	sy
 8004448:	f3bf 8f4f 	dsb	sy
 800444c:	623b      	str	r3, [r7, #32]
 800444e:	bf00      	nop
 8004450:	e7fe      	b.n	8004450 <xQueueGenericCreateStatic+0x70>
 8004452:	687b      	ldr	r3, [r7, #4]
 8004454:	2b00      	cmp	r3, #0
 8004456:	d102      	bne.n	800445e <xQueueGenericCreateStatic+0x7e>
 8004458:	68bb      	ldr	r3, [r7, #8]
 800445a:	2b00      	cmp	r3, #0
 800445c:	d101      	bne.n	8004462 <xQueueGenericCreateStatic+0x82>
 800445e:	2301      	movs	r3, #1
 8004460:	e000      	b.n	8004464 <xQueueGenericCreateStatic+0x84>
 8004462:	2300      	movs	r3, #0
 8004464:	2b00      	cmp	r3, #0
 8004466:	d10a      	bne.n	800447e <xQueueGenericCreateStatic+0x9e>
 8004468:	f04f 0350 	mov.w	r3, #80	; 0x50
 800446c:	f383 8811 	msr	BASEPRI, r3
 8004470:	f3bf 8f6f 	isb	sy
 8004474:	f3bf 8f4f 	dsb	sy
 8004478:	61fb      	str	r3, [r7, #28]
 800447a:	bf00      	nop
 800447c:	e7fe      	b.n	800447c <xQueueGenericCreateStatic+0x9c>
 800447e:	2350      	movs	r3, #80	; 0x50
 8004480:	617b      	str	r3, [r7, #20]
 8004482:	697b      	ldr	r3, [r7, #20]
 8004484:	2b50      	cmp	r3, #80	; 0x50
 8004486:	d00a      	beq.n	800449e <xQueueGenericCreateStatic+0xbe>
 8004488:	f04f 0350 	mov.w	r3, #80	; 0x50
 800448c:	f383 8811 	msr	BASEPRI, r3
 8004490:	f3bf 8f6f 	isb	sy
 8004494:	f3bf 8f4f 	dsb	sy
 8004498:	61bb      	str	r3, [r7, #24]
 800449a:	bf00      	nop
 800449c:	e7fe      	b.n	800449c <xQueueGenericCreateStatic+0xbc>
 800449e:	697b      	ldr	r3, [r7, #20]
 80044a0:	683b      	ldr	r3, [r7, #0]
 80044a2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80044a4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80044a6:	2b00      	cmp	r3, #0
 80044a8:	d00d      	beq.n	80044c6 <xQueueGenericCreateStatic+0xe6>
 80044aa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80044ac:	2201      	movs	r2, #1
 80044ae:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80044b2:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 80044b6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80044b8:	9300      	str	r3, [sp, #0]
 80044ba:	4613      	mov	r3, r2
 80044bc:	687a      	ldr	r2, [r7, #4]
 80044be:	68b9      	ldr	r1, [r7, #8]
 80044c0:	68f8      	ldr	r0, [r7, #12]
 80044c2:	f000 f83f 	bl	8004544 <prvInitialiseNewQueue>
 80044c6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80044c8:	4618      	mov	r0, r3
 80044ca:	3730      	adds	r7, #48	; 0x30
 80044cc:	46bd      	mov	sp, r7
 80044ce:	bd80      	pop	{r7, pc}

080044d0 <xQueueGenericCreate>:
 80044d0:	b580      	push	{r7, lr}
 80044d2:	b08a      	sub	sp, #40	; 0x28
 80044d4:	af02      	add	r7, sp, #8
 80044d6:	60f8      	str	r0, [r7, #12]
 80044d8:	60b9      	str	r1, [r7, #8]
 80044da:	4613      	mov	r3, r2
 80044dc:	71fb      	strb	r3, [r7, #7]
 80044de:	68fb      	ldr	r3, [r7, #12]
 80044e0:	2b00      	cmp	r3, #0
 80044e2:	d10a      	bne.n	80044fa <xQueueGenericCreate+0x2a>
 80044e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80044e8:	f383 8811 	msr	BASEPRI, r3
 80044ec:	f3bf 8f6f 	isb	sy
 80044f0:	f3bf 8f4f 	dsb	sy
 80044f4:	613b      	str	r3, [r7, #16]
 80044f6:	bf00      	nop
 80044f8:	e7fe      	b.n	80044f8 <xQueueGenericCreate+0x28>
 80044fa:	68fb      	ldr	r3, [r7, #12]
 80044fc:	68ba      	ldr	r2, [r7, #8]
 80044fe:	fb02 f303 	mul.w	r3, r2, r3
 8004502:	61fb      	str	r3, [r7, #28]
 8004504:	69fb      	ldr	r3, [r7, #28]
 8004506:	3350      	adds	r3, #80	; 0x50
 8004508:	4618      	mov	r0, r3
 800450a:	f002 ff05 	bl	8007318 <pvPortMalloc>
 800450e:	61b8      	str	r0, [r7, #24]
 8004510:	69bb      	ldr	r3, [r7, #24]
 8004512:	2b00      	cmp	r3, #0
 8004514:	d011      	beq.n	800453a <xQueueGenericCreate+0x6a>
 8004516:	69bb      	ldr	r3, [r7, #24]
 8004518:	617b      	str	r3, [r7, #20]
 800451a:	697b      	ldr	r3, [r7, #20]
 800451c:	3350      	adds	r3, #80	; 0x50
 800451e:	617b      	str	r3, [r7, #20]
 8004520:	69bb      	ldr	r3, [r7, #24]
 8004522:	2200      	movs	r2, #0
 8004524:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004528:	79fa      	ldrb	r2, [r7, #7]
 800452a:	69bb      	ldr	r3, [r7, #24]
 800452c:	9300      	str	r3, [sp, #0]
 800452e:	4613      	mov	r3, r2
 8004530:	697a      	ldr	r2, [r7, #20]
 8004532:	68b9      	ldr	r1, [r7, #8]
 8004534:	68f8      	ldr	r0, [r7, #12]
 8004536:	f000 f805 	bl	8004544 <prvInitialiseNewQueue>
 800453a:	69bb      	ldr	r3, [r7, #24]
 800453c:	4618      	mov	r0, r3
 800453e:	3720      	adds	r7, #32
 8004540:	46bd      	mov	sp, r7
 8004542:	bd80      	pop	{r7, pc}

08004544 <prvInitialiseNewQueue>:
 8004544:	b580      	push	{r7, lr}
 8004546:	b084      	sub	sp, #16
 8004548:	af00      	add	r7, sp, #0
 800454a:	60f8      	str	r0, [r7, #12]
 800454c:	60b9      	str	r1, [r7, #8]
 800454e:	607a      	str	r2, [r7, #4]
 8004550:	70fb      	strb	r3, [r7, #3]
 8004552:	68bb      	ldr	r3, [r7, #8]
 8004554:	2b00      	cmp	r3, #0
 8004556:	d103      	bne.n	8004560 <prvInitialiseNewQueue+0x1c>
 8004558:	69bb      	ldr	r3, [r7, #24]
 800455a:	69ba      	ldr	r2, [r7, #24]
 800455c:	601a      	str	r2, [r3, #0]
 800455e:	e002      	b.n	8004566 <prvInitialiseNewQueue+0x22>
 8004560:	69bb      	ldr	r3, [r7, #24]
 8004562:	687a      	ldr	r2, [r7, #4]
 8004564:	601a      	str	r2, [r3, #0]
 8004566:	69bb      	ldr	r3, [r7, #24]
 8004568:	68fa      	ldr	r2, [r7, #12]
 800456a:	63da      	str	r2, [r3, #60]	; 0x3c
 800456c:	69bb      	ldr	r3, [r7, #24]
 800456e:	68ba      	ldr	r2, [r7, #8]
 8004570:	641a      	str	r2, [r3, #64]	; 0x40
 8004572:	2101      	movs	r1, #1
 8004574:	69b8      	ldr	r0, [r7, #24]
 8004576:	f7ff fecb 	bl	8004310 <xQueueGenericReset>
 800457a:	69bb      	ldr	r3, [r7, #24]
 800457c:	78fa      	ldrb	r2, [r7, #3]
 800457e:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 8004582:	bf00      	nop
 8004584:	3710      	adds	r7, #16
 8004586:	46bd      	mov	sp, r7
 8004588:	bd80      	pop	{r7, pc}

0800458a <prvInitialiseMutex>:
 800458a:	b580      	push	{r7, lr}
 800458c:	b082      	sub	sp, #8
 800458e:	af00      	add	r7, sp, #0
 8004590:	6078      	str	r0, [r7, #4]
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	2b00      	cmp	r3, #0
 8004596:	d00e      	beq.n	80045b6 <prvInitialiseMutex+0x2c>
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	2200      	movs	r2, #0
 800459c:	609a      	str	r2, [r3, #8]
 800459e:	687b      	ldr	r3, [r7, #4]
 80045a0:	2200      	movs	r2, #0
 80045a2:	601a      	str	r2, [r3, #0]
 80045a4:	687b      	ldr	r3, [r7, #4]
 80045a6:	2200      	movs	r2, #0
 80045a8:	60da      	str	r2, [r3, #12]
 80045aa:	2300      	movs	r3, #0
 80045ac:	2200      	movs	r2, #0
 80045ae:	2100      	movs	r1, #0
 80045b0:	6878      	ldr	r0, [r7, #4]
 80045b2:	f000 f8a1 	bl	80046f8 <xQueueGenericSend>
 80045b6:	bf00      	nop
 80045b8:	3708      	adds	r7, #8
 80045ba:	46bd      	mov	sp, r7
 80045bc:	bd80      	pop	{r7, pc}

080045be <xQueueCreateMutex>:
 80045be:	b580      	push	{r7, lr}
 80045c0:	b086      	sub	sp, #24
 80045c2:	af00      	add	r7, sp, #0
 80045c4:	4603      	mov	r3, r0
 80045c6:	71fb      	strb	r3, [r7, #7]
 80045c8:	2301      	movs	r3, #1
 80045ca:	617b      	str	r3, [r7, #20]
 80045cc:	2300      	movs	r3, #0
 80045ce:	613b      	str	r3, [r7, #16]
 80045d0:	79fb      	ldrb	r3, [r7, #7]
 80045d2:	461a      	mov	r2, r3
 80045d4:	6939      	ldr	r1, [r7, #16]
 80045d6:	6978      	ldr	r0, [r7, #20]
 80045d8:	f7ff ff7a 	bl	80044d0 <xQueueGenericCreate>
 80045dc:	60f8      	str	r0, [r7, #12]
 80045de:	68f8      	ldr	r0, [r7, #12]
 80045e0:	f7ff ffd3 	bl	800458a <prvInitialiseMutex>
 80045e4:	68fb      	ldr	r3, [r7, #12]
 80045e6:	4618      	mov	r0, r3
 80045e8:	3718      	adds	r7, #24
 80045ea:	46bd      	mov	sp, r7
 80045ec:	bd80      	pop	{r7, pc}

080045ee <xQueueCreateMutexStatic>:
 80045ee:	b580      	push	{r7, lr}
 80045f0:	b088      	sub	sp, #32
 80045f2:	af02      	add	r7, sp, #8
 80045f4:	4603      	mov	r3, r0
 80045f6:	6039      	str	r1, [r7, #0]
 80045f8:	71fb      	strb	r3, [r7, #7]
 80045fa:	2301      	movs	r3, #1
 80045fc:	617b      	str	r3, [r7, #20]
 80045fe:	2300      	movs	r3, #0
 8004600:	613b      	str	r3, [r7, #16]
 8004602:	79fb      	ldrb	r3, [r7, #7]
 8004604:	9300      	str	r3, [sp, #0]
 8004606:	683b      	ldr	r3, [r7, #0]
 8004608:	2200      	movs	r2, #0
 800460a:	6939      	ldr	r1, [r7, #16]
 800460c:	6978      	ldr	r0, [r7, #20]
 800460e:	f7ff fee7 	bl	80043e0 <xQueueGenericCreateStatic>
 8004612:	60f8      	str	r0, [r7, #12]
 8004614:	68f8      	ldr	r0, [r7, #12]
 8004616:	f7ff ffb8 	bl	800458a <prvInitialiseMutex>
 800461a:	68fb      	ldr	r3, [r7, #12]
 800461c:	4618      	mov	r0, r3
 800461e:	3718      	adds	r7, #24
 8004620:	46bd      	mov	sp, r7
 8004622:	bd80      	pop	{r7, pc}

08004624 <xQueueGiveMutexRecursive>:
 8004624:	b590      	push	{r4, r7, lr}
 8004626:	b087      	sub	sp, #28
 8004628:	af00      	add	r7, sp, #0
 800462a:	6078      	str	r0, [r7, #4]
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	613b      	str	r3, [r7, #16]
 8004630:	693b      	ldr	r3, [r7, #16]
 8004632:	2b00      	cmp	r3, #0
 8004634:	d10a      	bne.n	800464c <xQueueGiveMutexRecursive+0x28>
 8004636:	f04f 0350 	mov.w	r3, #80	; 0x50
 800463a:	f383 8811 	msr	BASEPRI, r3
 800463e:	f3bf 8f6f 	isb	sy
 8004642:	f3bf 8f4f 	dsb	sy
 8004646:	60fb      	str	r3, [r7, #12]
 8004648:	bf00      	nop
 800464a:	e7fe      	b.n	800464a <xQueueGiveMutexRecursive+0x26>
 800464c:	693b      	ldr	r3, [r7, #16]
 800464e:	689c      	ldr	r4, [r3, #8]
 8004650:	f001 fdf4 	bl	800623c <xTaskGetCurrentTaskHandle>
 8004654:	4603      	mov	r3, r0
 8004656:	429c      	cmp	r4, r3
 8004658:	d111      	bne.n	800467e <xQueueGiveMutexRecursive+0x5a>
 800465a:	693b      	ldr	r3, [r7, #16]
 800465c:	68db      	ldr	r3, [r3, #12]
 800465e:	1e5a      	subs	r2, r3, #1
 8004660:	693b      	ldr	r3, [r7, #16]
 8004662:	60da      	str	r2, [r3, #12]
 8004664:	693b      	ldr	r3, [r7, #16]
 8004666:	68db      	ldr	r3, [r3, #12]
 8004668:	2b00      	cmp	r3, #0
 800466a:	d105      	bne.n	8004678 <xQueueGiveMutexRecursive+0x54>
 800466c:	2300      	movs	r3, #0
 800466e:	2200      	movs	r2, #0
 8004670:	2100      	movs	r1, #0
 8004672:	6938      	ldr	r0, [r7, #16]
 8004674:	f000 f840 	bl	80046f8 <xQueueGenericSend>
 8004678:	2301      	movs	r3, #1
 800467a:	617b      	str	r3, [r7, #20]
 800467c:	e001      	b.n	8004682 <xQueueGiveMutexRecursive+0x5e>
 800467e:	2300      	movs	r3, #0
 8004680:	617b      	str	r3, [r7, #20]
 8004682:	697b      	ldr	r3, [r7, #20]
 8004684:	4618      	mov	r0, r3
 8004686:	371c      	adds	r7, #28
 8004688:	46bd      	mov	sp, r7
 800468a:	bd90      	pop	{r4, r7, pc}

0800468c <xQueueTakeMutexRecursive>:
 800468c:	b590      	push	{r4, r7, lr}
 800468e:	b087      	sub	sp, #28
 8004690:	af00      	add	r7, sp, #0
 8004692:	6078      	str	r0, [r7, #4]
 8004694:	6039      	str	r1, [r7, #0]
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	613b      	str	r3, [r7, #16]
 800469a:	693b      	ldr	r3, [r7, #16]
 800469c:	2b00      	cmp	r3, #0
 800469e:	d10a      	bne.n	80046b6 <xQueueTakeMutexRecursive+0x2a>
 80046a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80046a4:	f383 8811 	msr	BASEPRI, r3
 80046a8:	f3bf 8f6f 	isb	sy
 80046ac:	f3bf 8f4f 	dsb	sy
 80046b0:	60fb      	str	r3, [r7, #12]
 80046b2:	bf00      	nop
 80046b4:	e7fe      	b.n	80046b4 <xQueueTakeMutexRecursive+0x28>
 80046b6:	693b      	ldr	r3, [r7, #16]
 80046b8:	689c      	ldr	r4, [r3, #8]
 80046ba:	f001 fdbf 	bl	800623c <xTaskGetCurrentTaskHandle>
 80046be:	4603      	mov	r3, r0
 80046c0:	429c      	cmp	r4, r3
 80046c2:	d107      	bne.n	80046d4 <xQueueTakeMutexRecursive+0x48>
 80046c4:	693b      	ldr	r3, [r7, #16]
 80046c6:	68db      	ldr	r3, [r3, #12]
 80046c8:	1c5a      	adds	r2, r3, #1
 80046ca:	693b      	ldr	r3, [r7, #16]
 80046cc:	60da      	str	r2, [r3, #12]
 80046ce:	2301      	movs	r3, #1
 80046d0:	617b      	str	r3, [r7, #20]
 80046d2:	e00c      	b.n	80046ee <xQueueTakeMutexRecursive+0x62>
 80046d4:	6839      	ldr	r1, [r7, #0]
 80046d6:	6938      	ldr	r0, [r7, #16]
 80046d8:	f000 fa88 	bl	8004bec <xQueueSemaphoreTake>
 80046dc:	6178      	str	r0, [r7, #20]
 80046de:	697b      	ldr	r3, [r7, #20]
 80046e0:	2b00      	cmp	r3, #0
 80046e2:	d004      	beq.n	80046ee <xQueueTakeMutexRecursive+0x62>
 80046e4:	693b      	ldr	r3, [r7, #16]
 80046e6:	68db      	ldr	r3, [r3, #12]
 80046e8:	1c5a      	adds	r2, r3, #1
 80046ea:	693b      	ldr	r3, [r7, #16]
 80046ec:	60da      	str	r2, [r3, #12]
 80046ee:	697b      	ldr	r3, [r7, #20]
 80046f0:	4618      	mov	r0, r3
 80046f2:	371c      	adds	r7, #28
 80046f4:	46bd      	mov	sp, r7
 80046f6:	bd90      	pop	{r4, r7, pc}

080046f8 <xQueueGenericSend>:
 80046f8:	b580      	push	{r7, lr}
 80046fa:	b08e      	sub	sp, #56	; 0x38
 80046fc:	af00      	add	r7, sp, #0
 80046fe:	60f8      	str	r0, [r7, #12]
 8004700:	60b9      	str	r1, [r7, #8]
 8004702:	607a      	str	r2, [r7, #4]
 8004704:	603b      	str	r3, [r7, #0]
 8004706:	2300      	movs	r3, #0
 8004708:	637b      	str	r3, [r7, #52]	; 0x34
 800470a:	68fb      	ldr	r3, [r7, #12]
 800470c:	633b      	str	r3, [r7, #48]	; 0x30
 800470e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004710:	2b00      	cmp	r3, #0
 8004712:	d10a      	bne.n	800472a <xQueueGenericSend+0x32>
 8004714:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004718:	f383 8811 	msr	BASEPRI, r3
 800471c:	f3bf 8f6f 	isb	sy
 8004720:	f3bf 8f4f 	dsb	sy
 8004724:	62bb      	str	r3, [r7, #40]	; 0x28
 8004726:	bf00      	nop
 8004728:	e7fe      	b.n	8004728 <xQueueGenericSend+0x30>
 800472a:	68bb      	ldr	r3, [r7, #8]
 800472c:	2b00      	cmp	r3, #0
 800472e:	d103      	bne.n	8004738 <xQueueGenericSend+0x40>
 8004730:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004732:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004734:	2b00      	cmp	r3, #0
 8004736:	d101      	bne.n	800473c <xQueueGenericSend+0x44>
 8004738:	2301      	movs	r3, #1
 800473a:	e000      	b.n	800473e <xQueueGenericSend+0x46>
 800473c:	2300      	movs	r3, #0
 800473e:	2b00      	cmp	r3, #0
 8004740:	d10a      	bne.n	8004758 <xQueueGenericSend+0x60>
 8004742:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004746:	f383 8811 	msr	BASEPRI, r3
 800474a:	f3bf 8f6f 	isb	sy
 800474e:	f3bf 8f4f 	dsb	sy
 8004752:	627b      	str	r3, [r7, #36]	; 0x24
 8004754:	bf00      	nop
 8004756:	e7fe      	b.n	8004756 <xQueueGenericSend+0x5e>
 8004758:	683b      	ldr	r3, [r7, #0]
 800475a:	2b02      	cmp	r3, #2
 800475c:	d103      	bne.n	8004766 <xQueueGenericSend+0x6e>
 800475e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004760:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004762:	2b01      	cmp	r3, #1
 8004764:	d101      	bne.n	800476a <xQueueGenericSend+0x72>
 8004766:	2301      	movs	r3, #1
 8004768:	e000      	b.n	800476c <xQueueGenericSend+0x74>
 800476a:	2300      	movs	r3, #0
 800476c:	2b00      	cmp	r3, #0
 800476e:	d10a      	bne.n	8004786 <xQueueGenericSend+0x8e>
 8004770:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004774:	f383 8811 	msr	BASEPRI, r3
 8004778:	f3bf 8f6f 	isb	sy
 800477c:	f3bf 8f4f 	dsb	sy
 8004780:	623b      	str	r3, [r7, #32]
 8004782:	bf00      	nop
 8004784:	e7fe      	b.n	8004784 <xQueueGenericSend+0x8c>
 8004786:	f001 fd69 	bl	800625c <xTaskGetSchedulerState>
 800478a:	4603      	mov	r3, r0
 800478c:	2b00      	cmp	r3, #0
 800478e:	d102      	bne.n	8004796 <xQueueGenericSend+0x9e>
 8004790:	687b      	ldr	r3, [r7, #4]
 8004792:	2b00      	cmp	r3, #0
 8004794:	d101      	bne.n	800479a <xQueueGenericSend+0xa2>
 8004796:	2301      	movs	r3, #1
 8004798:	e000      	b.n	800479c <xQueueGenericSend+0xa4>
 800479a:	2300      	movs	r3, #0
 800479c:	2b00      	cmp	r3, #0
 800479e:	d10a      	bne.n	80047b6 <xQueueGenericSend+0xbe>
 80047a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80047a4:	f383 8811 	msr	BASEPRI, r3
 80047a8:	f3bf 8f6f 	isb	sy
 80047ac:	f3bf 8f4f 	dsb	sy
 80047b0:	61fb      	str	r3, [r7, #28]
 80047b2:	bf00      	nop
 80047b4:	e7fe      	b.n	80047b4 <xQueueGenericSend+0xbc>
 80047b6:	f002 fc8d 	bl	80070d4 <vPortEnterCritical>
 80047ba:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80047bc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80047be:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80047c0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80047c2:	429a      	cmp	r2, r3
 80047c4:	d302      	bcc.n	80047cc <xQueueGenericSend+0xd4>
 80047c6:	683b      	ldr	r3, [r7, #0]
 80047c8:	2b02      	cmp	r3, #2
 80047ca:	d129      	bne.n	8004820 <xQueueGenericSend+0x128>
 80047cc:	683a      	ldr	r2, [r7, #0]
 80047ce:	68b9      	ldr	r1, [r7, #8]
 80047d0:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80047d2:	f000 fb2f 	bl	8004e34 <prvCopyDataToQueue>
 80047d6:	62f8      	str	r0, [r7, #44]	; 0x2c
 80047d8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80047da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047dc:	2b00      	cmp	r3, #0
 80047de:	d010      	beq.n	8004802 <xQueueGenericSend+0x10a>
 80047e0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80047e2:	3324      	adds	r3, #36	; 0x24
 80047e4:	4618      	mov	r0, r3
 80047e6:	f001 fb13 	bl	8005e10 <xTaskRemoveFromEventList>
 80047ea:	4603      	mov	r3, r0
 80047ec:	2b00      	cmp	r3, #0
 80047ee:	d013      	beq.n	8004818 <xQueueGenericSend+0x120>
 80047f0:	4b3f      	ldr	r3, [pc, #252]	; (80048f0 <xQueueGenericSend+0x1f8>)
 80047f2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80047f6:	601a      	str	r2, [r3, #0]
 80047f8:	f3bf 8f4f 	dsb	sy
 80047fc:	f3bf 8f6f 	isb	sy
 8004800:	e00a      	b.n	8004818 <xQueueGenericSend+0x120>
 8004802:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004804:	2b00      	cmp	r3, #0
 8004806:	d007      	beq.n	8004818 <xQueueGenericSend+0x120>
 8004808:	4b39      	ldr	r3, [pc, #228]	; (80048f0 <xQueueGenericSend+0x1f8>)
 800480a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800480e:	601a      	str	r2, [r3, #0]
 8004810:	f3bf 8f4f 	dsb	sy
 8004814:	f3bf 8f6f 	isb	sy
 8004818:	f002 fc8c 	bl	8007134 <vPortExitCritical>
 800481c:	2301      	movs	r3, #1
 800481e:	e063      	b.n	80048e8 <xQueueGenericSend+0x1f0>
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	2b00      	cmp	r3, #0
 8004824:	d103      	bne.n	800482e <xQueueGenericSend+0x136>
 8004826:	f002 fc85 	bl	8007134 <vPortExitCritical>
 800482a:	2300      	movs	r3, #0
 800482c:	e05c      	b.n	80048e8 <xQueueGenericSend+0x1f0>
 800482e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004830:	2b00      	cmp	r3, #0
 8004832:	d106      	bne.n	8004842 <xQueueGenericSend+0x14a>
 8004834:	f107 0314 	add.w	r3, r7, #20
 8004838:	4618      	mov	r0, r3
 800483a:	f001 fb4d 	bl	8005ed8 <vTaskInternalSetTimeOutState>
 800483e:	2301      	movs	r3, #1
 8004840:	637b      	str	r3, [r7, #52]	; 0x34
 8004842:	f002 fc77 	bl	8007134 <vPortExitCritical>
 8004846:	f001 f891 	bl	800596c <vTaskSuspendAll>
 800484a:	f002 fc43 	bl	80070d4 <vPortEnterCritical>
 800484e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004850:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004854:	b25b      	sxtb	r3, r3
 8004856:	f1b3 3fff 	cmp.w	r3, #4294967295
 800485a:	d103      	bne.n	8004864 <xQueueGenericSend+0x16c>
 800485c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800485e:	2200      	movs	r2, #0
 8004860:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004864:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004866:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800486a:	b25b      	sxtb	r3, r3
 800486c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004870:	d103      	bne.n	800487a <xQueueGenericSend+0x182>
 8004872:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004874:	2200      	movs	r2, #0
 8004876:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800487a:	f002 fc5b 	bl	8007134 <vPortExitCritical>
 800487e:	1d3a      	adds	r2, r7, #4
 8004880:	f107 0314 	add.w	r3, r7, #20
 8004884:	4611      	mov	r1, r2
 8004886:	4618      	mov	r0, r3
 8004888:	f001 fb3c 	bl	8005f04 <xTaskCheckForTimeOut>
 800488c:	4603      	mov	r3, r0
 800488e:	2b00      	cmp	r3, #0
 8004890:	d124      	bne.n	80048dc <xQueueGenericSend+0x1e4>
 8004892:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004894:	f000 fbc6 	bl	8005024 <prvIsQueueFull>
 8004898:	4603      	mov	r3, r0
 800489a:	2b00      	cmp	r3, #0
 800489c:	d018      	beq.n	80048d0 <xQueueGenericSend+0x1d8>
 800489e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80048a0:	3310      	adds	r3, #16
 80048a2:	687a      	ldr	r2, [r7, #4]
 80048a4:	4611      	mov	r1, r2
 80048a6:	4618      	mov	r0, r3
 80048a8:	f001 fa62 	bl	8005d70 <vTaskPlaceOnEventList>
 80048ac:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80048ae:	f000 fb51 	bl	8004f54 <prvUnlockQueue>
 80048b2:	f001 f869 	bl	8005988 <xTaskResumeAll>
 80048b6:	4603      	mov	r3, r0
 80048b8:	2b00      	cmp	r3, #0
 80048ba:	f47f af7c 	bne.w	80047b6 <xQueueGenericSend+0xbe>
 80048be:	4b0c      	ldr	r3, [pc, #48]	; (80048f0 <xQueueGenericSend+0x1f8>)
 80048c0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80048c4:	601a      	str	r2, [r3, #0]
 80048c6:	f3bf 8f4f 	dsb	sy
 80048ca:	f3bf 8f6f 	isb	sy
 80048ce:	e772      	b.n	80047b6 <xQueueGenericSend+0xbe>
 80048d0:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80048d2:	f000 fb3f 	bl	8004f54 <prvUnlockQueue>
 80048d6:	f001 f857 	bl	8005988 <xTaskResumeAll>
 80048da:	e76c      	b.n	80047b6 <xQueueGenericSend+0xbe>
 80048dc:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80048de:	f000 fb39 	bl	8004f54 <prvUnlockQueue>
 80048e2:	f001 f851 	bl	8005988 <xTaskResumeAll>
 80048e6:	2300      	movs	r3, #0
 80048e8:	4618      	mov	r0, r3
 80048ea:	3738      	adds	r7, #56	; 0x38
 80048ec:	46bd      	mov	sp, r7
 80048ee:	bd80      	pop	{r7, pc}
 80048f0:	e000ed04 	.word	0xe000ed04

080048f4 <xQueueGenericSendFromISR>:
 80048f4:	b580      	push	{r7, lr}
 80048f6:	b090      	sub	sp, #64	; 0x40
 80048f8:	af00      	add	r7, sp, #0
 80048fa:	60f8      	str	r0, [r7, #12]
 80048fc:	60b9      	str	r1, [r7, #8]
 80048fe:	607a      	str	r2, [r7, #4]
 8004900:	603b      	str	r3, [r7, #0]
 8004902:	68fb      	ldr	r3, [r7, #12]
 8004904:	63bb      	str	r3, [r7, #56]	; 0x38
 8004906:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004908:	2b00      	cmp	r3, #0
 800490a:	d10a      	bne.n	8004922 <xQueueGenericSendFromISR+0x2e>
 800490c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004910:	f383 8811 	msr	BASEPRI, r3
 8004914:	f3bf 8f6f 	isb	sy
 8004918:	f3bf 8f4f 	dsb	sy
 800491c:	62bb      	str	r3, [r7, #40]	; 0x28
 800491e:	bf00      	nop
 8004920:	e7fe      	b.n	8004920 <xQueueGenericSendFromISR+0x2c>
 8004922:	68bb      	ldr	r3, [r7, #8]
 8004924:	2b00      	cmp	r3, #0
 8004926:	d103      	bne.n	8004930 <xQueueGenericSendFromISR+0x3c>
 8004928:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800492a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800492c:	2b00      	cmp	r3, #0
 800492e:	d101      	bne.n	8004934 <xQueueGenericSendFromISR+0x40>
 8004930:	2301      	movs	r3, #1
 8004932:	e000      	b.n	8004936 <xQueueGenericSendFromISR+0x42>
 8004934:	2300      	movs	r3, #0
 8004936:	2b00      	cmp	r3, #0
 8004938:	d10a      	bne.n	8004950 <xQueueGenericSendFromISR+0x5c>
 800493a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800493e:	f383 8811 	msr	BASEPRI, r3
 8004942:	f3bf 8f6f 	isb	sy
 8004946:	f3bf 8f4f 	dsb	sy
 800494a:	627b      	str	r3, [r7, #36]	; 0x24
 800494c:	bf00      	nop
 800494e:	e7fe      	b.n	800494e <xQueueGenericSendFromISR+0x5a>
 8004950:	683b      	ldr	r3, [r7, #0]
 8004952:	2b02      	cmp	r3, #2
 8004954:	d103      	bne.n	800495e <xQueueGenericSendFromISR+0x6a>
 8004956:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004958:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800495a:	2b01      	cmp	r3, #1
 800495c:	d101      	bne.n	8004962 <xQueueGenericSendFromISR+0x6e>
 800495e:	2301      	movs	r3, #1
 8004960:	e000      	b.n	8004964 <xQueueGenericSendFromISR+0x70>
 8004962:	2300      	movs	r3, #0
 8004964:	2b00      	cmp	r3, #0
 8004966:	d10a      	bne.n	800497e <xQueueGenericSendFromISR+0x8a>
 8004968:	f04f 0350 	mov.w	r3, #80	; 0x50
 800496c:	f383 8811 	msr	BASEPRI, r3
 8004970:	f3bf 8f6f 	isb	sy
 8004974:	f3bf 8f4f 	dsb	sy
 8004978:	623b      	str	r3, [r7, #32]
 800497a:	bf00      	nop
 800497c:	e7fe      	b.n	800497c <xQueueGenericSendFromISR+0x88>
 800497e:	f002 fc8b 	bl	8007298 <vPortValidateInterruptPriority>
 8004982:	f3ef 8211 	mrs	r2, BASEPRI
 8004986:	f04f 0350 	mov.w	r3, #80	; 0x50
 800498a:	f383 8811 	msr	BASEPRI, r3
 800498e:	f3bf 8f6f 	isb	sy
 8004992:	f3bf 8f4f 	dsb	sy
 8004996:	61fa      	str	r2, [r7, #28]
 8004998:	61bb      	str	r3, [r7, #24]
 800499a:	69fb      	ldr	r3, [r7, #28]
 800499c:	637b      	str	r3, [r7, #52]	; 0x34
 800499e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80049a0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80049a2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80049a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80049a6:	429a      	cmp	r2, r3
 80049a8:	d302      	bcc.n	80049b0 <xQueueGenericSendFromISR+0xbc>
 80049aa:	683b      	ldr	r3, [r7, #0]
 80049ac:	2b02      	cmp	r3, #2
 80049ae:	d12f      	bne.n	8004a10 <xQueueGenericSendFromISR+0x11c>
 80049b0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80049b2:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80049b6:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 80049ba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80049bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80049be:	62fb      	str	r3, [r7, #44]	; 0x2c
 80049c0:	683a      	ldr	r2, [r7, #0]
 80049c2:	68b9      	ldr	r1, [r7, #8]
 80049c4:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 80049c6:	f000 fa35 	bl	8004e34 <prvCopyDataToQueue>
 80049ca:	f997 3033 	ldrsb.w	r3, [r7, #51]	; 0x33
 80049ce:	f1b3 3fff 	cmp.w	r3, #4294967295
 80049d2:	d112      	bne.n	80049fa <xQueueGenericSendFromISR+0x106>
 80049d4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80049d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049d8:	2b00      	cmp	r3, #0
 80049da:	d016      	beq.n	8004a0a <xQueueGenericSendFromISR+0x116>
 80049dc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80049de:	3324      	adds	r3, #36	; 0x24
 80049e0:	4618      	mov	r0, r3
 80049e2:	f001 fa15 	bl	8005e10 <xTaskRemoveFromEventList>
 80049e6:	4603      	mov	r3, r0
 80049e8:	2b00      	cmp	r3, #0
 80049ea:	d00e      	beq.n	8004a0a <xQueueGenericSendFromISR+0x116>
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	2b00      	cmp	r3, #0
 80049f0:	d00b      	beq.n	8004a0a <xQueueGenericSendFromISR+0x116>
 80049f2:	687b      	ldr	r3, [r7, #4]
 80049f4:	2201      	movs	r2, #1
 80049f6:	601a      	str	r2, [r3, #0]
 80049f8:	e007      	b.n	8004a0a <xQueueGenericSendFromISR+0x116>
 80049fa:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80049fe:	3301      	adds	r3, #1
 8004a00:	b2db      	uxtb	r3, r3
 8004a02:	b25a      	sxtb	r2, r3
 8004a04:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004a06:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004a0a:	2301      	movs	r3, #1
 8004a0c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004a0e:	e001      	b.n	8004a14 <xQueueGenericSendFromISR+0x120>
 8004a10:	2300      	movs	r3, #0
 8004a12:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004a14:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004a16:	617b      	str	r3, [r7, #20]
 8004a18:	697b      	ldr	r3, [r7, #20]
 8004a1a:	f383 8811 	msr	BASEPRI, r3
 8004a1e:	bf00      	nop
 8004a20:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004a22:	4618      	mov	r0, r3
 8004a24:	3740      	adds	r7, #64	; 0x40
 8004a26:	46bd      	mov	sp, r7
 8004a28:	bd80      	pop	{r7, pc}
	...

08004a2c <xQueueReceive>:
 8004a2c:	b580      	push	{r7, lr}
 8004a2e:	b08c      	sub	sp, #48	; 0x30
 8004a30:	af00      	add	r7, sp, #0
 8004a32:	60f8      	str	r0, [r7, #12]
 8004a34:	60b9      	str	r1, [r7, #8]
 8004a36:	607a      	str	r2, [r7, #4]
 8004a38:	2300      	movs	r3, #0
 8004a3a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	62bb      	str	r3, [r7, #40]	; 0x28
 8004a40:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004a42:	2b00      	cmp	r3, #0
 8004a44:	d10a      	bne.n	8004a5c <xQueueReceive+0x30>
 8004a46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004a4a:	f383 8811 	msr	BASEPRI, r3
 8004a4e:	f3bf 8f6f 	isb	sy
 8004a52:	f3bf 8f4f 	dsb	sy
 8004a56:	623b      	str	r3, [r7, #32]
 8004a58:	bf00      	nop
 8004a5a:	e7fe      	b.n	8004a5a <xQueueReceive+0x2e>
 8004a5c:	68bb      	ldr	r3, [r7, #8]
 8004a5e:	2b00      	cmp	r3, #0
 8004a60:	d103      	bne.n	8004a6a <xQueueReceive+0x3e>
 8004a62:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004a64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a66:	2b00      	cmp	r3, #0
 8004a68:	d101      	bne.n	8004a6e <xQueueReceive+0x42>
 8004a6a:	2301      	movs	r3, #1
 8004a6c:	e000      	b.n	8004a70 <xQueueReceive+0x44>
 8004a6e:	2300      	movs	r3, #0
 8004a70:	2b00      	cmp	r3, #0
 8004a72:	d10a      	bne.n	8004a8a <xQueueReceive+0x5e>
 8004a74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004a78:	f383 8811 	msr	BASEPRI, r3
 8004a7c:	f3bf 8f6f 	isb	sy
 8004a80:	f3bf 8f4f 	dsb	sy
 8004a84:	61fb      	str	r3, [r7, #28]
 8004a86:	bf00      	nop
 8004a88:	e7fe      	b.n	8004a88 <xQueueReceive+0x5c>
 8004a8a:	f001 fbe7 	bl	800625c <xTaskGetSchedulerState>
 8004a8e:	4603      	mov	r3, r0
 8004a90:	2b00      	cmp	r3, #0
 8004a92:	d102      	bne.n	8004a9a <xQueueReceive+0x6e>
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	2b00      	cmp	r3, #0
 8004a98:	d101      	bne.n	8004a9e <xQueueReceive+0x72>
 8004a9a:	2301      	movs	r3, #1
 8004a9c:	e000      	b.n	8004aa0 <xQueueReceive+0x74>
 8004a9e:	2300      	movs	r3, #0
 8004aa0:	2b00      	cmp	r3, #0
 8004aa2:	d10a      	bne.n	8004aba <xQueueReceive+0x8e>
 8004aa4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004aa8:	f383 8811 	msr	BASEPRI, r3
 8004aac:	f3bf 8f6f 	isb	sy
 8004ab0:	f3bf 8f4f 	dsb	sy
 8004ab4:	61bb      	str	r3, [r7, #24]
 8004ab6:	bf00      	nop
 8004ab8:	e7fe      	b.n	8004ab8 <xQueueReceive+0x8c>
 8004aba:	f002 fb0b 	bl	80070d4 <vPortEnterCritical>
 8004abe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004ac0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004ac2:	627b      	str	r3, [r7, #36]	; 0x24
 8004ac4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ac6:	2b00      	cmp	r3, #0
 8004ac8:	d01f      	beq.n	8004b0a <xQueueReceive+0xde>
 8004aca:	68b9      	ldr	r1, [r7, #8]
 8004acc:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004ace:	f000 fa1b 	bl	8004f08 <prvCopyDataFromQueue>
 8004ad2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ad4:	1e5a      	subs	r2, r3, #1
 8004ad6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004ad8:	639a      	str	r2, [r3, #56]	; 0x38
 8004ada:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004adc:	691b      	ldr	r3, [r3, #16]
 8004ade:	2b00      	cmp	r3, #0
 8004ae0:	d00f      	beq.n	8004b02 <xQueueReceive+0xd6>
 8004ae2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004ae4:	3310      	adds	r3, #16
 8004ae6:	4618      	mov	r0, r3
 8004ae8:	f001 f992 	bl	8005e10 <xTaskRemoveFromEventList>
 8004aec:	4603      	mov	r3, r0
 8004aee:	2b00      	cmp	r3, #0
 8004af0:	d007      	beq.n	8004b02 <xQueueReceive+0xd6>
 8004af2:	4b3d      	ldr	r3, [pc, #244]	; (8004be8 <xQueueReceive+0x1bc>)
 8004af4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004af8:	601a      	str	r2, [r3, #0]
 8004afa:	f3bf 8f4f 	dsb	sy
 8004afe:	f3bf 8f6f 	isb	sy
 8004b02:	f002 fb17 	bl	8007134 <vPortExitCritical>
 8004b06:	2301      	movs	r3, #1
 8004b08:	e069      	b.n	8004bde <xQueueReceive+0x1b2>
 8004b0a:	687b      	ldr	r3, [r7, #4]
 8004b0c:	2b00      	cmp	r3, #0
 8004b0e:	d103      	bne.n	8004b18 <xQueueReceive+0xec>
 8004b10:	f002 fb10 	bl	8007134 <vPortExitCritical>
 8004b14:	2300      	movs	r3, #0
 8004b16:	e062      	b.n	8004bde <xQueueReceive+0x1b2>
 8004b18:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004b1a:	2b00      	cmp	r3, #0
 8004b1c:	d106      	bne.n	8004b2c <xQueueReceive+0x100>
 8004b1e:	f107 0310 	add.w	r3, r7, #16
 8004b22:	4618      	mov	r0, r3
 8004b24:	f001 f9d8 	bl	8005ed8 <vTaskInternalSetTimeOutState>
 8004b28:	2301      	movs	r3, #1
 8004b2a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004b2c:	f002 fb02 	bl	8007134 <vPortExitCritical>
 8004b30:	f000 ff1c 	bl	800596c <vTaskSuspendAll>
 8004b34:	f002 face 	bl	80070d4 <vPortEnterCritical>
 8004b38:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b3a:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004b3e:	b25b      	sxtb	r3, r3
 8004b40:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004b44:	d103      	bne.n	8004b4e <xQueueReceive+0x122>
 8004b46:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b48:	2200      	movs	r2, #0
 8004b4a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004b4e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b50:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004b54:	b25b      	sxtb	r3, r3
 8004b56:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004b5a:	d103      	bne.n	8004b64 <xQueueReceive+0x138>
 8004b5c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b5e:	2200      	movs	r2, #0
 8004b60:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004b64:	f002 fae6 	bl	8007134 <vPortExitCritical>
 8004b68:	1d3a      	adds	r2, r7, #4
 8004b6a:	f107 0310 	add.w	r3, r7, #16
 8004b6e:	4611      	mov	r1, r2
 8004b70:	4618      	mov	r0, r3
 8004b72:	f001 f9c7 	bl	8005f04 <xTaskCheckForTimeOut>
 8004b76:	4603      	mov	r3, r0
 8004b78:	2b00      	cmp	r3, #0
 8004b7a:	d123      	bne.n	8004bc4 <xQueueReceive+0x198>
 8004b7c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004b7e:	f000 fa3b 	bl	8004ff8 <prvIsQueueEmpty>
 8004b82:	4603      	mov	r3, r0
 8004b84:	2b00      	cmp	r3, #0
 8004b86:	d017      	beq.n	8004bb8 <xQueueReceive+0x18c>
 8004b88:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b8a:	3324      	adds	r3, #36	; 0x24
 8004b8c:	687a      	ldr	r2, [r7, #4]
 8004b8e:	4611      	mov	r1, r2
 8004b90:	4618      	mov	r0, r3
 8004b92:	f001 f8ed 	bl	8005d70 <vTaskPlaceOnEventList>
 8004b96:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004b98:	f000 f9dc 	bl	8004f54 <prvUnlockQueue>
 8004b9c:	f000 fef4 	bl	8005988 <xTaskResumeAll>
 8004ba0:	4603      	mov	r3, r0
 8004ba2:	2b00      	cmp	r3, #0
 8004ba4:	d189      	bne.n	8004aba <xQueueReceive+0x8e>
 8004ba6:	4b10      	ldr	r3, [pc, #64]	; (8004be8 <xQueueReceive+0x1bc>)
 8004ba8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004bac:	601a      	str	r2, [r3, #0]
 8004bae:	f3bf 8f4f 	dsb	sy
 8004bb2:	f3bf 8f6f 	isb	sy
 8004bb6:	e780      	b.n	8004aba <xQueueReceive+0x8e>
 8004bb8:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004bba:	f000 f9cb 	bl	8004f54 <prvUnlockQueue>
 8004bbe:	f000 fee3 	bl	8005988 <xTaskResumeAll>
 8004bc2:	e77a      	b.n	8004aba <xQueueReceive+0x8e>
 8004bc4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004bc6:	f000 f9c5 	bl	8004f54 <prvUnlockQueue>
 8004bca:	f000 fedd 	bl	8005988 <xTaskResumeAll>
 8004bce:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004bd0:	f000 fa12 	bl	8004ff8 <prvIsQueueEmpty>
 8004bd4:	4603      	mov	r3, r0
 8004bd6:	2b00      	cmp	r3, #0
 8004bd8:	f43f af6f 	beq.w	8004aba <xQueueReceive+0x8e>
 8004bdc:	2300      	movs	r3, #0
 8004bde:	4618      	mov	r0, r3
 8004be0:	3730      	adds	r7, #48	; 0x30
 8004be2:	46bd      	mov	sp, r7
 8004be4:	bd80      	pop	{r7, pc}
 8004be6:	bf00      	nop
 8004be8:	e000ed04 	.word	0xe000ed04

08004bec <xQueueSemaphoreTake>:
 8004bec:	b580      	push	{r7, lr}
 8004bee:	b08e      	sub	sp, #56	; 0x38
 8004bf0:	af00      	add	r7, sp, #0
 8004bf2:	6078      	str	r0, [r7, #4]
 8004bf4:	6039      	str	r1, [r7, #0]
 8004bf6:	2300      	movs	r3, #0
 8004bf8:	637b      	str	r3, [r7, #52]	; 0x34
 8004bfa:	687b      	ldr	r3, [r7, #4]
 8004bfc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004bfe:	2300      	movs	r3, #0
 8004c00:	633b      	str	r3, [r7, #48]	; 0x30
 8004c02:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c04:	2b00      	cmp	r3, #0
 8004c06:	d10a      	bne.n	8004c1e <xQueueSemaphoreTake+0x32>
 8004c08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004c0c:	f383 8811 	msr	BASEPRI, r3
 8004c10:	f3bf 8f6f 	isb	sy
 8004c14:	f3bf 8f4f 	dsb	sy
 8004c18:	623b      	str	r3, [r7, #32]
 8004c1a:	bf00      	nop
 8004c1c:	e7fe      	b.n	8004c1c <xQueueSemaphoreTake+0x30>
 8004c1e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c22:	2b00      	cmp	r3, #0
 8004c24:	d00a      	beq.n	8004c3c <xQueueSemaphoreTake+0x50>
 8004c26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004c2a:	f383 8811 	msr	BASEPRI, r3
 8004c2e:	f3bf 8f6f 	isb	sy
 8004c32:	f3bf 8f4f 	dsb	sy
 8004c36:	61fb      	str	r3, [r7, #28]
 8004c38:	bf00      	nop
 8004c3a:	e7fe      	b.n	8004c3a <xQueueSemaphoreTake+0x4e>
 8004c3c:	f001 fb0e 	bl	800625c <xTaskGetSchedulerState>
 8004c40:	4603      	mov	r3, r0
 8004c42:	2b00      	cmp	r3, #0
 8004c44:	d102      	bne.n	8004c4c <xQueueSemaphoreTake+0x60>
 8004c46:	683b      	ldr	r3, [r7, #0]
 8004c48:	2b00      	cmp	r3, #0
 8004c4a:	d101      	bne.n	8004c50 <xQueueSemaphoreTake+0x64>
 8004c4c:	2301      	movs	r3, #1
 8004c4e:	e000      	b.n	8004c52 <xQueueSemaphoreTake+0x66>
 8004c50:	2300      	movs	r3, #0
 8004c52:	2b00      	cmp	r3, #0
 8004c54:	d10a      	bne.n	8004c6c <xQueueSemaphoreTake+0x80>
 8004c56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004c5a:	f383 8811 	msr	BASEPRI, r3
 8004c5e:	f3bf 8f6f 	isb	sy
 8004c62:	f3bf 8f4f 	dsb	sy
 8004c66:	61bb      	str	r3, [r7, #24]
 8004c68:	bf00      	nop
 8004c6a:	e7fe      	b.n	8004c6a <xQueueSemaphoreTake+0x7e>
 8004c6c:	f002 fa32 	bl	80070d4 <vPortEnterCritical>
 8004c70:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c72:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004c74:	62bb      	str	r3, [r7, #40]	; 0x28
 8004c76:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004c78:	2b00      	cmp	r3, #0
 8004c7a:	d024      	beq.n	8004cc6 <xQueueSemaphoreTake+0xda>
 8004c7c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004c7e:	1e5a      	subs	r2, r3, #1
 8004c80:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c82:	639a      	str	r2, [r3, #56]	; 0x38
 8004c84:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c86:	681b      	ldr	r3, [r3, #0]
 8004c88:	2b00      	cmp	r3, #0
 8004c8a:	d104      	bne.n	8004c96 <xQueueSemaphoreTake+0xaa>
 8004c8c:	f001 fc5c 	bl	8006548 <pvTaskIncrementMutexHeldCount>
 8004c90:	4602      	mov	r2, r0
 8004c92:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c94:	609a      	str	r2, [r3, #8]
 8004c96:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c98:	691b      	ldr	r3, [r3, #16]
 8004c9a:	2b00      	cmp	r3, #0
 8004c9c:	d00f      	beq.n	8004cbe <xQueueSemaphoreTake+0xd2>
 8004c9e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004ca0:	3310      	adds	r3, #16
 8004ca2:	4618      	mov	r0, r3
 8004ca4:	f001 f8b4 	bl	8005e10 <xTaskRemoveFromEventList>
 8004ca8:	4603      	mov	r3, r0
 8004caa:	2b00      	cmp	r3, #0
 8004cac:	d007      	beq.n	8004cbe <xQueueSemaphoreTake+0xd2>
 8004cae:	4b54      	ldr	r3, [pc, #336]	; (8004e00 <xQueueSemaphoreTake+0x214>)
 8004cb0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004cb4:	601a      	str	r2, [r3, #0]
 8004cb6:	f3bf 8f4f 	dsb	sy
 8004cba:	f3bf 8f6f 	isb	sy
 8004cbe:	f002 fa39 	bl	8007134 <vPortExitCritical>
 8004cc2:	2301      	movs	r3, #1
 8004cc4:	e097      	b.n	8004df6 <xQueueSemaphoreTake+0x20a>
 8004cc6:	683b      	ldr	r3, [r7, #0]
 8004cc8:	2b00      	cmp	r3, #0
 8004cca:	d111      	bne.n	8004cf0 <xQueueSemaphoreTake+0x104>
 8004ccc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004cce:	2b00      	cmp	r3, #0
 8004cd0:	d00a      	beq.n	8004ce8 <xQueueSemaphoreTake+0xfc>
 8004cd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004cd6:	f383 8811 	msr	BASEPRI, r3
 8004cda:	f3bf 8f6f 	isb	sy
 8004cde:	f3bf 8f4f 	dsb	sy
 8004ce2:	617b      	str	r3, [r7, #20]
 8004ce4:	bf00      	nop
 8004ce6:	e7fe      	b.n	8004ce6 <xQueueSemaphoreTake+0xfa>
 8004ce8:	f002 fa24 	bl	8007134 <vPortExitCritical>
 8004cec:	2300      	movs	r3, #0
 8004cee:	e082      	b.n	8004df6 <xQueueSemaphoreTake+0x20a>
 8004cf0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004cf2:	2b00      	cmp	r3, #0
 8004cf4:	d106      	bne.n	8004d04 <xQueueSemaphoreTake+0x118>
 8004cf6:	f107 030c 	add.w	r3, r7, #12
 8004cfa:	4618      	mov	r0, r3
 8004cfc:	f001 f8ec 	bl	8005ed8 <vTaskInternalSetTimeOutState>
 8004d00:	2301      	movs	r3, #1
 8004d02:	637b      	str	r3, [r7, #52]	; 0x34
 8004d04:	f002 fa16 	bl	8007134 <vPortExitCritical>
 8004d08:	f000 fe30 	bl	800596c <vTaskSuspendAll>
 8004d0c:	f002 f9e2 	bl	80070d4 <vPortEnterCritical>
 8004d10:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004d12:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004d16:	b25b      	sxtb	r3, r3
 8004d18:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004d1c:	d103      	bne.n	8004d26 <xQueueSemaphoreTake+0x13a>
 8004d1e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004d20:	2200      	movs	r2, #0
 8004d22:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004d26:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004d28:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004d2c:	b25b      	sxtb	r3, r3
 8004d2e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004d32:	d103      	bne.n	8004d3c <xQueueSemaphoreTake+0x150>
 8004d34:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004d36:	2200      	movs	r2, #0
 8004d38:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004d3c:	f002 f9fa 	bl	8007134 <vPortExitCritical>
 8004d40:	463a      	mov	r2, r7
 8004d42:	f107 030c 	add.w	r3, r7, #12
 8004d46:	4611      	mov	r1, r2
 8004d48:	4618      	mov	r0, r3
 8004d4a:	f001 f8db 	bl	8005f04 <xTaskCheckForTimeOut>
 8004d4e:	4603      	mov	r3, r0
 8004d50:	2b00      	cmp	r3, #0
 8004d52:	d132      	bne.n	8004dba <xQueueSemaphoreTake+0x1ce>
 8004d54:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004d56:	f000 f94f 	bl	8004ff8 <prvIsQueueEmpty>
 8004d5a:	4603      	mov	r3, r0
 8004d5c:	2b00      	cmp	r3, #0
 8004d5e:	d026      	beq.n	8004dae <xQueueSemaphoreTake+0x1c2>
 8004d60:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004d62:	681b      	ldr	r3, [r3, #0]
 8004d64:	2b00      	cmp	r3, #0
 8004d66:	d109      	bne.n	8004d7c <xQueueSemaphoreTake+0x190>
 8004d68:	f002 f9b4 	bl	80070d4 <vPortEnterCritical>
 8004d6c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004d6e:	689b      	ldr	r3, [r3, #8]
 8004d70:	4618      	mov	r0, r3
 8004d72:	f001 fa91 	bl	8006298 <xTaskPriorityInherit>
 8004d76:	6338      	str	r0, [r7, #48]	; 0x30
 8004d78:	f002 f9dc 	bl	8007134 <vPortExitCritical>
 8004d7c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004d7e:	3324      	adds	r3, #36	; 0x24
 8004d80:	683a      	ldr	r2, [r7, #0]
 8004d82:	4611      	mov	r1, r2
 8004d84:	4618      	mov	r0, r3
 8004d86:	f000 fff3 	bl	8005d70 <vTaskPlaceOnEventList>
 8004d8a:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004d8c:	f000 f8e2 	bl	8004f54 <prvUnlockQueue>
 8004d90:	f000 fdfa 	bl	8005988 <xTaskResumeAll>
 8004d94:	4603      	mov	r3, r0
 8004d96:	2b00      	cmp	r3, #0
 8004d98:	f47f af68 	bne.w	8004c6c <xQueueSemaphoreTake+0x80>
 8004d9c:	4b18      	ldr	r3, [pc, #96]	; (8004e00 <xQueueSemaphoreTake+0x214>)
 8004d9e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004da2:	601a      	str	r2, [r3, #0]
 8004da4:	f3bf 8f4f 	dsb	sy
 8004da8:	f3bf 8f6f 	isb	sy
 8004dac:	e75e      	b.n	8004c6c <xQueueSemaphoreTake+0x80>
 8004dae:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004db0:	f000 f8d0 	bl	8004f54 <prvUnlockQueue>
 8004db4:	f000 fde8 	bl	8005988 <xTaskResumeAll>
 8004db8:	e758      	b.n	8004c6c <xQueueSemaphoreTake+0x80>
 8004dba:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004dbc:	f000 f8ca 	bl	8004f54 <prvUnlockQueue>
 8004dc0:	f000 fde2 	bl	8005988 <xTaskResumeAll>
 8004dc4:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004dc6:	f000 f917 	bl	8004ff8 <prvIsQueueEmpty>
 8004dca:	4603      	mov	r3, r0
 8004dcc:	2b00      	cmp	r3, #0
 8004dce:	f43f af4d 	beq.w	8004c6c <xQueueSemaphoreTake+0x80>
 8004dd2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004dd4:	2b00      	cmp	r3, #0
 8004dd6:	d00d      	beq.n	8004df4 <xQueueSemaphoreTake+0x208>
 8004dd8:	f002 f97c 	bl	80070d4 <vPortEnterCritical>
 8004ddc:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004dde:	f000 f811 	bl	8004e04 <prvGetDisinheritPriorityAfterTimeout>
 8004de2:	6278      	str	r0, [r7, #36]	; 0x24
 8004de4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004de6:	689b      	ldr	r3, [r3, #8]
 8004de8:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8004dea:	4618      	mov	r0, r3
 8004dec:	f001 fb2a 	bl	8006444 <vTaskPriorityDisinheritAfterTimeout>
 8004df0:	f002 f9a0 	bl	8007134 <vPortExitCritical>
 8004df4:	2300      	movs	r3, #0
 8004df6:	4618      	mov	r0, r3
 8004df8:	3738      	adds	r7, #56	; 0x38
 8004dfa:	46bd      	mov	sp, r7
 8004dfc:	bd80      	pop	{r7, pc}
 8004dfe:	bf00      	nop
 8004e00:	e000ed04 	.word	0xe000ed04

08004e04 <prvGetDisinheritPriorityAfterTimeout>:
 8004e04:	b480      	push	{r7}
 8004e06:	b085      	sub	sp, #20
 8004e08:	af00      	add	r7, sp, #0
 8004e0a:	6078      	str	r0, [r7, #4]
 8004e0c:	687b      	ldr	r3, [r7, #4]
 8004e0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e10:	2b00      	cmp	r3, #0
 8004e12:	d006      	beq.n	8004e22 <prvGetDisinheritPriorityAfterTimeout+0x1e>
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e18:	681b      	ldr	r3, [r3, #0]
 8004e1a:	f1c3 0338 	rsb	r3, r3, #56	; 0x38
 8004e1e:	60fb      	str	r3, [r7, #12]
 8004e20:	e001      	b.n	8004e26 <prvGetDisinheritPriorityAfterTimeout+0x22>
 8004e22:	2300      	movs	r3, #0
 8004e24:	60fb      	str	r3, [r7, #12]
 8004e26:	68fb      	ldr	r3, [r7, #12]
 8004e28:	4618      	mov	r0, r3
 8004e2a:	3714      	adds	r7, #20
 8004e2c:	46bd      	mov	sp, r7
 8004e2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e32:	4770      	bx	lr

08004e34 <prvCopyDataToQueue>:
 8004e34:	b580      	push	{r7, lr}
 8004e36:	b086      	sub	sp, #24
 8004e38:	af00      	add	r7, sp, #0
 8004e3a:	60f8      	str	r0, [r7, #12]
 8004e3c:	60b9      	str	r1, [r7, #8]
 8004e3e:	607a      	str	r2, [r7, #4]
 8004e40:	2300      	movs	r3, #0
 8004e42:	617b      	str	r3, [r7, #20]
 8004e44:	68fb      	ldr	r3, [r7, #12]
 8004e46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004e48:	613b      	str	r3, [r7, #16]
 8004e4a:	68fb      	ldr	r3, [r7, #12]
 8004e4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e4e:	2b00      	cmp	r3, #0
 8004e50:	d10d      	bne.n	8004e6e <prvCopyDataToQueue+0x3a>
 8004e52:	68fb      	ldr	r3, [r7, #12]
 8004e54:	681b      	ldr	r3, [r3, #0]
 8004e56:	2b00      	cmp	r3, #0
 8004e58:	d14d      	bne.n	8004ef6 <prvCopyDataToQueue+0xc2>
 8004e5a:	68fb      	ldr	r3, [r7, #12]
 8004e5c:	689b      	ldr	r3, [r3, #8]
 8004e5e:	4618      	mov	r0, r3
 8004e60:	f001 fa82 	bl	8006368 <xTaskPriorityDisinherit>
 8004e64:	6178      	str	r0, [r7, #20]
 8004e66:	68fb      	ldr	r3, [r7, #12]
 8004e68:	2200      	movs	r2, #0
 8004e6a:	609a      	str	r2, [r3, #8]
 8004e6c:	e043      	b.n	8004ef6 <prvCopyDataToQueue+0xc2>
 8004e6e:	687b      	ldr	r3, [r7, #4]
 8004e70:	2b00      	cmp	r3, #0
 8004e72:	d119      	bne.n	8004ea8 <prvCopyDataToQueue+0x74>
 8004e74:	68fb      	ldr	r3, [r7, #12]
 8004e76:	6858      	ldr	r0, [r3, #4]
 8004e78:	68fb      	ldr	r3, [r7, #12]
 8004e7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e7c:	461a      	mov	r2, r3
 8004e7e:	68b9      	ldr	r1, [r7, #8]
 8004e80:	f003 fb77 	bl	8008572 <memcpy>
 8004e84:	68fb      	ldr	r3, [r7, #12]
 8004e86:	685a      	ldr	r2, [r3, #4]
 8004e88:	68fb      	ldr	r3, [r7, #12]
 8004e8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e8c:	441a      	add	r2, r3
 8004e8e:	68fb      	ldr	r3, [r7, #12]
 8004e90:	605a      	str	r2, [r3, #4]
 8004e92:	68fb      	ldr	r3, [r7, #12]
 8004e94:	685a      	ldr	r2, [r3, #4]
 8004e96:	68fb      	ldr	r3, [r7, #12]
 8004e98:	689b      	ldr	r3, [r3, #8]
 8004e9a:	429a      	cmp	r2, r3
 8004e9c:	d32b      	bcc.n	8004ef6 <prvCopyDataToQueue+0xc2>
 8004e9e:	68fb      	ldr	r3, [r7, #12]
 8004ea0:	681a      	ldr	r2, [r3, #0]
 8004ea2:	68fb      	ldr	r3, [r7, #12]
 8004ea4:	605a      	str	r2, [r3, #4]
 8004ea6:	e026      	b.n	8004ef6 <prvCopyDataToQueue+0xc2>
 8004ea8:	68fb      	ldr	r3, [r7, #12]
 8004eaa:	68d8      	ldr	r0, [r3, #12]
 8004eac:	68fb      	ldr	r3, [r7, #12]
 8004eae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004eb0:	461a      	mov	r2, r3
 8004eb2:	68b9      	ldr	r1, [r7, #8]
 8004eb4:	f003 fb5d 	bl	8008572 <memcpy>
 8004eb8:	68fb      	ldr	r3, [r7, #12]
 8004eba:	68da      	ldr	r2, [r3, #12]
 8004ebc:	68fb      	ldr	r3, [r7, #12]
 8004ebe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ec0:	425b      	negs	r3, r3
 8004ec2:	441a      	add	r2, r3
 8004ec4:	68fb      	ldr	r3, [r7, #12]
 8004ec6:	60da      	str	r2, [r3, #12]
 8004ec8:	68fb      	ldr	r3, [r7, #12]
 8004eca:	68da      	ldr	r2, [r3, #12]
 8004ecc:	68fb      	ldr	r3, [r7, #12]
 8004ece:	681b      	ldr	r3, [r3, #0]
 8004ed0:	429a      	cmp	r2, r3
 8004ed2:	d207      	bcs.n	8004ee4 <prvCopyDataToQueue+0xb0>
 8004ed4:	68fb      	ldr	r3, [r7, #12]
 8004ed6:	689a      	ldr	r2, [r3, #8]
 8004ed8:	68fb      	ldr	r3, [r7, #12]
 8004eda:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004edc:	425b      	negs	r3, r3
 8004ede:	441a      	add	r2, r3
 8004ee0:	68fb      	ldr	r3, [r7, #12]
 8004ee2:	60da      	str	r2, [r3, #12]
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	2b02      	cmp	r3, #2
 8004ee8:	d105      	bne.n	8004ef6 <prvCopyDataToQueue+0xc2>
 8004eea:	693b      	ldr	r3, [r7, #16]
 8004eec:	2b00      	cmp	r3, #0
 8004eee:	d002      	beq.n	8004ef6 <prvCopyDataToQueue+0xc2>
 8004ef0:	693b      	ldr	r3, [r7, #16]
 8004ef2:	3b01      	subs	r3, #1
 8004ef4:	613b      	str	r3, [r7, #16]
 8004ef6:	693b      	ldr	r3, [r7, #16]
 8004ef8:	1c5a      	adds	r2, r3, #1
 8004efa:	68fb      	ldr	r3, [r7, #12]
 8004efc:	639a      	str	r2, [r3, #56]	; 0x38
 8004efe:	697b      	ldr	r3, [r7, #20]
 8004f00:	4618      	mov	r0, r3
 8004f02:	3718      	adds	r7, #24
 8004f04:	46bd      	mov	sp, r7
 8004f06:	bd80      	pop	{r7, pc}

08004f08 <prvCopyDataFromQueue>:
 8004f08:	b580      	push	{r7, lr}
 8004f0a:	b082      	sub	sp, #8
 8004f0c:	af00      	add	r7, sp, #0
 8004f0e:	6078      	str	r0, [r7, #4]
 8004f10:	6039      	str	r1, [r7, #0]
 8004f12:	687b      	ldr	r3, [r7, #4]
 8004f14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f16:	2b00      	cmp	r3, #0
 8004f18:	d018      	beq.n	8004f4c <prvCopyDataFromQueue+0x44>
 8004f1a:	687b      	ldr	r3, [r7, #4]
 8004f1c:	68da      	ldr	r2, [r3, #12]
 8004f1e:	687b      	ldr	r3, [r7, #4]
 8004f20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f22:	441a      	add	r2, r3
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	60da      	str	r2, [r3, #12]
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	68da      	ldr	r2, [r3, #12]
 8004f2c:	687b      	ldr	r3, [r7, #4]
 8004f2e:	689b      	ldr	r3, [r3, #8]
 8004f30:	429a      	cmp	r2, r3
 8004f32:	d303      	bcc.n	8004f3c <prvCopyDataFromQueue+0x34>
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	681a      	ldr	r2, [r3, #0]
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	60da      	str	r2, [r3, #12]
 8004f3c:	687b      	ldr	r3, [r7, #4]
 8004f3e:	68d9      	ldr	r1, [r3, #12]
 8004f40:	687b      	ldr	r3, [r7, #4]
 8004f42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f44:	461a      	mov	r2, r3
 8004f46:	6838      	ldr	r0, [r7, #0]
 8004f48:	f003 fb13 	bl	8008572 <memcpy>
 8004f4c:	bf00      	nop
 8004f4e:	3708      	adds	r7, #8
 8004f50:	46bd      	mov	sp, r7
 8004f52:	bd80      	pop	{r7, pc}

08004f54 <prvUnlockQueue>:
 8004f54:	b580      	push	{r7, lr}
 8004f56:	b084      	sub	sp, #16
 8004f58:	af00      	add	r7, sp, #0
 8004f5a:	6078      	str	r0, [r7, #4]
 8004f5c:	f002 f8ba 	bl	80070d4 <vPortEnterCritical>
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004f66:	73fb      	strb	r3, [r7, #15]
 8004f68:	e011      	b.n	8004f8e <prvUnlockQueue+0x3a>
 8004f6a:	687b      	ldr	r3, [r7, #4]
 8004f6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f6e:	2b00      	cmp	r3, #0
 8004f70:	d012      	beq.n	8004f98 <prvUnlockQueue+0x44>
 8004f72:	687b      	ldr	r3, [r7, #4]
 8004f74:	3324      	adds	r3, #36	; 0x24
 8004f76:	4618      	mov	r0, r3
 8004f78:	f000 ff4a 	bl	8005e10 <xTaskRemoveFromEventList>
 8004f7c:	4603      	mov	r3, r0
 8004f7e:	2b00      	cmp	r3, #0
 8004f80:	d001      	beq.n	8004f86 <prvUnlockQueue+0x32>
 8004f82:	f001 f821 	bl	8005fc8 <vTaskMissedYield>
 8004f86:	7bfb      	ldrb	r3, [r7, #15]
 8004f88:	3b01      	subs	r3, #1
 8004f8a:	b2db      	uxtb	r3, r3
 8004f8c:	73fb      	strb	r3, [r7, #15]
 8004f8e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004f92:	2b00      	cmp	r3, #0
 8004f94:	dce9      	bgt.n	8004f6a <prvUnlockQueue+0x16>
 8004f96:	e000      	b.n	8004f9a <prvUnlockQueue+0x46>
 8004f98:	bf00      	nop
 8004f9a:	687b      	ldr	r3, [r7, #4]
 8004f9c:	22ff      	movs	r2, #255	; 0xff
 8004f9e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004fa2:	f002 f8c7 	bl	8007134 <vPortExitCritical>
 8004fa6:	f002 f895 	bl	80070d4 <vPortEnterCritical>
 8004faa:	687b      	ldr	r3, [r7, #4]
 8004fac:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004fb0:	73bb      	strb	r3, [r7, #14]
 8004fb2:	e011      	b.n	8004fd8 <prvUnlockQueue+0x84>
 8004fb4:	687b      	ldr	r3, [r7, #4]
 8004fb6:	691b      	ldr	r3, [r3, #16]
 8004fb8:	2b00      	cmp	r3, #0
 8004fba:	d012      	beq.n	8004fe2 <prvUnlockQueue+0x8e>
 8004fbc:	687b      	ldr	r3, [r7, #4]
 8004fbe:	3310      	adds	r3, #16
 8004fc0:	4618      	mov	r0, r3
 8004fc2:	f000 ff25 	bl	8005e10 <xTaskRemoveFromEventList>
 8004fc6:	4603      	mov	r3, r0
 8004fc8:	2b00      	cmp	r3, #0
 8004fca:	d001      	beq.n	8004fd0 <prvUnlockQueue+0x7c>
 8004fcc:	f000 fffc 	bl	8005fc8 <vTaskMissedYield>
 8004fd0:	7bbb      	ldrb	r3, [r7, #14]
 8004fd2:	3b01      	subs	r3, #1
 8004fd4:	b2db      	uxtb	r3, r3
 8004fd6:	73bb      	strb	r3, [r7, #14]
 8004fd8:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8004fdc:	2b00      	cmp	r3, #0
 8004fde:	dce9      	bgt.n	8004fb4 <prvUnlockQueue+0x60>
 8004fe0:	e000      	b.n	8004fe4 <prvUnlockQueue+0x90>
 8004fe2:	bf00      	nop
 8004fe4:	687b      	ldr	r3, [r7, #4]
 8004fe6:	22ff      	movs	r2, #255	; 0xff
 8004fe8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004fec:	f002 f8a2 	bl	8007134 <vPortExitCritical>
 8004ff0:	bf00      	nop
 8004ff2:	3710      	adds	r7, #16
 8004ff4:	46bd      	mov	sp, r7
 8004ff6:	bd80      	pop	{r7, pc}

08004ff8 <prvIsQueueEmpty>:
 8004ff8:	b580      	push	{r7, lr}
 8004ffa:	b084      	sub	sp, #16
 8004ffc:	af00      	add	r7, sp, #0
 8004ffe:	6078      	str	r0, [r7, #4]
 8005000:	f002 f868 	bl	80070d4 <vPortEnterCritical>
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005008:	2b00      	cmp	r3, #0
 800500a:	d102      	bne.n	8005012 <prvIsQueueEmpty+0x1a>
 800500c:	2301      	movs	r3, #1
 800500e:	60fb      	str	r3, [r7, #12]
 8005010:	e001      	b.n	8005016 <prvIsQueueEmpty+0x1e>
 8005012:	2300      	movs	r3, #0
 8005014:	60fb      	str	r3, [r7, #12]
 8005016:	f002 f88d 	bl	8007134 <vPortExitCritical>
 800501a:	68fb      	ldr	r3, [r7, #12]
 800501c:	4618      	mov	r0, r3
 800501e:	3710      	adds	r7, #16
 8005020:	46bd      	mov	sp, r7
 8005022:	bd80      	pop	{r7, pc}

08005024 <prvIsQueueFull>:
 8005024:	b580      	push	{r7, lr}
 8005026:	b084      	sub	sp, #16
 8005028:	af00      	add	r7, sp, #0
 800502a:	6078      	str	r0, [r7, #4]
 800502c:	f002 f852 	bl	80070d4 <vPortEnterCritical>
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005038:	429a      	cmp	r2, r3
 800503a:	d102      	bne.n	8005042 <prvIsQueueFull+0x1e>
 800503c:	2301      	movs	r3, #1
 800503e:	60fb      	str	r3, [r7, #12]
 8005040:	e001      	b.n	8005046 <prvIsQueueFull+0x22>
 8005042:	2300      	movs	r3, #0
 8005044:	60fb      	str	r3, [r7, #12]
 8005046:	f002 f875 	bl	8007134 <vPortExitCritical>
 800504a:	68fb      	ldr	r3, [r7, #12]
 800504c:	4618      	mov	r0, r3
 800504e:	3710      	adds	r7, #16
 8005050:	46bd      	mov	sp, r7
 8005052:	bd80      	pop	{r7, pc}

08005054 <vQueueAddToRegistry>:
 8005054:	b480      	push	{r7}
 8005056:	b085      	sub	sp, #20
 8005058:	af00      	add	r7, sp, #0
 800505a:	6078      	str	r0, [r7, #4]
 800505c:	6039      	str	r1, [r7, #0]
 800505e:	2300      	movs	r3, #0
 8005060:	60fb      	str	r3, [r7, #12]
 8005062:	e014      	b.n	800508e <vQueueAddToRegistry+0x3a>
 8005064:	4a0f      	ldr	r2, [pc, #60]	; (80050a4 <vQueueAddToRegistry+0x50>)
 8005066:	68fb      	ldr	r3, [r7, #12]
 8005068:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 800506c:	2b00      	cmp	r3, #0
 800506e:	d10b      	bne.n	8005088 <vQueueAddToRegistry+0x34>
 8005070:	490c      	ldr	r1, [pc, #48]	; (80050a4 <vQueueAddToRegistry+0x50>)
 8005072:	68fb      	ldr	r3, [r7, #12]
 8005074:	683a      	ldr	r2, [r7, #0]
 8005076:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 800507a:	4a0a      	ldr	r2, [pc, #40]	; (80050a4 <vQueueAddToRegistry+0x50>)
 800507c:	68fb      	ldr	r3, [r7, #12]
 800507e:	00db      	lsls	r3, r3, #3
 8005080:	4413      	add	r3, r2
 8005082:	687a      	ldr	r2, [r7, #4]
 8005084:	605a      	str	r2, [r3, #4]
 8005086:	e006      	b.n	8005096 <vQueueAddToRegistry+0x42>
 8005088:	68fb      	ldr	r3, [r7, #12]
 800508a:	3301      	adds	r3, #1
 800508c:	60fb      	str	r3, [r7, #12]
 800508e:	68fb      	ldr	r3, [r7, #12]
 8005090:	2b07      	cmp	r3, #7
 8005092:	d9e7      	bls.n	8005064 <vQueueAddToRegistry+0x10>
 8005094:	bf00      	nop
 8005096:	bf00      	nop
 8005098:	3714      	adds	r7, #20
 800509a:	46bd      	mov	sp, r7
 800509c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050a0:	4770      	bx	lr
 80050a2:	bf00      	nop
 80050a4:	20000b9c 	.word	0x20000b9c

080050a8 <vQueueWaitForMessageRestricted>:
 80050a8:	b580      	push	{r7, lr}
 80050aa:	b086      	sub	sp, #24
 80050ac:	af00      	add	r7, sp, #0
 80050ae:	60f8      	str	r0, [r7, #12]
 80050b0:	60b9      	str	r1, [r7, #8]
 80050b2:	607a      	str	r2, [r7, #4]
 80050b4:	68fb      	ldr	r3, [r7, #12]
 80050b6:	617b      	str	r3, [r7, #20]
 80050b8:	f002 f80c 	bl	80070d4 <vPortEnterCritical>
 80050bc:	697b      	ldr	r3, [r7, #20]
 80050be:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80050c2:	b25b      	sxtb	r3, r3
 80050c4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80050c8:	d103      	bne.n	80050d2 <vQueueWaitForMessageRestricted+0x2a>
 80050ca:	697b      	ldr	r3, [r7, #20]
 80050cc:	2200      	movs	r2, #0
 80050ce:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80050d2:	697b      	ldr	r3, [r7, #20]
 80050d4:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80050d8:	b25b      	sxtb	r3, r3
 80050da:	f1b3 3fff 	cmp.w	r3, #4294967295
 80050de:	d103      	bne.n	80050e8 <vQueueWaitForMessageRestricted+0x40>
 80050e0:	697b      	ldr	r3, [r7, #20]
 80050e2:	2200      	movs	r2, #0
 80050e4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80050e8:	f002 f824 	bl	8007134 <vPortExitCritical>
 80050ec:	697b      	ldr	r3, [r7, #20]
 80050ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050f0:	2b00      	cmp	r3, #0
 80050f2:	d106      	bne.n	8005102 <vQueueWaitForMessageRestricted+0x5a>
 80050f4:	697b      	ldr	r3, [r7, #20]
 80050f6:	3324      	adds	r3, #36	; 0x24
 80050f8:	687a      	ldr	r2, [r7, #4]
 80050fa:	68b9      	ldr	r1, [r7, #8]
 80050fc:	4618      	mov	r0, r3
 80050fe:	f000 fe5b 	bl	8005db8 <vTaskPlaceOnEventListRestricted>
 8005102:	6978      	ldr	r0, [r7, #20]
 8005104:	f7ff ff26 	bl	8004f54 <prvUnlockQueue>
 8005108:	bf00      	nop
 800510a:	3718      	adds	r7, #24
 800510c:	46bd      	mov	sp, r7
 800510e:	bd80      	pop	{r7, pc}

08005110 <xTaskCreateStatic>:
 8005110:	b580      	push	{r7, lr}
 8005112:	b08e      	sub	sp, #56	; 0x38
 8005114:	af04      	add	r7, sp, #16
 8005116:	60f8      	str	r0, [r7, #12]
 8005118:	60b9      	str	r1, [r7, #8]
 800511a:	607a      	str	r2, [r7, #4]
 800511c:	603b      	str	r3, [r7, #0]
 800511e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005120:	2b00      	cmp	r3, #0
 8005122:	d10a      	bne.n	800513a <xTaskCreateStatic+0x2a>
 8005124:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005128:	f383 8811 	msr	BASEPRI, r3
 800512c:	f3bf 8f6f 	isb	sy
 8005130:	f3bf 8f4f 	dsb	sy
 8005134:	623b      	str	r3, [r7, #32]
 8005136:	bf00      	nop
 8005138:	e7fe      	b.n	8005138 <xTaskCreateStatic+0x28>
 800513a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800513c:	2b00      	cmp	r3, #0
 800513e:	d10a      	bne.n	8005156 <xTaskCreateStatic+0x46>
 8005140:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005144:	f383 8811 	msr	BASEPRI, r3
 8005148:	f3bf 8f6f 	isb	sy
 800514c:	f3bf 8f4f 	dsb	sy
 8005150:	61fb      	str	r3, [r7, #28]
 8005152:	bf00      	nop
 8005154:	e7fe      	b.n	8005154 <xTaskCreateStatic+0x44>
 8005156:	23ac      	movs	r3, #172	; 0xac
 8005158:	613b      	str	r3, [r7, #16]
 800515a:	693b      	ldr	r3, [r7, #16]
 800515c:	2bac      	cmp	r3, #172	; 0xac
 800515e:	d00a      	beq.n	8005176 <xTaskCreateStatic+0x66>
 8005160:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005164:	f383 8811 	msr	BASEPRI, r3
 8005168:	f3bf 8f6f 	isb	sy
 800516c:	f3bf 8f4f 	dsb	sy
 8005170:	61bb      	str	r3, [r7, #24]
 8005172:	bf00      	nop
 8005174:	e7fe      	b.n	8005174 <xTaskCreateStatic+0x64>
 8005176:	693b      	ldr	r3, [r7, #16]
 8005178:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800517a:	2b00      	cmp	r3, #0
 800517c:	d01e      	beq.n	80051bc <xTaskCreateStatic+0xac>
 800517e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005180:	2b00      	cmp	r3, #0
 8005182:	d01b      	beq.n	80051bc <xTaskCreateStatic+0xac>
 8005184:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005186:	627b      	str	r3, [r7, #36]	; 0x24
 8005188:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800518a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800518c:	631a      	str	r2, [r3, #48]	; 0x30
 800518e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005190:	2202      	movs	r2, #2
 8005192:	f883 20a9 	strb.w	r2, [r3, #169]	; 0xa9
 8005196:	2300      	movs	r3, #0
 8005198:	9303      	str	r3, [sp, #12]
 800519a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800519c:	9302      	str	r3, [sp, #8]
 800519e:	f107 0314 	add.w	r3, r7, #20
 80051a2:	9301      	str	r3, [sp, #4]
 80051a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80051a6:	9300      	str	r3, [sp, #0]
 80051a8:	683b      	ldr	r3, [r7, #0]
 80051aa:	687a      	ldr	r2, [r7, #4]
 80051ac:	68b9      	ldr	r1, [r7, #8]
 80051ae:	68f8      	ldr	r0, [r7, #12]
 80051b0:	f000 f850 	bl	8005254 <prvInitialiseNewTask>
 80051b4:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80051b6:	f000 f903 	bl	80053c0 <prvAddNewTaskToReadyList>
 80051ba:	e001      	b.n	80051c0 <xTaskCreateStatic+0xb0>
 80051bc:	2300      	movs	r3, #0
 80051be:	617b      	str	r3, [r7, #20]
 80051c0:	697b      	ldr	r3, [r7, #20]
 80051c2:	4618      	mov	r0, r3
 80051c4:	3728      	adds	r7, #40	; 0x28
 80051c6:	46bd      	mov	sp, r7
 80051c8:	bd80      	pop	{r7, pc}

080051ca <xTaskCreate>:
 80051ca:	b580      	push	{r7, lr}
 80051cc:	b08c      	sub	sp, #48	; 0x30
 80051ce:	af04      	add	r7, sp, #16
 80051d0:	60f8      	str	r0, [r7, #12]
 80051d2:	60b9      	str	r1, [r7, #8]
 80051d4:	603b      	str	r3, [r7, #0]
 80051d6:	4613      	mov	r3, r2
 80051d8:	80fb      	strh	r3, [r7, #6]
 80051da:	88fb      	ldrh	r3, [r7, #6]
 80051dc:	009b      	lsls	r3, r3, #2
 80051de:	4618      	mov	r0, r3
 80051e0:	f002 f89a 	bl	8007318 <pvPortMalloc>
 80051e4:	6178      	str	r0, [r7, #20]
 80051e6:	697b      	ldr	r3, [r7, #20]
 80051e8:	2b00      	cmp	r3, #0
 80051ea:	d00e      	beq.n	800520a <xTaskCreate+0x40>
 80051ec:	20ac      	movs	r0, #172	; 0xac
 80051ee:	f002 f893 	bl	8007318 <pvPortMalloc>
 80051f2:	61f8      	str	r0, [r7, #28]
 80051f4:	69fb      	ldr	r3, [r7, #28]
 80051f6:	2b00      	cmp	r3, #0
 80051f8:	d003      	beq.n	8005202 <xTaskCreate+0x38>
 80051fa:	69fb      	ldr	r3, [r7, #28]
 80051fc:	697a      	ldr	r2, [r7, #20]
 80051fe:	631a      	str	r2, [r3, #48]	; 0x30
 8005200:	e005      	b.n	800520e <xTaskCreate+0x44>
 8005202:	6978      	ldr	r0, [r7, #20]
 8005204:	f002 f954 	bl	80074b0 <vPortFree>
 8005208:	e001      	b.n	800520e <xTaskCreate+0x44>
 800520a:	2300      	movs	r3, #0
 800520c:	61fb      	str	r3, [r7, #28]
 800520e:	69fb      	ldr	r3, [r7, #28]
 8005210:	2b00      	cmp	r3, #0
 8005212:	d017      	beq.n	8005244 <xTaskCreate+0x7a>
 8005214:	69fb      	ldr	r3, [r7, #28]
 8005216:	2200      	movs	r2, #0
 8005218:	f883 20a9 	strb.w	r2, [r3, #169]	; 0xa9
 800521c:	88fa      	ldrh	r2, [r7, #6]
 800521e:	2300      	movs	r3, #0
 8005220:	9303      	str	r3, [sp, #12]
 8005222:	69fb      	ldr	r3, [r7, #28]
 8005224:	9302      	str	r3, [sp, #8]
 8005226:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005228:	9301      	str	r3, [sp, #4]
 800522a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800522c:	9300      	str	r3, [sp, #0]
 800522e:	683b      	ldr	r3, [r7, #0]
 8005230:	68b9      	ldr	r1, [r7, #8]
 8005232:	68f8      	ldr	r0, [r7, #12]
 8005234:	f000 f80e 	bl	8005254 <prvInitialiseNewTask>
 8005238:	69f8      	ldr	r0, [r7, #28]
 800523a:	f000 f8c1 	bl	80053c0 <prvAddNewTaskToReadyList>
 800523e:	2301      	movs	r3, #1
 8005240:	61bb      	str	r3, [r7, #24]
 8005242:	e002      	b.n	800524a <xTaskCreate+0x80>
 8005244:	f04f 33ff 	mov.w	r3, #4294967295
 8005248:	61bb      	str	r3, [r7, #24]
 800524a:	69bb      	ldr	r3, [r7, #24]
 800524c:	4618      	mov	r0, r3
 800524e:	3720      	adds	r7, #32
 8005250:	46bd      	mov	sp, r7
 8005252:	bd80      	pop	{r7, pc}

08005254 <prvInitialiseNewTask>:
 8005254:	b580      	push	{r7, lr}
 8005256:	b088      	sub	sp, #32
 8005258:	af00      	add	r7, sp, #0
 800525a:	60f8      	str	r0, [r7, #12]
 800525c:	60b9      	str	r1, [r7, #8]
 800525e:	607a      	str	r2, [r7, #4]
 8005260:	603b      	str	r3, [r7, #0]
 8005262:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005264:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8005266:	687b      	ldr	r3, [r7, #4]
 8005268:	009b      	lsls	r3, r3, #2
 800526a:	461a      	mov	r2, r3
 800526c:	21a5      	movs	r1, #165	; 0xa5
 800526e:	f003 f8ab 	bl	80083c8 <memset>
 8005272:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005274:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800527c:	3b01      	subs	r3, #1
 800527e:	009b      	lsls	r3, r3, #2
 8005280:	4413      	add	r3, r2
 8005282:	61bb      	str	r3, [r7, #24]
 8005284:	69bb      	ldr	r3, [r7, #24]
 8005286:	f023 0307 	bic.w	r3, r3, #7
 800528a:	61bb      	str	r3, [r7, #24]
 800528c:	69bb      	ldr	r3, [r7, #24]
 800528e:	f003 0307 	and.w	r3, r3, #7
 8005292:	2b00      	cmp	r3, #0
 8005294:	d00a      	beq.n	80052ac <prvInitialiseNewTask+0x58>
 8005296:	f04f 0350 	mov.w	r3, #80	; 0x50
 800529a:	f383 8811 	msr	BASEPRI, r3
 800529e:	f3bf 8f6f 	isb	sy
 80052a2:	f3bf 8f4f 	dsb	sy
 80052a6:	617b      	str	r3, [r7, #20]
 80052a8:	bf00      	nop
 80052aa:	e7fe      	b.n	80052aa <prvInitialiseNewTask+0x56>
 80052ac:	68bb      	ldr	r3, [r7, #8]
 80052ae:	2b00      	cmp	r3, #0
 80052b0:	d01f      	beq.n	80052f2 <prvInitialiseNewTask+0x9e>
 80052b2:	2300      	movs	r3, #0
 80052b4:	61fb      	str	r3, [r7, #28]
 80052b6:	e012      	b.n	80052de <prvInitialiseNewTask+0x8a>
 80052b8:	68ba      	ldr	r2, [r7, #8]
 80052ba:	69fb      	ldr	r3, [r7, #28]
 80052bc:	4413      	add	r3, r2
 80052be:	7819      	ldrb	r1, [r3, #0]
 80052c0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80052c2:	69fb      	ldr	r3, [r7, #28]
 80052c4:	4413      	add	r3, r2
 80052c6:	3334      	adds	r3, #52	; 0x34
 80052c8:	460a      	mov	r2, r1
 80052ca:	701a      	strb	r2, [r3, #0]
 80052cc:	68ba      	ldr	r2, [r7, #8]
 80052ce:	69fb      	ldr	r3, [r7, #28]
 80052d0:	4413      	add	r3, r2
 80052d2:	781b      	ldrb	r3, [r3, #0]
 80052d4:	2b00      	cmp	r3, #0
 80052d6:	d006      	beq.n	80052e6 <prvInitialiseNewTask+0x92>
 80052d8:	69fb      	ldr	r3, [r7, #28]
 80052da:	3301      	adds	r3, #1
 80052dc:	61fb      	str	r3, [r7, #28]
 80052de:	69fb      	ldr	r3, [r7, #28]
 80052e0:	2b0f      	cmp	r3, #15
 80052e2:	d9e9      	bls.n	80052b8 <prvInitialiseNewTask+0x64>
 80052e4:	e000      	b.n	80052e8 <prvInitialiseNewTask+0x94>
 80052e6:	bf00      	nop
 80052e8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052ea:	2200      	movs	r2, #0
 80052ec:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80052f0:	e003      	b.n	80052fa <prvInitialiseNewTask+0xa6>
 80052f2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052f4:	2200      	movs	r2, #0
 80052f6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80052fa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80052fc:	2b37      	cmp	r3, #55	; 0x37
 80052fe:	d901      	bls.n	8005304 <prvInitialiseNewTask+0xb0>
 8005300:	2337      	movs	r3, #55	; 0x37
 8005302:	62bb      	str	r3, [r7, #40]	; 0x28
 8005304:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005306:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8005308:	62da      	str	r2, [r3, #44]	; 0x2c
 800530a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800530c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800530e:	64da      	str	r2, [r3, #76]	; 0x4c
 8005310:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005312:	2200      	movs	r2, #0
 8005314:	651a      	str	r2, [r3, #80]	; 0x50
 8005316:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005318:	3304      	adds	r3, #4
 800531a:	4618      	mov	r0, r3
 800531c:	f7fe ff64 	bl	80041e8 <vListInitialiseItem>
 8005320:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005322:	3318      	adds	r3, #24
 8005324:	4618      	mov	r0, r3
 8005326:	f7fe ff5f 	bl	80041e8 <vListInitialiseItem>
 800532a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800532c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800532e:	611a      	str	r2, [r3, #16]
 8005330:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005332:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8005336:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005338:	619a      	str	r2, [r3, #24]
 800533a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800533c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800533e:	625a      	str	r2, [r3, #36]	; 0x24
 8005340:	2300      	movs	r3, #0
 8005342:	61fb      	str	r3, [r7, #28]
 8005344:	e009      	b.n	800535a <prvInitialiseNewTask+0x106>
 8005346:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005348:	69fb      	ldr	r3, [r7, #28]
 800534a:	3314      	adds	r3, #20
 800534c:	009b      	lsls	r3, r3, #2
 800534e:	4413      	add	r3, r2
 8005350:	2200      	movs	r2, #0
 8005352:	605a      	str	r2, [r3, #4]
 8005354:	69fb      	ldr	r3, [r7, #28]
 8005356:	3301      	adds	r3, #1
 8005358:	61fb      	str	r3, [r7, #28]
 800535a:	69fb      	ldr	r3, [r7, #28]
 800535c:	2b00      	cmp	r3, #0
 800535e:	d0f2      	beq.n	8005346 <prvInitialiseNewTask+0xf2>
 8005360:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005362:	2200      	movs	r2, #0
 8005364:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8005368:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800536a:	2200      	movs	r2, #0
 800536c:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 8005370:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005372:	3358      	adds	r3, #88	; 0x58
 8005374:	224c      	movs	r2, #76	; 0x4c
 8005376:	2100      	movs	r1, #0
 8005378:	4618      	mov	r0, r3
 800537a:	f003 f825 	bl	80083c8 <memset>
 800537e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005380:	4a0c      	ldr	r2, [pc, #48]	; (80053b4 <prvInitialiseNewTask+0x160>)
 8005382:	65da      	str	r2, [r3, #92]	; 0x5c
 8005384:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005386:	4a0c      	ldr	r2, [pc, #48]	; (80053b8 <prvInitialiseNewTask+0x164>)
 8005388:	661a      	str	r2, [r3, #96]	; 0x60
 800538a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800538c:	4a0b      	ldr	r2, [pc, #44]	; (80053bc <prvInitialiseNewTask+0x168>)
 800538e:	665a      	str	r2, [r3, #100]	; 0x64
 8005390:	683a      	ldr	r2, [r7, #0]
 8005392:	68f9      	ldr	r1, [r7, #12]
 8005394:	69b8      	ldr	r0, [r7, #24]
 8005396:	f001 fd6d 	bl	8006e74 <pxPortInitialiseStack>
 800539a:	4602      	mov	r2, r0
 800539c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800539e:	601a      	str	r2, [r3, #0]
 80053a0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80053a2:	2b00      	cmp	r3, #0
 80053a4:	d002      	beq.n	80053ac <prvInitialiseNewTask+0x158>
 80053a6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80053a8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80053aa:	601a      	str	r2, [r3, #0]
 80053ac:	bf00      	nop
 80053ae:	3720      	adds	r7, #32
 80053b0:	46bd      	mov	sp, r7
 80053b2:	bd80      	pop	{r7, pc}
 80053b4:	20004e30 	.word	0x20004e30
 80053b8:	20004e98 	.word	0x20004e98
 80053bc:	20004f00 	.word	0x20004f00

080053c0 <prvAddNewTaskToReadyList>:
 80053c0:	b580      	push	{r7, lr}
 80053c2:	b082      	sub	sp, #8
 80053c4:	af00      	add	r7, sp, #0
 80053c6:	6078      	str	r0, [r7, #4]
 80053c8:	f001 fe84 	bl	80070d4 <vPortEnterCritical>
 80053cc:	4b2d      	ldr	r3, [pc, #180]	; (8005484 <prvAddNewTaskToReadyList+0xc4>)
 80053ce:	681b      	ldr	r3, [r3, #0]
 80053d0:	3301      	adds	r3, #1
 80053d2:	4a2c      	ldr	r2, [pc, #176]	; (8005484 <prvAddNewTaskToReadyList+0xc4>)
 80053d4:	6013      	str	r3, [r2, #0]
 80053d6:	4b2c      	ldr	r3, [pc, #176]	; (8005488 <prvAddNewTaskToReadyList+0xc8>)
 80053d8:	681b      	ldr	r3, [r3, #0]
 80053da:	2b00      	cmp	r3, #0
 80053dc:	d109      	bne.n	80053f2 <prvAddNewTaskToReadyList+0x32>
 80053de:	4a2a      	ldr	r2, [pc, #168]	; (8005488 <prvAddNewTaskToReadyList+0xc8>)
 80053e0:	687b      	ldr	r3, [r7, #4]
 80053e2:	6013      	str	r3, [r2, #0]
 80053e4:	4b27      	ldr	r3, [pc, #156]	; (8005484 <prvAddNewTaskToReadyList+0xc4>)
 80053e6:	681b      	ldr	r3, [r3, #0]
 80053e8:	2b01      	cmp	r3, #1
 80053ea:	d110      	bne.n	800540e <prvAddNewTaskToReadyList+0x4e>
 80053ec:	f000 fe64 	bl	80060b8 <prvInitialiseTaskLists>
 80053f0:	e00d      	b.n	800540e <prvAddNewTaskToReadyList+0x4e>
 80053f2:	4b26      	ldr	r3, [pc, #152]	; (800548c <prvAddNewTaskToReadyList+0xcc>)
 80053f4:	681b      	ldr	r3, [r3, #0]
 80053f6:	2b00      	cmp	r3, #0
 80053f8:	d109      	bne.n	800540e <prvAddNewTaskToReadyList+0x4e>
 80053fa:	4b23      	ldr	r3, [pc, #140]	; (8005488 <prvAddNewTaskToReadyList+0xc8>)
 80053fc:	681b      	ldr	r3, [r3, #0]
 80053fe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005400:	687b      	ldr	r3, [r7, #4]
 8005402:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005404:	429a      	cmp	r2, r3
 8005406:	d802      	bhi.n	800540e <prvAddNewTaskToReadyList+0x4e>
 8005408:	4a1f      	ldr	r2, [pc, #124]	; (8005488 <prvAddNewTaskToReadyList+0xc8>)
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	6013      	str	r3, [r2, #0]
 800540e:	4b20      	ldr	r3, [pc, #128]	; (8005490 <prvAddNewTaskToReadyList+0xd0>)
 8005410:	681b      	ldr	r3, [r3, #0]
 8005412:	3301      	adds	r3, #1
 8005414:	4a1e      	ldr	r2, [pc, #120]	; (8005490 <prvAddNewTaskToReadyList+0xd0>)
 8005416:	6013      	str	r3, [r2, #0]
 8005418:	4b1d      	ldr	r3, [pc, #116]	; (8005490 <prvAddNewTaskToReadyList+0xd0>)
 800541a:	681a      	ldr	r2, [r3, #0]
 800541c:	687b      	ldr	r3, [r7, #4]
 800541e:	645a      	str	r2, [r3, #68]	; 0x44
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005424:	4b1b      	ldr	r3, [pc, #108]	; (8005494 <prvAddNewTaskToReadyList+0xd4>)
 8005426:	681b      	ldr	r3, [r3, #0]
 8005428:	429a      	cmp	r2, r3
 800542a:	d903      	bls.n	8005434 <prvAddNewTaskToReadyList+0x74>
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005430:	4a18      	ldr	r2, [pc, #96]	; (8005494 <prvAddNewTaskToReadyList+0xd4>)
 8005432:	6013      	str	r3, [r2, #0]
 8005434:	687b      	ldr	r3, [r7, #4]
 8005436:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005438:	4613      	mov	r3, r2
 800543a:	009b      	lsls	r3, r3, #2
 800543c:	4413      	add	r3, r2
 800543e:	009b      	lsls	r3, r3, #2
 8005440:	4a15      	ldr	r2, [pc, #84]	; (8005498 <prvAddNewTaskToReadyList+0xd8>)
 8005442:	441a      	add	r2, r3
 8005444:	687b      	ldr	r3, [r7, #4]
 8005446:	3304      	adds	r3, #4
 8005448:	4619      	mov	r1, r3
 800544a:	4610      	mov	r0, r2
 800544c:	f7fe fed9 	bl	8004202 <vListInsertEnd>
 8005450:	f001 fe70 	bl	8007134 <vPortExitCritical>
 8005454:	4b0d      	ldr	r3, [pc, #52]	; (800548c <prvAddNewTaskToReadyList+0xcc>)
 8005456:	681b      	ldr	r3, [r3, #0]
 8005458:	2b00      	cmp	r3, #0
 800545a:	d00e      	beq.n	800547a <prvAddNewTaskToReadyList+0xba>
 800545c:	4b0a      	ldr	r3, [pc, #40]	; (8005488 <prvAddNewTaskToReadyList+0xc8>)
 800545e:	681b      	ldr	r3, [r3, #0]
 8005460:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005462:	687b      	ldr	r3, [r7, #4]
 8005464:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005466:	429a      	cmp	r2, r3
 8005468:	d207      	bcs.n	800547a <prvAddNewTaskToReadyList+0xba>
 800546a:	4b0c      	ldr	r3, [pc, #48]	; (800549c <prvAddNewTaskToReadyList+0xdc>)
 800546c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005470:	601a      	str	r2, [r3, #0]
 8005472:	f3bf 8f4f 	dsb	sy
 8005476:	f3bf 8f6f 	isb	sy
 800547a:	bf00      	nop
 800547c:	3708      	adds	r7, #8
 800547e:	46bd      	mov	sp, r7
 8005480:	bd80      	pop	{r7, pc}
 8005482:	bf00      	nop
 8005484:	200010b0 	.word	0x200010b0
 8005488:	20000bdc 	.word	0x20000bdc
 800548c:	200010bc 	.word	0x200010bc
 8005490:	200010cc 	.word	0x200010cc
 8005494:	200010b8 	.word	0x200010b8
 8005498:	20000be0 	.word	0x20000be0
 800549c:	e000ed04 	.word	0xe000ed04

080054a0 <vTaskDelete>:
 80054a0:	b580      	push	{r7, lr}
 80054a2:	b084      	sub	sp, #16
 80054a4:	af00      	add	r7, sp, #0
 80054a6:	6078      	str	r0, [r7, #4]
 80054a8:	f001 fe14 	bl	80070d4 <vPortEnterCritical>
 80054ac:	687b      	ldr	r3, [r7, #4]
 80054ae:	2b00      	cmp	r3, #0
 80054b0:	d102      	bne.n	80054b8 <vTaskDelete+0x18>
 80054b2:	4b2c      	ldr	r3, [pc, #176]	; (8005564 <vTaskDelete+0xc4>)
 80054b4:	681b      	ldr	r3, [r3, #0]
 80054b6:	e000      	b.n	80054ba <vTaskDelete+0x1a>
 80054b8:	687b      	ldr	r3, [r7, #4]
 80054ba:	60fb      	str	r3, [r7, #12]
 80054bc:	68fb      	ldr	r3, [r7, #12]
 80054be:	3304      	adds	r3, #4
 80054c0:	4618      	mov	r0, r3
 80054c2:	f7fe fefb 	bl	80042bc <uxListRemove>
 80054c6:	68fb      	ldr	r3, [r7, #12]
 80054c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80054ca:	2b00      	cmp	r3, #0
 80054cc:	d004      	beq.n	80054d8 <vTaskDelete+0x38>
 80054ce:	68fb      	ldr	r3, [r7, #12]
 80054d0:	3318      	adds	r3, #24
 80054d2:	4618      	mov	r0, r3
 80054d4:	f7fe fef2 	bl	80042bc <uxListRemove>
 80054d8:	4b23      	ldr	r3, [pc, #140]	; (8005568 <vTaskDelete+0xc8>)
 80054da:	681b      	ldr	r3, [r3, #0]
 80054dc:	3301      	adds	r3, #1
 80054de:	4a22      	ldr	r2, [pc, #136]	; (8005568 <vTaskDelete+0xc8>)
 80054e0:	6013      	str	r3, [r2, #0]
 80054e2:	4b20      	ldr	r3, [pc, #128]	; (8005564 <vTaskDelete+0xc4>)
 80054e4:	681b      	ldr	r3, [r3, #0]
 80054e6:	68fa      	ldr	r2, [r7, #12]
 80054e8:	429a      	cmp	r2, r3
 80054ea:	d10b      	bne.n	8005504 <vTaskDelete+0x64>
 80054ec:	68fb      	ldr	r3, [r7, #12]
 80054ee:	3304      	adds	r3, #4
 80054f0:	4619      	mov	r1, r3
 80054f2:	481e      	ldr	r0, [pc, #120]	; (800556c <vTaskDelete+0xcc>)
 80054f4:	f7fe fe85 	bl	8004202 <vListInsertEnd>
 80054f8:	4b1d      	ldr	r3, [pc, #116]	; (8005570 <vTaskDelete+0xd0>)
 80054fa:	681b      	ldr	r3, [r3, #0]
 80054fc:	3301      	adds	r3, #1
 80054fe:	4a1c      	ldr	r2, [pc, #112]	; (8005570 <vTaskDelete+0xd0>)
 8005500:	6013      	str	r3, [r2, #0]
 8005502:	e009      	b.n	8005518 <vTaskDelete+0x78>
 8005504:	4b1b      	ldr	r3, [pc, #108]	; (8005574 <vTaskDelete+0xd4>)
 8005506:	681b      	ldr	r3, [r3, #0]
 8005508:	3b01      	subs	r3, #1
 800550a:	4a1a      	ldr	r2, [pc, #104]	; (8005574 <vTaskDelete+0xd4>)
 800550c:	6013      	str	r3, [r2, #0]
 800550e:	68f8      	ldr	r0, [r7, #12]
 8005510:	f000 fe40 	bl	8006194 <prvDeleteTCB>
 8005514:	f000 fe72 	bl	80061fc <prvResetNextTaskUnblockTime>
 8005518:	f001 fe0c 	bl	8007134 <vPortExitCritical>
 800551c:	4b16      	ldr	r3, [pc, #88]	; (8005578 <vTaskDelete+0xd8>)
 800551e:	681b      	ldr	r3, [r3, #0]
 8005520:	2b00      	cmp	r3, #0
 8005522:	d01b      	beq.n	800555c <vTaskDelete+0xbc>
 8005524:	4b0f      	ldr	r3, [pc, #60]	; (8005564 <vTaskDelete+0xc4>)
 8005526:	681b      	ldr	r3, [r3, #0]
 8005528:	68fa      	ldr	r2, [r7, #12]
 800552a:	429a      	cmp	r2, r3
 800552c:	d116      	bne.n	800555c <vTaskDelete+0xbc>
 800552e:	4b13      	ldr	r3, [pc, #76]	; (800557c <vTaskDelete+0xdc>)
 8005530:	681b      	ldr	r3, [r3, #0]
 8005532:	2b00      	cmp	r3, #0
 8005534:	d00a      	beq.n	800554c <vTaskDelete+0xac>
 8005536:	f04f 0350 	mov.w	r3, #80	; 0x50
 800553a:	f383 8811 	msr	BASEPRI, r3
 800553e:	f3bf 8f6f 	isb	sy
 8005542:	f3bf 8f4f 	dsb	sy
 8005546:	60bb      	str	r3, [r7, #8]
 8005548:	bf00      	nop
 800554a:	e7fe      	b.n	800554a <vTaskDelete+0xaa>
 800554c:	4b0c      	ldr	r3, [pc, #48]	; (8005580 <vTaskDelete+0xe0>)
 800554e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005552:	601a      	str	r2, [r3, #0]
 8005554:	f3bf 8f4f 	dsb	sy
 8005558:	f3bf 8f6f 	isb	sy
 800555c:	bf00      	nop
 800555e:	3710      	adds	r7, #16
 8005560:	46bd      	mov	sp, r7
 8005562:	bd80      	pop	{r7, pc}
 8005564:	20000bdc 	.word	0x20000bdc
 8005568:	200010cc 	.word	0x200010cc
 800556c:	20001084 	.word	0x20001084
 8005570:	20001098 	.word	0x20001098
 8005574:	200010b0 	.word	0x200010b0
 8005578:	200010bc 	.word	0x200010bc
 800557c:	200010d8 	.word	0x200010d8
 8005580:	e000ed04 	.word	0xe000ed04

08005584 <vTaskDelayUntil>:
 8005584:	b580      	push	{r7, lr}
 8005586:	b08a      	sub	sp, #40	; 0x28
 8005588:	af00      	add	r7, sp, #0
 800558a:	6078      	str	r0, [r7, #4]
 800558c:	6039      	str	r1, [r7, #0]
 800558e:	2300      	movs	r3, #0
 8005590:	627b      	str	r3, [r7, #36]	; 0x24
 8005592:	687b      	ldr	r3, [r7, #4]
 8005594:	2b00      	cmp	r3, #0
 8005596:	d10a      	bne.n	80055ae <vTaskDelayUntil+0x2a>
 8005598:	f04f 0350 	mov.w	r3, #80	; 0x50
 800559c:	f383 8811 	msr	BASEPRI, r3
 80055a0:	f3bf 8f6f 	isb	sy
 80055a4:	f3bf 8f4f 	dsb	sy
 80055a8:	617b      	str	r3, [r7, #20]
 80055aa:	bf00      	nop
 80055ac:	e7fe      	b.n	80055ac <vTaskDelayUntil+0x28>
 80055ae:	683b      	ldr	r3, [r7, #0]
 80055b0:	2b00      	cmp	r3, #0
 80055b2:	d10a      	bne.n	80055ca <vTaskDelayUntil+0x46>
 80055b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80055b8:	f383 8811 	msr	BASEPRI, r3
 80055bc:	f3bf 8f6f 	isb	sy
 80055c0:	f3bf 8f4f 	dsb	sy
 80055c4:	613b      	str	r3, [r7, #16]
 80055c6:	bf00      	nop
 80055c8:	e7fe      	b.n	80055c8 <vTaskDelayUntil+0x44>
 80055ca:	4b2a      	ldr	r3, [pc, #168]	; (8005674 <vTaskDelayUntil+0xf0>)
 80055cc:	681b      	ldr	r3, [r3, #0]
 80055ce:	2b00      	cmp	r3, #0
 80055d0:	d00a      	beq.n	80055e8 <vTaskDelayUntil+0x64>
 80055d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80055d6:	f383 8811 	msr	BASEPRI, r3
 80055da:	f3bf 8f6f 	isb	sy
 80055de:	f3bf 8f4f 	dsb	sy
 80055e2:	60fb      	str	r3, [r7, #12]
 80055e4:	bf00      	nop
 80055e6:	e7fe      	b.n	80055e6 <vTaskDelayUntil+0x62>
 80055e8:	f000 f9c0 	bl	800596c <vTaskSuspendAll>
 80055ec:	4b22      	ldr	r3, [pc, #136]	; (8005678 <vTaskDelayUntil+0xf4>)
 80055ee:	681b      	ldr	r3, [r3, #0]
 80055f0:	623b      	str	r3, [r7, #32]
 80055f2:	687b      	ldr	r3, [r7, #4]
 80055f4:	681b      	ldr	r3, [r3, #0]
 80055f6:	683a      	ldr	r2, [r7, #0]
 80055f8:	4413      	add	r3, r2
 80055fa:	61fb      	str	r3, [r7, #28]
 80055fc:	687b      	ldr	r3, [r7, #4]
 80055fe:	681b      	ldr	r3, [r3, #0]
 8005600:	6a3a      	ldr	r2, [r7, #32]
 8005602:	429a      	cmp	r2, r3
 8005604:	d20b      	bcs.n	800561e <vTaskDelayUntil+0x9a>
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	681b      	ldr	r3, [r3, #0]
 800560a:	69fa      	ldr	r2, [r7, #28]
 800560c:	429a      	cmp	r2, r3
 800560e:	d211      	bcs.n	8005634 <vTaskDelayUntil+0xb0>
 8005610:	69fa      	ldr	r2, [r7, #28]
 8005612:	6a3b      	ldr	r3, [r7, #32]
 8005614:	429a      	cmp	r2, r3
 8005616:	d90d      	bls.n	8005634 <vTaskDelayUntil+0xb0>
 8005618:	2301      	movs	r3, #1
 800561a:	627b      	str	r3, [r7, #36]	; 0x24
 800561c:	e00a      	b.n	8005634 <vTaskDelayUntil+0xb0>
 800561e:	687b      	ldr	r3, [r7, #4]
 8005620:	681b      	ldr	r3, [r3, #0]
 8005622:	69fa      	ldr	r2, [r7, #28]
 8005624:	429a      	cmp	r2, r3
 8005626:	d303      	bcc.n	8005630 <vTaskDelayUntil+0xac>
 8005628:	69fa      	ldr	r2, [r7, #28]
 800562a:	6a3b      	ldr	r3, [r7, #32]
 800562c:	429a      	cmp	r2, r3
 800562e:	d901      	bls.n	8005634 <vTaskDelayUntil+0xb0>
 8005630:	2301      	movs	r3, #1
 8005632:	627b      	str	r3, [r7, #36]	; 0x24
 8005634:	687b      	ldr	r3, [r7, #4]
 8005636:	69fa      	ldr	r2, [r7, #28]
 8005638:	601a      	str	r2, [r3, #0]
 800563a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800563c:	2b00      	cmp	r3, #0
 800563e:	d006      	beq.n	800564e <vTaskDelayUntil+0xca>
 8005640:	69fa      	ldr	r2, [r7, #28]
 8005642:	6a3b      	ldr	r3, [r7, #32]
 8005644:	1ad3      	subs	r3, r2, r3
 8005646:	2100      	movs	r1, #0
 8005648:	4618      	mov	r0, r3
 800564a:	f001 f871 	bl	8006730 <prvAddCurrentTaskToDelayedList>
 800564e:	f000 f99b 	bl	8005988 <xTaskResumeAll>
 8005652:	61b8      	str	r0, [r7, #24]
 8005654:	69bb      	ldr	r3, [r7, #24]
 8005656:	2b00      	cmp	r3, #0
 8005658:	d107      	bne.n	800566a <vTaskDelayUntil+0xe6>
 800565a:	4b08      	ldr	r3, [pc, #32]	; (800567c <vTaskDelayUntil+0xf8>)
 800565c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005660:	601a      	str	r2, [r3, #0]
 8005662:	f3bf 8f4f 	dsb	sy
 8005666:	f3bf 8f6f 	isb	sy
 800566a:	bf00      	nop
 800566c:	3728      	adds	r7, #40	; 0x28
 800566e:	46bd      	mov	sp, r7
 8005670:	bd80      	pop	{r7, pc}
 8005672:	bf00      	nop
 8005674:	200010d8 	.word	0x200010d8
 8005678:	200010b4 	.word	0x200010b4
 800567c:	e000ed04 	.word	0xe000ed04

08005680 <vTaskSuspend>:
 8005680:	b580      	push	{r7, lr}
 8005682:	b084      	sub	sp, #16
 8005684:	af00      	add	r7, sp, #0
 8005686:	6078      	str	r0, [r7, #4]
 8005688:	f001 fd24 	bl	80070d4 <vPortEnterCritical>
 800568c:	687b      	ldr	r3, [r7, #4]
 800568e:	2b00      	cmp	r3, #0
 8005690:	d102      	bne.n	8005698 <vTaskSuspend+0x18>
 8005692:	4b30      	ldr	r3, [pc, #192]	; (8005754 <vTaskSuspend+0xd4>)
 8005694:	681b      	ldr	r3, [r3, #0]
 8005696:	e000      	b.n	800569a <vTaskSuspend+0x1a>
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	60fb      	str	r3, [r7, #12]
 800569c:	68fb      	ldr	r3, [r7, #12]
 800569e:	3304      	adds	r3, #4
 80056a0:	4618      	mov	r0, r3
 80056a2:	f7fe fe0b 	bl	80042bc <uxListRemove>
 80056a6:	68fb      	ldr	r3, [r7, #12]
 80056a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80056aa:	2b00      	cmp	r3, #0
 80056ac:	d004      	beq.n	80056b8 <vTaskSuspend+0x38>
 80056ae:	68fb      	ldr	r3, [r7, #12]
 80056b0:	3318      	adds	r3, #24
 80056b2:	4618      	mov	r0, r3
 80056b4:	f7fe fe02 	bl	80042bc <uxListRemove>
 80056b8:	68fb      	ldr	r3, [r7, #12]
 80056ba:	3304      	adds	r3, #4
 80056bc:	4619      	mov	r1, r3
 80056be:	4826      	ldr	r0, [pc, #152]	; (8005758 <vTaskSuspend+0xd8>)
 80056c0:	f7fe fd9f 	bl	8004202 <vListInsertEnd>
 80056c4:	68fb      	ldr	r3, [r7, #12]
 80056c6:	f893 30a8 	ldrb.w	r3, [r3, #168]	; 0xa8
 80056ca:	b2db      	uxtb	r3, r3
 80056cc:	2b01      	cmp	r3, #1
 80056ce:	d103      	bne.n	80056d8 <vTaskSuspend+0x58>
 80056d0:	68fb      	ldr	r3, [r7, #12]
 80056d2:	2200      	movs	r2, #0
 80056d4:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 80056d8:	f001 fd2c 	bl	8007134 <vPortExitCritical>
 80056dc:	4b1f      	ldr	r3, [pc, #124]	; (800575c <vTaskSuspend+0xdc>)
 80056de:	681b      	ldr	r3, [r3, #0]
 80056e0:	2b00      	cmp	r3, #0
 80056e2:	d005      	beq.n	80056f0 <vTaskSuspend+0x70>
 80056e4:	f001 fcf6 	bl	80070d4 <vPortEnterCritical>
 80056e8:	f000 fd88 	bl	80061fc <prvResetNextTaskUnblockTime>
 80056ec:	f001 fd22 	bl	8007134 <vPortExitCritical>
 80056f0:	4b18      	ldr	r3, [pc, #96]	; (8005754 <vTaskSuspend+0xd4>)
 80056f2:	681b      	ldr	r3, [r3, #0]
 80056f4:	68fa      	ldr	r2, [r7, #12]
 80056f6:	429a      	cmp	r2, r3
 80056f8:	d127      	bne.n	800574a <vTaskSuspend+0xca>
 80056fa:	4b18      	ldr	r3, [pc, #96]	; (800575c <vTaskSuspend+0xdc>)
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	2b00      	cmp	r3, #0
 8005700:	d017      	beq.n	8005732 <vTaskSuspend+0xb2>
 8005702:	4b17      	ldr	r3, [pc, #92]	; (8005760 <vTaskSuspend+0xe0>)
 8005704:	681b      	ldr	r3, [r3, #0]
 8005706:	2b00      	cmp	r3, #0
 8005708:	d00a      	beq.n	8005720 <vTaskSuspend+0xa0>
 800570a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800570e:	f383 8811 	msr	BASEPRI, r3
 8005712:	f3bf 8f6f 	isb	sy
 8005716:	f3bf 8f4f 	dsb	sy
 800571a:	60bb      	str	r3, [r7, #8]
 800571c:	bf00      	nop
 800571e:	e7fe      	b.n	800571e <vTaskSuspend+0x9e>
 8005720:	4b10      	ldr	r3, [pc, #64]	; (8005764 <vTaskSuspend+0xe4>)
 8005722:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005726:	601a      	str	r2, [r3, #0]
 8005728:	f3bf 8f4f 	dsb	sy
 800572c:	f3bf 8f6f 	isb	sy
 8005730:	e00b      	b.n	800574a <vTaskSuspend+0xca>
 8005732:	4b09      	ldr	r3, [pc, #36]	; (8005758 <vTaskSuspend+0xd8>)
 8005734:	681a      	ldr	r2, [r3, #0]
 8005736:	4b0c      	ldr	r3, [pc, #48]	; (8005768 <vTaskSuspend+0xe8>)
 8005738:	681b      	ldr	r3, [r3, #0]
 800573a:	429a      	cmp	r2, r3
 800573c:	d103      	bne.n	8005746 <vTaskSuspend+0xc6>
 800573e:	4b05      	ldr	r3, [pc, #20]	; (8005754 <vTaskSuspend+0xd4>)
 8005740:	2200      	movs	r2, #0
 8005742:	601a      	str	r2, [r3, #0]
 8005744:	e001      	b.n	800574a <vTaskSuspend+0xca>
 8005746:	f000 faaf 	bl	8005ca8 <vTaskSwitchContext>
 800574a:	bf00      	nop
 800574c:	3710      	adds	r7, #16
 800574e:	46bd      	mov	sp, r7
 8005750:	bd80      	pop	{r7, pc}
 8005752:	bf00      	nop
 8005754:	20000bdc 	.word	0x20000bdc
 8005758:	2000109c 	.word	0x2000109c
 800575c:	200010bc 	.word	0x200010bc
 8005760:	200010d8 	.word	0x200010d8
 8005764:	e000ed04 	.word	0xe000ed04
 8005768:	200010b0 	.word	0x200010b0

0800576c <prvTaskIsTaskSuspended>:
 800576c:	b480      	push	{r7}
 800576e:	b087      	sub	sp, #28
 8005770:	af00      	add	r7, sp, #0
 8005772:	6078      	str	r0, [r7, #4]
 8005774:	2300      	movs	r3, #0
 8005776:	617b      	str	r3, [r7, #20]
 8005778:	687b      	ldr	r3, [r7, #4]
 800577a:	613b      	str	r3, [r7, #16]
 800577c:	687b      	ldr	r3, [r7, #4]
 800577e:	2b00      	cmp	r3, #0
 8005780:	d10a      	bne.n	8005798 <prvTaskIsTaskSuspended+0x2c>
 8005782:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005786:	f383 8811 	msr	BASEPRI, r3
 800578a:	f3bf 8f6f 	isb	sy
 800578e:	f3bf 8f4f 	dsb	sy
 8005792:	60fb      	str	r3, [r7, #12]
 8005794:	bf00      	nop
 8005796:	e7fe      	b.n	8005796 <prvTaskIsTaskSuspended+0x2a>
 8005798:	693b      	ldr	r3, [r7, #16]
 800579a:	695b      	ldr	r3, [r3, #20]
 800579c:	4a0a      	ldr	r2, [pc, #40]	; (80057c8 <prvTaskIsTaskSuspended+0x5c>)
 800579e:	4293      	cmp	r3, r2
 80057a0:	d10a      	bne.n	80057b8 <prvTaskIsTaskSuspended+0x4c>
 80057a2:	693b      	ldr	r3, [r7, #16]
 80057a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80057a6:	4a09      	ldr	r2, [pc, #36]	; (80057cc <prvTaskIsTaskSuspended+0x60>)
 80057a8:	4293      	cmp	r3, r2
 80057aa:	d005      	beq.n	80057b8 <prvTaskIsTaskSuspended+0x4c>
 80057ac:	693b      	ldr	r3, [r7, #16]
 80057ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80057b0:	2b00      	cmp	r3, #0
 80057b2:	d101      	bne.n	80057b8 <prvTaskIsTaskSuspended+0x4c>
 80057b4:	2301      	movs	r3, #1
 80057b6:	617b      	str	r3, [r7, #20]
 80057b8:	697b      	ldr	r3, [r7, #20]
 80057ba:	4618      	mov	r0, r3
 80057bc:	371c      	adds	r7, #28
 80057be:	46bd      	mov	sp, r7
 80057c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057c4:	4770      	bx	lr
 80057c6:	bf00      	nop
 80057c8:	2000109c 	.word	0x2000109c
 80057cc:	20001070 	.word	0x20001070

080057d0 <vTaskResume>:
 80057d0:	b580      	push	{r7, lr}
 80057d2:	b084      	sub	sp, #16
 80057d4:	af00      	add	r7, sp, #0
 80057d6:	6078      	str	r0, [r7, #4]
 80057d8:	687b      	ldr	r3, [r7, #4]
 80057da:	60fb      	str	r3, [r7, #12]
 80057dc:	687b      	ldr	r3, [r7, #4]
 80057de:	2b00      	cmp	r3, #0
 80057e0:	d10a      	bne.n	80057f8 <vTaskResume+0x28>
 80057e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80057e6:	f383 8811 	msr	BASEPRI, r3
 80057ea:	f3bf 8f6f 	isb	sy
 80057ee:	f3bf 8f4f 	dsb	sy
 80057f2:	60bb      	str	r3, [r7, #8]
 80057f4:	bf00      	nop
 80057f6:	e7fe      	b.n	80057f6 <vTaskResume+0x26>
 80057f8:	4b20      	ldr	r3, [pc, #128]	; (800587c <vTaskResume+0xac>)
 80057fa:	681b      	ldr	r3, [r3, #0]
 80057fc:	68fa      	ldr	r2, [r7, #12]
 80057fe:	429a      	cmp	r2, r3
 8005800:	d038      	beq.n	8005874 <vTaskResume+0xa4>
 8005802:	68fb      	ldr	r3, [r7, #12]
 8005804:	2b00      	cmp	r3, #0
 8005806:	d035      	beq.n	8005874 <vTaskResume+0xa4>
 8005808:	f001 fc64 	bl	80070d4 <vPortEnterCritical>
 800580c:	68f8      	ldr	r0, [r7, #12]
 800580e:	f7ff ffad 	bl	800576c <prvTaskIsTaskSuspended>
 8005812:	4603      	mov	r3, r0
 8005814:	2b00      	cmp	r3, #0
 8005816:	d02b      	beq.n	8005870 <vTaskResume+0xa0>
 8005818:	68fb      	ldr	r3, [r7, #12]
 800581a:	3304      	adds	r3, #4
 800581c:	4618      	mov	r0, r3
 800581e:	f7fe fd4d 	bl	80042bc <uxListRemove>
 8005822:	68fb      	ldr	r3, [r7, #12]
 8005824:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005826:	4b16      	ldr	r3, [pc, #88]	; (8005880 <vTaskResume+0xb0>)
 8005828:	681b      	ldr	r3, [r3, #0]
 800582a:	429a      	cmp	r2, r3
 800582c:	d903      	bls.n	8005836 <vTaskResume+0x66>
 800582e:	68fb      	ldr	r3, [r7, #12]
 8005830:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005832:	4a13      	ldr	r2, [pc, #76]	; (8005880 <vTaskResume+0xb0>)
 8005834:	6013      	str	r3, [r2, #0]
 8005836:	68fb      	ldr	r3, [r7, #12]
 8005838:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800583a:	4613      	mov	r3, r2
 800583c:	009b      	lsls	r3, r3, #2
 800583e:	4413      	add	r3, r2
 8005840:	009b      	lsls	r3, r3, #2
 8005842:	4a10      	ldr	r2, [pc, #64]	; (8005884 <vTaskResume+0xb4>)
 8005844:	441a      	add	r2, r3
 8005846:	68fb      	ldr	r3, [r7, #12]
 8005848:	3304      	adds	r3, #4
 800584a:	4619      	mov	r1, r3
 800584c:	4610      	mov	r0, r2
 800584e:	f7fe fcd8 	bl	8004202 <vListInsertEnd>
 8005852:	68fb      	ldr	r3, [r7, #12]
 8005854:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005856:	4b09      	ldr	r3, [pc, #36]	; (800587c <vTaskResume+0xac>)
 8005858:	681b      	ldr	r3, [r3, #0]
 800585a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800585c:	429a      	cmp	r2, r3
 800585e:	d307      	bcc.n	8005870 <vTaskResume+0xa0>
 8005860:	4b09      	ldr	r3, [pc, #36]	; (8005888 <vTaskResume+0xb8>)
 8005862:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005866:	601a      	str	r2, [r3, #0]
 8005868:	f3bf 8f4f 	dsb	sy
 800586c:	f3bf 8f6f 	isb	sy
 8005870:	f001 fc60 	bl	8007134 <vPortExitCritical>
 8005874:	bf00      	nop
 8005876:	3710      	adds	r7, #16
 8005878:	46bd      	mov	sp, r7
 800587a:	bd80      	pop	{r7, pc}
 800587c:	20000bdc 	.word	0x20000bdc
 8005880:	200010b8 	.word	0x200010b8
 8005884:	20000be0 	.word	0x20000be0
 8005888:	e000ed04 	.word	0xe000ed04

0800588c <vTaskStartScheduler>:
 800588c:	b580      	push	{r7, lr}
 800588e:	b08a      	sub	sp, #40	; 0x28
 8005890:	af04      	add	r7, sp, #16
 8005892:	2300      	movs	r3, #0
 8005894:	60bb      	str	r3, [r7, #8]
 8005896:	2300      	movs	r3, #0
 8005898:	607b      	str	r3, [r7, #4]
 800589a:	463a      	mov	r2, r7
 800589c:	1d39      	adds	r1, r7, #4
 800589e:	f107 0308 	add.w	r3, r7, #8
 80058a2:	4618      	mov	r0, r3
 80058a4:	f7fe fc4c 	bl	8004140 <vApplicationGetIdleTaskMemory>
 80058a8:	6839      	ldr	r1, [r7, #0]
 80058aa:	687b      	ldr	r3, [r7, #4]
 80058ac:	68ba      	ldr	r2, [r7, #8]
 80058ae:	9202      	str	r2, [sp, #8]
 80058b0:	9301      	str	r3, [sp, #4]
 80058b2:	2300      	movs	r3, #0
 80058b4:	9300      	str	r3, [sp, #0]
 80058b6:	2300      	movs	r3, #0
 80058b8:	460a      	mov	r2, r1
 80058ba:	4924      	ldr	r1, [pc, #144]	; (800594c <vTaskStartScheduler+0xc0>)
 80058bc:	4824      	ldr	r0, [pc, #144]	; (8005950 <vTaskStartScheduler+0xc4>)
 80058be:	f7ff fc27 	bl	8005110 <xTaskCreateStatic>
 80058c2:	4603      	mov	r3, r0
 80058c4:	4a23      	ldr	r2, [pc, #140]	; (8005954 <vTaskStartScheduler+0xc8>)
 80058c6:	6013      	str	r3, [r2, #0]
 80058c8:	4b22      	ldr	r3, [pc, #136]	; (8005954 <vTaskStartScheduler+0xc8>)
 80058ca:	681b      	ldr	r3, [r3, #0]
 80058cc:	2b00      	cmp	r3, #0
 80058ce:	d002      	beq.n	80058d6 <vTaskStartScheduler+0x4a>
 80058d0:	2301      	movs	r3, #1
 80058d2:	617b      	str	r3, [r7, #20]
 80058d4:	e001      	b.n	80058da <vTaskStartScheduler+0x4e>
 80058d6:	2300      	movs	r3, #0
 80058d8:	617b      	str	r3, [r7, #20]
 80058da:	697b      	ldr	r3, [r7, #20]
 80058dc:	2b01      	cmp	r3, #1
 80058de:	d102      	bne.n	80058e6 <vTaskStartScheduler+0x5a>
 80058e0:	f000 ff7a 	bl	80067d8 <xTimerCreateTimerTask>
 80058e4:	6178      	str	r0, [r7, #20]
 80058e6:	697b      	ldr	r3, [r7, #20]
 80058e8:	2b01      	cmp	r3, #1
 80058ea:	d11b      	bne.n	8005924 <vTaskStartScheduler+0x98>
 80058ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80058f0:	f383 8811 	msr	BASEPRI, r3
 80058f4:	f3bf 8f6f 	isb	sy
 80058f8:	f3bf 8f4f 	dsb	sy
 80058fc:	613b      	str	r3, [r7, #16]
 80058fe:	bf00      	nop
 8005900:	4b15      	ldr	r3, [pc, #84]	; (8005958 <vTaskStartScheduler+0xcc>)
 8005902:	681b      	ldr	r3, [r3, #0]
 8005904:	3358      	adds	r3, #88	; 0x58
 8005906:	4a15      	ldr	r2, [pc, #84]	; (800595c <vTaskStartScheduler+0xd0>)
 8005908:	6013      	str	r3, [r2, #0]
 800590a:	4b15      	ldr	r3, [pc, #84]	; (8005960 <vTaskStartScheduler+0xd4>)
 800590c:	f04f 32ff 	mov.w	r2, #4294967295
 8005910:	601a      	str	r2, [r3, #0]
 8005912:	4b14      	ldr	r3, [pc, #80]	; (8005964 <vTaskStartScheduler+0xd8>)
 8005914:	2201      	movs	r2, #1
 8005916:	601a      	str	r2, [r3, #0]
 8005918:	4b13      	ldr	r3, [pc, #76]	; (8005968 <vTaskStartScheduler+0xdc>)
 800591a:	2200      	movs	r2, #0
 800591c:	601a      	str	r2, [r3, #0]
 800591e:	f001 fb37 	bl	8006f90 <xPortStartScheduler>
 8005922:	e00e      	b.n	8005942 <vTaskStartScheduler+0xb6>
 8005924:	697b      	ldr	r3, [r7, #20]
 8005926:	f1b3 3fff 	cmp.w	r3, #4294967295
 800592a:	d10a      	bne.n	8005942 <vTaskStartScheduler+0xb6>
 800592c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005930:	f383 8811 	msr	BASEPRI, r3
 8005934:	f3bf 8f6f 	isb	sy
 8005938:	f3bf 8f4f 	dsb	sy
 800593c:	60fb      	str	r3, [r7, #12]
 800593e:	bf00      	nop
 8005940:	e7fe      	b.n	8005940 <vTaskStartScheduler+0xb4>
 8005942:	bf00      	nop
 8005944:	3718      	adds	r7, #24
 8005946:	46bd      	mov	sp, r7
 8005948:	bd80      	pop	{r7, pc}
 800594a:	bf00      	nop
 800594c:	0800a448 	.word	0x0800a448
 8005950:	08005fe1 	.word	0x08005fe1
 8005954:	200010d4 	.word	0x200010d4
 8005958:	20000bdc 	.word	0x20000bdc
 800595c:	20000068 	.word	0x20000068
 8005960:	200010d0 	.word	0x200010d0
 8005964:	200010bc 	.word	0x200010bc
 8005968:	200010b4 	.word	0x200010b4

0800596c <vTaskSuspendAll>:
 800596c:	b480      	push	{r7}
 800596e:	af00      	add	r7, sp, #0
 8005970:	4b04      	ldr	r3, [pc, #16]	; (8005984 <vTaskSuspendAll+0x18>)
 8005972:	681b      	ldr	r3, [r3, #0]
 8005974:	3301      	adds	r3, #1
 8005976:	4a03      	ldr	r2, [pc, #12]	; (8005984 <vTaskSuspendAll+0x18>)
 8005978:	6013      	str	r3, [r2, #0]
 800597a:	bf00      	nop
 800597c:	46bd      	mov	sp, r7
 800597e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005982:	4770      	bx	lr
 8005984:	200010d8 	.word	0x200010d8

08005988 <xTaskResumeAll>:
 8005988:	b580      	push	{r7, lr}
 800598a:	b084      	sub	sp, #16
 800598c:	af00      	add	r7, sp, #0
 800598e:	2300      	movs	r3, #0
 8005990:	60fb      	str	r3, [r7, #12]
 8005992:	2300      	movs	r3, #0
 8005994:	60bb      	str	r3, [r7, #8]
 8005996:	4b42      	ldr	r3, [pc, #264]	; (8005aa0 <xTaskResumeAll+0x118>)
 8005998:	681b      	ldr	r3, [r3, #0]
 800599a:	2b00      	cmp	r3, #0
 800599c:	d10a      	bne.n	80059b4 <xTaskResumeAll+0x2c>
 800599e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80059a2:	f383 8811 	msr	BASEPRI, r3
 80059a6:	f3bf 8f6f 	isb	sy
 80059aa:	f3bf 8f4f 	dsb	sy
 80059ae:	603b      	str	r3, [r7, #0]
 80059b0:	bf00      	nop
 80059b2:	e7fe      	b.n	80059b2 <xTaskResumeAll+0x2a>
 80059b4:	f001 fb8e 	bl	80070d4 <vPortEnterCritical>
 80059b8:	4b39      	ldr	r3, [pc, #228]	; (8005aa0 <xTaskResumeAll+0x118>)
 80059ba:	681b      	ldr	r3, [r3, #0]
 80059bc:	3b01      	subs	r3, #1
 80059be:	4a38      	ldr	r2, [pc, #224]	; (8005aa0 <xTaskResumeAll+0x118>)
 80059c0:	6013      	str	r3, [r2, #0]
 80059c2:	4b37      	ldr	r3, [pc, #220]	; (8005aa0 <xTaskResumeAll+0x118>)
 80059c4:	681b      	ldr	r3, [r3, #0]
 80059c6:	2b00      	cmp	r3, #0
 80059c8:	d162      	bne.n	8005a90 <xTaskResumeAll+0x108>
 80059ca:	4b36      	ldr	r3, [pc, #216]	; (8005aa4 <xTaskResumeAll+0x11c>)
 80059cc:	681b      	ldr	r3, [r3, #0]
 80059ce:	2b00      	cmp	r3, #0
 80059d0:	d05e      	beq.n	8005a90 <xTaskResumeAll+0x108>
 80059d2:	e02f      	b.n	8005a34 <xTaskResumeAll+0xac>
 80059d4:	4b34      	ldr	r3, [pc, #208]	; (8005aa8 <xTaskResumeAll+0x120>)
 80059d6:	68db      	ldr	r3, [r3, #12]
 80059d8:	68db      	ldr	r3, [r3, #12]
 80059da:	60fb      	str	r3, [r7, #12]
 80059dc:	68fb      	ldr	r3, [r7, #12]
 80059de:	3318      	adds	r3, #24
 80059e0:	4618      	mov	r0, r3
 80059e2:	f7fe fc6b 	bl	80042bc <uxListRemove>
 80059e6:	68fb      	ldr	r3, [r7, #12]
 80059e8:	3304      	adds	r3, #4
 80059ea:	4618      	mov	r0, r3
 80059ec:	f7fe fc66 	bl	80042bc <uxListRemove>
 80059f0:	68fb      	ldr	r3, [r7, #12]
 80059f2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80059f4:	4b2d      	ldr	r3, [pc, #180]	; (8005aac <xTaskResumeAll+0x124>)
 80059f6:	681b      	ldr	r3, [r3, #0]
 80059f8:	429a      	cmp	r2, r3
 80059fa:	d903      	bls.n	8005a04 <xTaskResumeAll+0x7c>
 80059fc:	68fb      	ldr	r3, [r7, #12]
 80059fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005a00:	4a2a      	ldr	r2, [pc, #168]	; (8005aac <xTaskResumeAll+0x124>)
 8005a02:	6013      	str	r3, [r2, #0]
 8005a04:	68fb      	ldr	r3, [r7, #12]
 8005a06:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005a08:	4613      	mov	r3, r2
 8005a0a:	009b      	lsls	r3, r3, #2
 8005a0c:	4413      	add	r3, r2
 8005a0e:	009b      	lsls	r3, r3, #2
 8005a10:	4a27      	ldr	r2, [pc, #156]	; (8005ab0 <xTaskResumeAll+0x128>)
 8005a12:	441a      	add	r2, r3
 8005a14:	68fb      	ldr	r3, [r7, #12]
 8005a16:	3304      	adds	r3, #4
 8005a18:	4619      	mov	r1, r3
 8005a1a:	4610      	mov	r0, r2
 8005a1c:	f7fe fbf1 	bl	8004202 <vListInsertEnd>
 8005a20:	68fb      	ldr	r3, [r7, #12]
 8005a22:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005a24:	4b23      	ldr	r3, [pc, #140]	; (8005ab4 <xTaskResumeAll+0x12c>)
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005a2a:	429a      	cmp	r2, r3
 8005a2c:	d302      	bcc.n	8005a34 <xTaskResumeAll+0xac>
 8005a2e:	4b22      	ldr	r3, [pc, #136]	; (8005ab8 <xTaskResumeAll+0x130>)
 8005a30:	2201      	movs	r2, #1
 8005a32:	601a      	str	r2, [r3, #0]
 8005a34:	4b1c      	ldr	r3, [pc, #112]	; (8005aa8 <xTaskResumeAll+0x120>)
 8005a36:	681b      	ldr	r3, [r3, #0]
 8005a38:	2b00      	cmp	r3, #0
 8005a3a:	d1cb      	bne.n	80059d4 <xTaskResumeAll+0x4c>
 8005a3c:	68fb      	ldr	r3, [r7, #12]
 8005a3e:	2b00      	cmp	r3, #0
 8005a40:	d001      	beq.n	8005a46 <xTaskResumeAll+0xbe>
 8005a42:	f000 fbdb 	bl	80061fc <prvResetNextTaskUnblockTime>
 8005a46:	4b1d      	ldr	r3, [pc, #116]	; (8005abc <xTaskResumeAll+0x134>)
 8005a48:	681b      	ldr	r3, [r3, #0]
 8005a4a:	607b      	str	r3, [r7, #4]
 8005a4c:	687b      	ldr	r3, [r7, #4]
 8005a4e:	2b00      	cmp	r3, #0
 8005a50:	d010      	beq.n	8005a74 <xTaskResumeAll+0xec>
 8005a52:	f000 f875 	bl	8005b40 <xTaskIncrementTick>
 8005a56:	4603      	mov	r3, r0
 8005a58:	2b00      	cmp	r3, #0
 8005a5a:	d002      	beq.n	8005a62 <xTaskResumeAll+0xda>
 8005a5c:	4b16      	ldr	r3, [pc, #88]	; (8005ab8 <xTaskResumeAll+0x130>)
 8005a5e:	2201      	movs	r2, #1
 8005a60:	601a      	str	r2, [r3, #0]
 8005a62:	687b      	ldr	r3, [r7, #4]
 8005a64:	3b01      	subs	r3, #1
 8005a66:	607b      	str	r3, [r7, #4]
 8005a68:	687b      	ldr	r3, [r7, #4]
 8005a6a:	2b00      	cmp	r3, #0
 8005a6c:	d1f1      	bne.n	8005a52 <xTaskResumeAll+0xca>
 8005a6e:	4b13      	ldr	r3, [pc, #76]	; (8005abc <xTaskResumeAll+0x134>)
 8005a70:	2200      	movs	r2, #0
 8005a72:	601a      	str	r2, [r3, #0]
 8005a74:	4b10      	ldr	r3, [pc, #64]	; (8005ab8 <xTaskResumeAll+0x130>)
 8005a76:	681b      	ldr	r3, [r3, #0]
 8005a78:	2b00      	cmp	r3, #0
 8005a7a:	d009      	beq.n	8005a90 <xTaskResumeAll+0x108>
 8005a7c:	2301      	movs	r3, #1
 8005a7e:	60bb      	str	r3, [r7, #8]
 8005a80:	4b0f      	ldr	r3, [pc, #60]	; (8005ac0 <xTaskResumeAll+0x138>)
 8005a82:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005a86:	601a      	str	r2, [r3, #0]
 8005a88:	f3bf 8f4f 	dsb	sy
 8005a8c:	f3bf 8f6f 	isb	sy
 8005a90:	f001 fb50 	bl	8007134 <vPortExitCritical>
 8005a94:	68bb      	ldr	r3, [r7, #8]
 8005a96:	4618      	mov	r0, r3
 8005a98:	3710      	adds	r7, #16
 8005a9a:	46bd      	mov	sp, r7
 8005a9c:	bd80      	pop	{r7, pc}
 8005a9e:	bf00      	nop
 8005aa0:	200010d8 	.word	0x200010d8
 8005aa4:	200010b0 	.word	0x200010b0
 8005aa8:	20001070 	.word	0x20001070
 8005aac:	200010b8 	.word	0x200010b8
 8005ab0:	20000be0 	.word	0x20000be0
 8005ab4:	20000bdc 	.word	0x20000bdc
 8005ab8:	200010c4 	.word	0x200010c4
 8005abc:	200010c0 	.word	0x200010c0
 8005ac0:	e000ed04 	.word	0xe000ed04

08005ac4 <xTaskGetTickCount>:
 8005ac4:	b480      	push	{r7}
 8005ac6:	b083      	sub	sp, #12
 8005ac8:	af00      	add	r7, sp, #0
 8005aca:	4b05      	ldr	r3, [pc, #20]	; (8005ae0 <xTaskGetTickCount+0x1c>)
 8005acc:	681b      	ldr	r3, [r3, #0]
 8005ace:	607b      	str	r3, [r7, #4]
 8005ad0:	687b      	ldr	r3, [r7, #4]
 8005ad2:	4618      	mov	r0, r3
 8005ad4:	370c      	adds	r7, #12
 8005ad6:	46bd      	mov	sp, r7
 8005ad8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005adc:	4770      	bx	lr
 8005ade:	bf00      	nop
 8005ae0:	200010b4 	.word	0x200010b4

08005ae4 <xTaskGetTickCountFromISR>:
 8005ae4:	b580      	push	{r7, lr}
 8005ae6:	b082      	sub	sp, #8
 8005ae8:	af00      	add	r7, sp, #0
 8005aea:	f001 fbd5 	bl	8007298 <vPortValidateInterruptPriority>
 8005aee:	2300      	movs	r3, #0
 8005af0:	607b      	str	r3, [r7, #4]
 8005af2:	4b04      	ldr	r3, [pc, #16]	; (8005b04 <xTaskGetTickCountFromISR+0x20>)
 8005af4:	681b      	ldr	r3, [r3, #0]
 8005af6:	603b      	str	r3, [r7, #0]
 8005af8:	683b      	ldr	r3, [r7, #0]
 8005afa:	4618      	mov	r0, r3
 8005afc:	3708      	adds	r7, #8
 8005afe:	46bd      	mov	sp, r7
 8005b00:	bd80      	pop	{r7, pc}
 8005b02:	bf00      	nop
 8005b04:	200010b4 	.word	0x200010b4

08005b08 <xTaskGetIdleTaskHandle>:
 8005b08:	b480      	push	{r7}
 8005b0a:	b083      	sub	sp, #12
 8005b0c:	af00      	add	r7, sp, #0
 8005b0e:	4b0b      	ldr	r3, [pc, #44]	; (8005b3c <xTaskGetIdleTaskHandle+0x34>)
 8005b10:	681b      	ldr	r3, [r3, #0]
 8005b12:	2b00      	cmp	r3, #0
 8005b14:	d10a      	bne.n	8005b2c <xTaskGetIdleTaskHandle+0x24>
 8005b16:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005b1a:	f383 8811 	msr	BASEPRI, r3
 8005b1e:	f3bf 8f6f 	isb	sy
 8005b22:	f3bf 8f4f 	dsb	sy
 8005b26:	607b      	str	r3, [r7, #4]
 8005b28:	bf00      	nop
 8005b2a:	e7fe      	b.n	8005b2a <xTaskGetIdleTaskHandle+0x22>
 8005b2c:	4b03      	ldr	r3, [pc, #12]	; (8005b3c <xTaskGetIdleTaskHandle+0x34>)
 8005b2e:	681b      	ldr	r3, [r3, #0]
 8005b30:	4618      	mov	r0, r3
 8005b32:	370c      	adds	r7, #12
 8005b34:	46bd      	mov	sp, r7
 8005b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b3a:	4770      	bx	lr
 8005b3c:	200010d4 	.word	0x200010d4

08005b40 <xTaskIncrementTick>:
 8005b40:	b580      	push	{r7, lr}
 8005b42:	b086      	sub	sp, #24
 8005b44:	af00      	add	r7, sp, #0
 8005b46:	2300      	movs	r3, #0
 8005b48:	617b      	str	r3, [r7, #20]
 8005b4a:	4b4c      	ldr	r3, [pc, #304]	; (8005c7c <xTaskIncrementTick+0x13c>)
 8005b4c:	681b      	ldr	r3, [r3, #0]
 8005b4e:	2b00      	cmp	r3, #0
 8005b50:	f040 8087 	bne.w	8005c62 <xTaskIncrementTick+0x122>
 8005b54:	4b4a      	ldr	r3, [pc, #296]	; (8005c80 <xTaskIncrementTick+0x140>)
 8005b56:	681b      	ldr	r3, [r3, #0]
 8005b58:	3301      	adds	r3, #1
 8005b5a:	613b      	str	r3, [r7, #16]
 8005b5c:	4a48      	ldr	r2, [pc, #288]	; (8005c80 <xTaskIncrementTick+0x140>)
 8005b5e:	693b      	ldr	r3, [r7, #16]
 8005b60:	6013      	str	r3, [r2, #0]
 8005b62:	693b      	ldr	r3, [r7, #16]
 8005b64:	2b00      	cmp	r3, #0
 8005b66:	d120      	bne.n	8005baa <xTaskIncrementTick+0x6a>
 8005b68:	4b46      	ldr	r3, [pc, #280]	; (8005c84 <xTaskIncrementTick+0x144>)
 8005b6a:	681b      	ldr	r3, [r3, #0]
 8005b6c:	681b      	ldr	r3, [r3, #0]
 8005b6e:	2b00      	cmp	r3, #0
 8005b70:	d00a      	beq.n	8005b88 <xTaskIncrementTick+0x48>
 8005b72:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005b76:	f383 8811 	msr	BASEPRI, r3
 8005b7a:	f3bf 8f6f 	isb	sy
 8005b7e:	f3bf 8f4f 	dsb	sy
 8005b82:	603b      	str	r3, [r7, #0]
 8005b84:	bf00      	nop
 8005b86:	e7fe      	b.n	8005b86 <xTaskIncrementTick+0x46>
 8005b88:	4b3e      	ldr	r3, [pc, #248]	; (8005c84 <xTaskIncrementTick+0x144>)
 8005b8a:	681b      	ldr	r3, [r3, #0]
 8005b8c:	60fb      	str	r3, [r7, #12]
 8005b8e:	4b3e      	ldr	r3, [pc, #248]	; (8005c88 <xTaskIncrementTick+0x148>)
 8005b90:	681b      	ldr	r3, [r3, #0]
 8005b92:	4a3c      	ldr	r2, [pc, #240]	; (8005c84 <xTaskIncrementTick+0x144>)
 8005b94:	6013      	str	r3, [r2, #0]
 8005b96:	4a3c      	ldr	r2, [pc, #240]	; (8005c88 <xTaskIncrementTick+0x148>)
 8005b98:	68fb      	ldr	r3, [r7, #12]
 8005b9a:	6013      	str	r3, [r2, #0]
 8005b9c:	4b3b      	ldr	r3, [pc, #236]	; (8005c8c <xTaskIncrementTick+0x14c>)
 8005b9e:	681b      	ldr	r3, [r3, #0]
 8005ba0:	3301      	adds	r3, #1
 8005ba2:	4a3a      	ldr	r2, [pc, #232]	; (8005c8c <xTaskIncrementTick+0x14c>)
 8005ba4:	6013      	str	r3, [r2, #0]
 8005ba6:	f000 fb29 	bl	80061fc <prvResetNextTaskUnblockTime>
 8005baa:	4b39      	ldr	r3, [pc, #228]	; (8005c90 <xTaskIncrementTick+0x150>)
 8005bac:	681b      	ldr	r3, [r3, #0]
 8005bae:	693a      	ldr	r2, [r7, #16]
 8005bb0:	429a      	cmp	r2, r3
 8005bb2:	d349      	bcc.n	8005c48 <xTaskIncrementTick+0x108>
 8005bb4:	4b33      	ldr	r3, [pc, #204]	; (8005c84 <xTaskIncrementTick+0x144>)
 8005bb6:	681b      	ldr	r3, [r3, #0]
 8005bb8:	681b      	ldr	r3, [r3, #0]
 8005bba:	2b00      	cmp	r3, #0
 8005bbc:	d104      	bne.n	8005bc8 <xTaskIncrementTick+0x88>
 8005bbe:	4b34      	ldr	r3, [pc, #208]	; (8005c90 <xTaskIncrementTick+0x150>)
 8005bc0:	f04f 32ff 	mov.w	r2, #4294967295
 8005bc4:	601a      	str	r2, [r3, #0]
 8005bc6:	e03f      	b.n	8005c48 <xTaskIncrementTick+0x108>
 8005bc8:	4b2e      	ldr	r3, [pc, #184]	; (8005c84 <xTaskIncrementTick+0x144>)
 8005bca:	681b      	ldr	r3, [r3, #0]
 8005bcc:	68db      	ldr	r3, [r3, #12]
 8005bce:	68db      	ldr	r3, [r3, #12]
 8005bd0:	60bb      	str	r3, [r7, #8]
 8005bd2:	68bb      	ldr	r3, [r7, #8]
 8005bd4:	685b      	ldr	r3, [r3, #4]
 8005bd6:	607b      	str	r3, [r7, #4]
 8005bd8:	693a      	ldr	r2, [r7, #16]
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	429a      	cmp	r2, r3
 8005bde:	d203      	bcs.n	8005be8 <xTaskIncrementTick+0xa8>
 8005be0:	4a2b      	ldr	r2, [pc, #172]	; (8005c90 <xTaskIncrementTick+0x150>)
 8005be2:	687b      	ldr	r3, [r7, #4]
 8005be4:	6013      	str	r3, [r2, #0]
 8005be6:	e02f      	b.n	8005c48 <xTaskIncrementTick+0x108>
 8005be8:	68bb      	ldr	r3, [r7, #8]
 8005bea:	3304      	adds	r3, #4
 8005bec:	4618      	mov	r0, r3
 8005bee:	f7fe fb65 	bl	80042bc <uxListRemove>
 8005bf2:	68bb      	ldr	r3, [r7, #8]
 8005bf4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005bf6:	2b00      	cmp	r3, #0
 8005bf8:	d004      	beq.n	8005c04 <xTaskIncrementTick+0xc4>
 8005bfa:	68bb      	ldr	r3, [r7, #8]
 8005bfc:	3318      	adds	r3, #24
 8005bfe:	4618      	mov	r0, r3
 8005c00:	f7fe fb5c 	bl	80042bc <uxListRemove>
 8005c04:	68bb      	ldr	r3, [r7, #8]
 8005c06:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005c08:	4b22      	ldr	r3, [pc, #136]	; (8005c94 <xTaskIncrementTick+0x154>)
 8005c0a:	681b      	ldr	r3, [r3, #0]
 8005c0c:	429a      	cmp	r2, r3
 8005c0e:	d903      	bls.n	8005c18 <xTaskIncrementTick+0xd8>
 8005c10:	68bb      	ldr	r3, [r7, #8]
 8005c12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005c14:	4a1f      	ldr	r2, [pc, #124]	; (8005c94 <xTaskIncrementTick+0x154>)
 8005c16:	6013      	str	r3, [r2, #0]
 8005c18:	68bb      	ldr	r3, [r7, #8]
 8005c1a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005c1c:	4613      	mov	r3, r2
 8005c1e:	009b      	lsls	r3, r3, #2
 8005c20:	4413      	add	r3, r2
 8005c22:	009b      	lsls	r3, r3, #2
 8005c24:	4a1c      	ldr	r2, [pc, #112]	; (8005c98 <xTaskIncrementTick+0x158>)
 8005c26:	441a      	add	r2, r3
 8005c28:	68bb      	ldr	r3, [r7, #8]
 8005c2a:	3304      	adds	r3, #4
 8005c2c:	4619      	mov	r1, r3
 8005c2e:	4610      	mov	r0, r2
 8005c30:	f7fe fae7 	bl	8004202 <vListInsertEnd>
 8005c34:	68bb      	ldr	r3, [r7, #8]
 8005c36:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005c38:	4b18      	ldr	r3, [pc, #96]	; (8005c9c <xTaskIncrementTick+0x15c>)
 8005c3a:	681b      	ldr	r3, [r3, #0]
 8005c3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005c3e:	429a      	cmp	r2, r3
 8005c40:	d3b8      	bcc.n	8005bb4 <xTaskIncrementTick+0x74>
 8005c42:	2301      	movs	r3, #1
 8005c44:	617b      	str	r3, [r7, #20]
 8005c46:	e7b5      	b.n	8005bb4 <xTaskIncrementTick+0x74>
 8005c48:	4b15      	ldr	r3, [pc, #84]	; (8005ca0 <xTaskIncrementTick+0x160>)
 8005c4a:	681b      	ldr	r3, [r3, #0]
 8005c4c:	2b00      	cmp	r3, #0
 8005c4e:	d101      	bne.n	8005c54 <xTaskIncrementTick+0x114>
 8005c50:	f7fc f8aa 	bl	8001da8 <vApplicationTickHook>
 8005c54:	4b13      	ldr	r3, [pc, #76]	; (8005ca4 <xTaskIncrementTick+0x164>)
 8005c56:	681b      	ldr	r3, [r3, #0]
 8005c58:	2b00      	cmp	r3, #0
 8005c5a:	d009      	beq.n	8005c70 <xTaskIncrementTick+0x130>
 8005c5c:	2301      	movs	r3, #1
 8005c5e:	617b      	str	r3, [r7, #20]
 8005c60:	e006      	b.n	8005c70 <xTaskIncrementTick+0x130>
 8005c62:	4b0f      	ldr	r3, [pc, #60]	; (8005ca0 <xTaskIncrementTick+0x160>)
 8005c64:	681b      	ldr	r3, [r3, #0]
 8005c66:	3301      	adds	r3, #1
 8005c68:	4a0d      	ldr	r2, [pc, #52]	; (8005ca0 <xTaskIncrementTick+0x160>)
 8005c6a:	6013      	str	r3, [r2, #0]
 8005c6c:	f7fc f89c 	bl	8001da8 <vApplicationTickHook>
 8005c70:	697b      	ldr	r3, [r7, #20]
 8005c72:	4618      	mov	r0, r3
 8005c74:	3718      	adds	r7, #24
 8005c76:	46bd      	mov	sp, r7
 8005c78:	bd80      	pop	{r7, pc}
 8005c7a:	bf00      	nop
 8005c7c:	200010d8 	.word	0x200010d8
 8005c80:	200010b4 	.word	0x200010b4
 8005c84:	20001068 	.word	0x20001068
 8005c88:	2000106c 	.word	0x2000106c
 8005c8c:	200010c8 	.word	0x200010c8
 8005c90:	200010d0 	.word	0x200010d0
 8005c94:	200010b8 	.word	0x200010b8
 8005c98:	20000be0 	.word	0x20000be0
 8005c9c:	20000bdc 	.word	0x20000bdc
 8005ca0:	200010c0 	.word	0x200010c0
 8005ca4:	200010c4 	.word	0x200010c4

08005ca8 <vTaskSwitchContext>:
 8005ca8:	b480      	push	{r7}
 8005caa:	b085      	sub	sp, #20
 8005cac:	af00      	add	r7, sp, #0
 8005cae:	4b2a      	ldr	r3, [pc, #168]	; (8005d58 <vTaskSwitchContext+0xb0>)
 8005cb0:	681b      	ldr	r3, [r3, #0]
 8005cb2:	2b00      	cmp	r3, #0
 8005cb4:	d003      	beq.n	8005cbe <vTaskSwitchContext+0x16>
 8005cb6:	4b29      	ldr	r3, [pc, #164]	; (8005d5c <vTaskSwitchContext+0xb4>)
 8005cb8:	2201      	movs	r2, #1
 8005cba:	601a      	str	r2, [r3, #0]
 8005cbc:	e046      	b.n	8005d4c <vTaskSwitchContext+0xa4>
 8005cbe:	4b27      	ldr	r3, [pc, #156]	; (8005d5c <vTaskSwitchContext+0xb4>)
 8005cc0:	2200      	movs	r2, #0
 8005cc2:	601a      	str	r2, [r3, #0]
 8005cc4:	4b26      	ldr	r3, [pc, #152]	; (8005d60 <vTaskSwitchContext+0xb8>)
 8005cc6:	681b      	ldr	r3, [r3, #0]
 8005cc8:	60fb      	str	r3, [r7, #12]
 8005cca:	e010      	b.n	8005cee <vTaskSwitchContext+0x46>
 8005ccc:	68fb      	ldr	r3, [r7, #12]
 8005cce:	2b00      	cmp	r3, #0
 8005cd0:	d10a      	bne.n	8005ce8 <vTaskSwitchContext+0x40>
 8005cd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005cd6:	f383 8811 	msr	BASEPRI, r3
 8005cda:	f3bf 8f6f 	isb	sy
 8005cde:	f3bf 8f4f 	dsb	sy
 8005ce2:	607b      	str	r3, [r7, #4]
 8005ce4:	bf00      	nop
 8005ce6:	e7fe      	b.n	8005ce6 <vTaskSwitchContext+0x3e>
 8005ce8:	68fb      	ldr	r3, [r7, #12]
 8005cea:	3b01      	subs	r3, #1
 8005cec:	60fb      	str	r3, [r7, #12]
 8005cee:	491d      	ldr	r1, [pc, #116]	; (8005d64 <vTaskSwitchContext+0xbc>)
 8005cf0:	68fa      	ldr	r2, [r7, #12]
 8005cf2:	4613      	mov	r3, r2
 8005cf4:	009b      	lsls	r3, r3, #2
 8005cf6:	4413      	add	r3, r2
 8005cf8:	009b      	lsls	r3, r3, #2
 8005cfa:	440b      	add	r3, r1
 8005cfc:	681b      	ldr	r3, [r3, #0]
 8005cfe:	2b00      	cmp	r3, #0
 8005d00:	d0e4      	beq.n	8005ccc <vTaskSwitchContext+0x24>
 8005d02:	68fa      	ldr	r2, [r7, #12]
 8005d04:	4613      	mov	r3, r2
 8005d06:	009b      	lsls	r3, r3, #2
 8005d08:	4413      	add	r3, r2
 8005d0a:	009b      	lsls	r3, r3, #2
 8005d0c:	4a15      	ldr	r2, [pc, #84]	; (8005d64 <vTaskSwitchContext+0xbc>)
 8005d0e:	4413      	add	r3, r2
 8005d10:	60bb      	str	r3, [r7, #8]
 8005d12:	68bb      	ldr	r3, [r7, #8]
 8005d14:	685b      	ldr	r3, [r3, #4]
 8005d16:	685a      	ldr	r2, [r3, #4]
 8005d18:	68bb      	ldr	r3, [r7, #8]
 8005d1a:	605a      	str	r2, [r3, #4]
 8005d1c:	68bb      	ldr	r3, [r7, #8]
 8005d1e:	685a      	ldr	r2, [r3, #4]
 8005d20:	68bb      	ldr	r3, [r7, #8]
 8005d22:	3308      	adds	r3, #8
 8005d24:	429a      	cmp	r2, r3
 8005d26:	d104      	bne.n	8005d32 <vTaskSwitchContext+0x8a>
 8005d28:	68bb      	ldr	r3, [r7, #8]
 8005d2a:	685b      	ldr	r3, [r3, #4]
 8005d2c:	685a      	ldr	r2, [r3, #4]
 8005d2e:	68bb      	ldr	r3, [r7, #8]
 8005d30:	605a      	str	r2, [r3, #4]
 8005d32:	68bb      	ldr	r3, [r7, #8]
 8005d34:	685b      	ldr	r3, [r3, #4]
 8005d36:	68db      	ldr	r3, [r3, #12]
 8005d38:	4a0b      	ldr	r2, [pc, #44]	; (8005d68 <vTaskSwitchContext+0xc0>)
 8005d3a:	6013      	str	r3, [r2, #0]
 8005d3c:	4a08      	ldr	r2, [pc, #32]	; (8005d60 <vTaskSwitchContext+0xb8>)
 8005d3e:	68fb      	ldr	r3, [r7, #12]
 8005d40:	6013      	str	r3, [r2, #0]
 8005d42:	4b09      	ldr	r3, [pc, #36]	; (8005d68 <vTaskSwitchContext+0xc0>)
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	3358      	adds	r3, #88	; 0x58
 8005d48:	4a08      	ldr	r2, [pc, #32]	; (8005d6c <vTaskSwitchContext+0xc4>)
 8005d4a:	6013      	str	r3, [r2, #0]
 8005d4c:	bf00      	nop
 8005d4e:	3714      	adds	r7, #20
 8005d50:	46bd      	mov	sp, r7
 8005d52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d56:	4770      	bx	lr
 8005d58:	200010d8 	.word	0x200010d8
 8005d5c:	200010c4 	.word	0x200010c4
 8005d60:	200010b8 	.word	0x200010b8
 8005d64:	20000be0 	.word	0x20000be0
 8005d68:	20000bdc 	.word	0x20000bdc
 8005d6c:	20000068 	.word	0x20000068

08005d70 <vTaskPlaceOnEventList>:
 8005d70:	b580      	push	{r7, lr}
 8005d72:	b084      	sub	sp, #16
 8005d74:	af00      	add	r7, sp, #0
 8005d76:	6078      	str	r0, [r7, #4]
 8005d78:	6039      	str	r1, [r7, #0]
 8005d7a:	687b      	ldr	r3, [r7, #4]
 8005d7c:	2b00      	cmp	r3, #0
 8005d7e:	d10a      	bne.n	8005d96 <vTaskPlaceOnEventList+0x26>
 8005d80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005d84:	f383 8811 	msr	BASEPRI, r3
 8005d88:	f3bf 8f6f 	isb	sy
 8005d8c:	f3bf 8f4f 	dsb	sy
 8005d90:	60fb      	str	r3, [r7, #12]
 8005d92:	bf00      	nop
 8005d94:	e7fe      	b.n	8005d94 <vTaskPlaceOnEventList+0x24>
 8005d96:	4b07      	ldr	r3, [pc, #28]	; (8005db4 <vTaskPlaceOnEventList+0x44>)
 8005d98:	681b      	ldr	r3, [r3, #0]
 8005d9a:	3318      	adds	r3, #24
 8005d9c:	4619      	mov	r1, r3
 8005d9e:	6878      	ldr	r0, [r7, #4]
 8005da0:	f7fe fa53 	bl	800424a <vListInsert>
 8005da4:	2101      	movs	r1, #1
 8005da6:	6838      	ldr	r0, [r7, #0]
 8005da8:	f000 fcc2 	bl	8006730 <prvAddCurrentTaskToDelayedList>
 8005dac:	bf00      	nop
 8005dae:	3710      	adds	r7, #16
 8005db0:	46bd      	mov	sp, r7
 8005db2:	bd80      	pop	{r7, pc}
 8005db4:	20000bdc 	.word	0x20000bdc

08005db8 <vTaskPlaceOnEventListRestricted>:
 8005db8:	b580      	push	{r7, lr}
 8005dba:	b086      	sub	sp, #24
 8005dbc:	af00      	add	r7, sp, #0
 8005dbe:	60f8      	str	r0, [r7, #12]
 8005dc0:	60b9      	str	r1, [r7, #8]
 8005dc2:	607a      	str	r2, [r7, #4]
 8005dc4:	68fb      	ldr	r3, [r7, #12]
 8005dc6:	2b00      	cmp	r3, #0
 8005dc8:	d10a      	bne.n	8005de0 <vTaskPlaceOnEventListRestricted+0x28>
 8005dca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005dce:	f383 8811 	msr	BASEPRI, r3
 8005dd2:	f3bf 8f6f 	isb	sy
 8005dd6:	f3bf 8f4f 	dsb	sy
 8005dda:	617b      	str	r3, [r7, #20]
 8005ddc:	bf00      	nop
 8005dde:	e7fe      	b.n	8005dde <vTaskPlaceOnEventListRestricted+0x26>
 8005de0:	4b0a      	ldr	r3, [pc, #40]	; (8005e0c <vTaskPlaceOnEventListRestricted+0x54>)
 8005de2:	681b      	ldr	r3, [r3, #0]
 8005de4:	3318      	adds	r3, #24
 8005de6:	4619      	mov	r1, r3
 8005de8:	68f8      	ldr	r0, [r7, #12]
 8005dea:	f7fe fa0a 	bl	8004202 <vListInsertEnd>
 8005dee:	687b      	ldr	r3, [r7, #4]
 8005df0:	2b00      	cmp	r3, #0
 8005df2:	d002      	beq.n	8005dfa <vTaskPlaceOnEventListRestricted+0x42>
 8005df4:	f04f 33ff 	mov.w	r3, #4294967295
 8005df8:	60bb      	str	r3, [r7, #8]
 8005dfa:	6879      	ldr	r1, [r7, #4]
 8005dfc:	68b8      	ldr	r0, [r7, #8]
 8005dfe:	f000 fc97 	bl	8006730 <prvAddCurrentTaskToDelayedList>
 8005e02:	bf00      	nop
 8005e04:	3718      	adds	r7, #24
 8005e06:	46bd      	mov	sp, r7
 8005e08:	bd80      	pop	{r7, pc}
 8005e0a:	bf00      	nop
 8005e0c:	20000bdc 	.word	0x20000bdc

08005e10 <xTaskRemoveFromEventList>:
 8005e10:	b580      	push	{r7, lr}
 8005e12:	b086      	sub	sp, #24
 8005e14:	af00      	add	r7, sp, #0
 8005e16:	6078      	str	r0, [r7, #4]
 8005e18:	687b      	ldr	r3, [r7, #4]
 8005e1a:	68db      	ldr	r3, [r3, #12]
 8005e1c:	68db      	ldr	r3, [r3, #12]
 8005e1e:	613b      	str	r3, [r7, #16]
 8005e20:	693b      	ldr	r3, [r7, #16]
 8005e22:	2b00      	cmp	r3, #0
 8005e24:	d10a      	bne.n	8005e3c <xTaskRemoveFromEventList+0x2c>
 8005e26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005e2a:	f383 8811 	msr	BASEPRI, r3
 8005e2e:	f3bf 8f6f 	isb	sy
 8005e32:	f3bf 8f4f 	dsb	sy
 8005e36:	60fb      	str	r3, [r7, #12]
 8005e38:	bf00      	nop
 8005e3a:	e7fe      	b.n	8005e3a <xTaskRemoveFromEventList+0x2a>
 8005e3c:	693b      	ldr	r3, [r7, #16]
 8005e3e:	3318      	adds	r3, #24
 8005e40:	4618      	mov	r0, r3
 8005e42:	f7fe fa3b 	bl	80042bc <uxListRemove>
 8005e46:	4b1e      	ldr	r3, [pc, #120]	; (8005ec0 <xTaskRemoveFromEventList+0xb0>)
 8005e48:	681b      	ldr	r3, [r3, #0]
 8005e4a:	2b00      	cmp	r3, #0
 8005e4c:	d11d      	bne.n	8005e8a <xTaskRemoveFromEventList+0x7a>
 8005e4e:	693b      	ldr	r3, [r7, #16]
 8005e50:	3304      	adds	r3, #4
 8005e52:	4618      	mov	r0, r3
 8005e54:	f7fe fa32 	bl	80042bc <uxListRemove>
 8005e58:	693b      	ldr	r3, [r7, #16]
 8005e5a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005e5c:	4b19      	ldr	r3, [pc, #100]	; (8005ec4 <xTaskRemoveFromEventList+0xb4>)
 8005e5e:	681b      	ldr	r3, [r3, #0]
 8005e60:	429a      	cmp	r2, r3
 8005e62:	d903      	bls.n	8005e6c <xTaskRemoveFromEventList+0x5c>
 8005e64:	693b      	ldr	r3, [r7, #16]
 8005e66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005e68:	4a16      	ldr	r2, [pc, #88]	; (8005ec4 <xTaskRemoveFromEventList+0xb4>)
 8005e6a:	6013      	str	r3, [r2, #0]
 8005e6c:	693b      	ldr	r3, [r7, #16]
 8005e6e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005e70:	4613      	mov	r3, r2
 8005e72:	009b      	lsls	r3, r3, #2
 8005e74:	4413      	add	r3, r2
 8005e76:	009b      	lsls	r3, r3, #2
 8005e78:	4a13      	ldr	r2, [pc, #76]	; (8005ec8 <xTaskRemoveFromEventList+0xb8>)
 8005e7a:	441a      	add	r2, r3
 8005e7c:	693b      	ldr	r3, [r7, #16]
 8005e7e:	3304      	adds	r3, #4
 8005e80:	4619      	mov	r1, r3
 8005e82:	4610      	mov	r0, r2
 8005e84:	f7fe f9bd 	bl	8004202 <vListInsertEnd>
 8005e88:	e005      	b.n	8005e96 <xTaskRemoveFromEventList+0x86>
 8005e8a:	693b      	ldr	r3, [r7, #16]
 8005e8c:	3318      	adds	r3, #24
 8005e8e:	4619      	mov	r1, r3
 8005e90:	480e      	ldr	r0, [pc, #56]	; (8005ecc <xTaskRemoveFromEventList+0xbc>)
 8005e92:	f7fe f9b6 	bl	8004202 <vListInsertEnd>
 8005e96:	693b      	ldr	r3, [r7, #16]
 8005e98:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005e9a:	4b0d      	ldr	r3, [pc, #52]	; (8005ed0 <xTaskRemoveFromEventList+0xc0>)
 8005e9c:	681b      	ldr	r3, [r3, #0]
 8005e9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005ea0:	429a      	cmp	r2, r3
 8005ea2:	d905      	bls.n	8005eb0 <xTaskRemoveFromEventList+0xa0>
 8005ea4:	2301      	movs	r3, #1
 8005ea6:	617b      	str	r3, [r7, #20]
 8005ea8:	4b0a      	ldr	r3, [pc, #40]	; (8005ed4 <xTaskRemoveFromEventList+0xc4>)
 8005eaa:	2201      	movs	r2, #1
 8005eac:	601a      	str	r2, [r3, #0]
 8005eae:	e001      	b.n	8005eb4 <xTaskRemoveFromEventList+0xa4>
 8005eb0:	2300      	movs	r3, #0
 8005eb2:	617b      	str	r3, [r7, #20]
 8005eb4:	697b      	ldr	r3, [r7, #20]
 8005eb6:	4618      	mov	r0, r3
 8005eb8:	3718      	adds	r7, #24
 8005eba:	46bd      	mov	sp, r7
 8005ebc:	bd80      	pop	{r7, pc}
 8005ebe:	bf00      	nop
 8005ec0:	200010d8 	.word	0x200010d8
 8005ec4:	200010b8 	.word	0x200010b8
 8005ec8:	20000be0 	.word	0x20000be0
 8005ecc:	20001070 	.word	0x20001070
 8005ed0:	20000bdc 	.word	0x20000bdc
 8005ed4:	200010c4 	.word	0x200010c4

08005ed8 <vTaskInternalSetTimeOutState>:
 8005ed8:	b480      	push	{r7}
 8005eda:	b083      	sub	sp, #12
 8005edc:	af00      	add	r7, sp, #0
 8005ede:	6078      	str	r0, [r7, #4]
 8005ee0:	4b06      	ldr	r3, [pc, #24]	; (8005efc <vTaskInternalSetTimeOutState+0x24>)
 8005ee2:	681a      	ldr	r2, [r3, #0]
 8005ee4:	687b      	ldr	r3, [r7, #4]
 8005ee6:	601a      	str	r2, [r3, #0]
 8005ee8:	4b05      	ldr	r3, [pc, #20]	; (8005f00 <vTaskInternalSetTimeOutState+0x28>)
 8005eea:	681a      	ldr	r2, [r3, #0]
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	605a      	str	r2, [r3, #4]
 8005ef0:	bf00      	nop
 8005ef2:	370c      	adds	r7, #12
 8005ef4:	46bd      	mov	sp, r7
 8005ef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005efa:	4770      	bx	lr
 8005efc:	200010c8 	.word	0x200010c8
 8005f00:	200010b4 	.word	0x200010b4

08005f04 <xTaskCheckForTimeOut>:
 8005f04:	b580      	push	{r7, lr}
 8005f06:	b088      	sub	sp, #32
 8005f08:	af00      	add	r7, sp, #0
 8005f0a:	6078      	str	r0, [r7, #4]
 8005f0c:	6039      	str	r1, [r7, #0]
 8005f0e:	687b      	ldr	r3, [r7, #4]
 8005f10:	2b00      	cmp	r3, #0
 8005f12:	d10a      	bne.n	8005f2a <xTaskCheckForTimeOut+0x26>
 8005f14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005f18:	f383 8811 	msr	BASEPRI, r3
 8005f1c:	f3bf 8f6f 	isb	sy
 8005f20:	f3bf 8f4f 	dsb	sy
 8005f24:	613b      	str	r3, [r7, #16]
 8005f26:	bf00      	nop
 8005f28:	e7fe      	b.n	8005f28 <xTaskCheckForTimeOut+0x24>
 8005f2a:	683b      	ldr	r3, [r7, #0]
 8005f2c:	2b00      	cmp	r3, #0
 8005f2e:	d10a      	bne.n	8005f46 <xTaskCheckForTimeOut+0x42>
 8005f30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005f34:	f383 8811 	msr	BASEPRI, r3
 8005f38:	f3bf 8f6f 	isb	sy
 8005f3c:	f3bf 8f4f 	dsb	sy
 8005f40:	60fb      	str	r3, [r7, #12]
 8005f42:	bf00      	nop
 8005f44:	e7fe      	b.n	8005f44 <xTaskCheckForTimeOut+0x40>
 8005f46:	f001 f8c5 	bl	80070d4 <vPortEnterCritical>
 8005f4a:	4b1d      	ldr	r3, [pc, #116]	; (8005fc0 <xTaskCheckForTimeOut+0xbc>)
 8005f4c:	681b      	ldr	r3, [r3, #0]
 8005f4e:	61bb      	str	r3, [r7, #24]
 8005f50:	687b      	ldr	r3, [r7, #4]
 8005f52:	685b      	ldr	r3, [r3, #4]
 8005f54:	69ba      	ldr	r2, [r7, #24]
 8005f56:	1ad3      	subs	r3, r2, r3
 8005f58:	617b      	str	r3, [r7, #20]
 8005f5a:	683b      	ldr	r3, [r7, #0]
 8005f5c:	681b      	ldr	r3, [r3, #0]
 8005f5e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005f62:	d102      	bne.n	8005f6a <xTaskCheckForTimeOut+0x66>
 8005f64:	2300      	movs	r3, #0
 8005f66:	61fb      	str	r3, [r7, #28]
 8005f68:	e023      	b.n	8005fb2 <xTaskCheckForTimeOut+0xae>
 8005f6a:	687b      	ldr	r3, [r7, #4]
 8005f6c:	681a      	ldr	r2, [r3, #0]
 8005f6e:	4b15      	ldr	r3, [pc, #84]	; (8005fc4 <xTaskCheckForTimeOut+0xc0>)
 8005f70:	681b      	ldr	r3, [r3, #0]
 8005f72:	429a      	cmp	r2, r3
 8005f74:	d007      	beq.n	8005f86 <xTaskCheckForTimeOut+0x82>
 8005f76:	687b      	ldr	r3, [r7, #4]
 8005f78:	685b      	ldr	r3, [r3, #4]
 8005f7a:	69ba      	ldr	r2, [r7, #24]
 8005f7c:	429a      	cmp	r2, r3
 8005f7e:	d302      	bcc.n	8005f86 <xTaskCheckForTimeOut+0x82>
 8005f80:	2301      	movs	r3, #1
 8005f82:	61fb      	str	r3, [r7, #28]
 8005f84:	e015      	b.n	8005fb2 <xTaskCheckForTimeOut+0xae>
 8005f86:	683b      	ldr	r3, [r7, #0]
 8005f88:	681b      	ldr	r3, [r3, #0]
 8005f8a:	697a      	ldr	r2, [r7, #20]
 8005f8c:	429a      	cmp	r2, r3
 8005f8e:	d20b      	bcs.n	8005fa8 <xTaskCheckForTimeOut+0xa4>
 8005f90:	683b      	ldr	r3, [r7, #0]
 8005f92:	681a      	ldr	r2, [r3, #0]
 8005f94:	697b      	ldr	r3, [r7, #20]
 8005f96:	1ad2      	subs	r2, r2, r3
 8005f98:	683b      	ldr	r3, [r7, #0]
 8005f9a:	601a      	str	r2, [r3, #0]
 8005f9c:	6878      	ldr	r0, [r7, #4]
 8005f9e:	f7ff ff9b 	bl	8005ed8 <vTaskInternalSetTimeOutState>
 8005fa2:	2300      	movs	r3, #0
 8005fa4:	61fb      	str	r3, [r7, #28]
 8005fa6:	e004      	b.n	8005fb2 <xTaskCheckForTimeOut+0xae>
 8005fa8:	683b      	ldr	r3, [r7, #0]
 8005faa:	2200      	movs	r2, #0
 8005fac:	601a      	str	r2, [r3, #0]
 8005fae:	2301      	movs	r3, #1
 8005fb0:	61fb      	str	r3, [r7, #28]
 8005fb2:	f001 f8bf 	bl	8007134 <vPortExitCritical>
 8005fb6:	69fb      	ldr	r3, [r7, #28]
 8005fb8:	4618      	mov	r0, r3
 8005fba:	3720      	adds	r7, #32
 8005fbc:	46bd      	mov	sp, r7
 8005fbe:	bd80      	pop	{r7, pc}
 8005fc0:	200010b4 	.word	0x200010b4
 8005fc4:	200010c8 	.word	0x200010c8

08005fc8 <vTaskMissedYield>:
 8005fc8:	b480      	push	{r7}
 8005fca:	af00      	add	r7, sp, #0
 8005fcc:	4b03      	ldr	r3, [pc, #12]	; (8005fdc <vTaskMissedYield+0x14>)
 8005fce:	2201      	movs	r2, #1
 8005fd0:	601a      	str	r2, [r3, #0]
 8005fd2:	bf00      	nop
 8005fd4:	46bd      	mov	sp, r7
 8005fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fda:	4770      	bx	lr
 8005fdc:	200010c4 	.word	0x200010c4

08005fe0 <prvIdleTask>:
 8005fe0:	b580      	push	{r7, lr}
 8005fe2:	b082      	sub	sp, #8
 8005fe4:	af00      	add	r7, sp, #0
 8005fe6:	6078      	str	r0, [r7, #4]
 8005fe8:	f000 f8a6 	bl	8006138 <prvCheckTasksWaitingTermination>
 8005fec:	4b06      	ldr	r3, [pc, #24]	; (8006008 <prvIdleTask+0x28>)
 8005fee:	681b      	ldr	r3, [r3, #0]
 8005ff0:	2b01      	cmp	r3, #1
 8005ff2:	d9f9      	bls.n	8005fe8 <prvIdleTask+0x8>
 8005ff4:	4b05      	ldr	r3, [pc, #20]	; (800600c <prvIdleTask+0x2c>)
 8005ff6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005ffa:	601a      	str	r2, [r3, #0]
 8005ffc:	f3bf 8f4f 	dsb	sy
 8006000:	f3bf 8f6f 	isb	sy
 8006004:	e7f0      	b.n	8005fe8 <prvIdleTask+0x8>
 8006006:	bf00      	nop
 8006008:	20000be0 	.word	0x20000be0
 800600c:	e000ed04 	.word	0xe000ed04

08006010 <vTaskSetThreadLocalStoragePointer>:
 8006010:	b480      	push	{r7}
 8006012:	b087      	sub	sp, #28
 8006014:	af00      	add	r7, sp, #0
 8006016:	60f8      	str	r0, [r7, #12]
 8006018:	60b9      	str	r1, [r7, #8]
 800601a:	607a      	str	r2, [r7, #4]
 800601c:	68bb      	ldr	r3, [r7, #8]
 800601e:	2b00      	cmp	r3, #0
 8006020:	dc1c      	bgt.n	800605c <vTaskSetThreadLocalStoragePointer+0x4c>
 8006022:	68fb      	ldr	r3, [r7, #12]
 8006024:	2b00      	cmp	r3, #0
 8006026:	d102      	bne.n	800602e <vTaskSetThreadLocalStoragePointer+0x1e>
 8006028:	4b0f      	ldr	r3, [pc, #60]	; (8006068 <vTaskSetThreadLocalStoragePointer+0x58>)
 800602a:	681b      	ldr	r3, [r3, #0]
 800602c:	e000      	b.n	8006030 <vTaskSetThreadLocalStoragePointer+0x20>
 800602e:	68fb      	ldr	r3, [r7, #12]
 8006030:	617b      	str	r3, [r7, #20]
 8006032:	697b      	ldr	r3, [r7, #20]
 8006034:	2b00      	cmp	r3, #0
 8006036:	d10a      	bne.n	800604e <vTaskSetThreadLocalStoragePointer+0x3e>
 8006038:	f04f 0350 	mov.w	r3, #80	; 0x50
 800603c:	f383 8811 	msr	BASEPRI, r3
 8006040:	f3bf 8f6f 	isb	sy
 8006044:	f3bf 8f4f 	dsb	sy
 8006048:	613b      	str	r3, [r7, #16]
 800604a:	bf00      	nop
 800604c:	e7fe      	b.n	800604c <vTaskSetThreadLocalStoragePointer+0x3c>
 800604e:	697a      	ldr	r2, [r7, #20]
 8006050:	68bb      	ldr	r3, [r7, #8]
 8006052:	3314      	adds	r3, #20
 8006054:	009b      	lsls	r3, r3, #2
 8006056:	4413      	add	r3, r2
 8006058:	687a      	ldr	r2, [r7, #4]
 800605a:	605a      	str	r2, [r3, #4]
 800605c:	bf00      	nop
 800605e:	371c      	adds	r7, #28
 8006060:	46bd      	mov	sp, r7
 8006062:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006066:	4770      	bx	lr
 8006068:	20000bdc 	.word	0x20000bdc

0800606c <pvTaskGetThreadLocalStoragePointer>:
 800606c:	b480      	push	{r7}
 800606e:	b085      	sub	sp, #20
 8006070:	af00      	add	r7, sp, #0
 8006072:	6078      	str	r0, [r7, #4]
 8006074:	6039      	str	r1, [r7, #0]
 8006076:	2300      	movs	r3, #0
 8006078:	60fb      	str	r3, [r7, #12]
 800607a:	683b      	ldr	r3, [r7, #0]
 800607c:	2b00      	cmp	r3, #0
 800607e:	dc0f      	bgt.n	80060a0 <pvTaskGetThreadLocalStoragePointer+0x34>
 8006080:	687b      	ldr	r3, [r7, #4]
 8006082:	2b00      	cmp	r3, #0
 8006084:	d102      	bne.n	800608c <pvTaskGetThreadLocalStoragePointer+0x20>
 8006086:	4b0b      	ldr	r3, [pc, #44]	; (80060b4 <pvTaskGetThreadLocalStoragePointer+0x48>)
 8006088:	681b      	ldr	r3, [r3, #0]
 800608a:	e000      	b.n	800608e <pvTaskGetThreadLocalStoragePointer+0x22>
 800608c:	687b      	ldr	r3, [r7, #4]
 800608e:	60bb      	str	r3, [r7, #8]
 8006090:	68ba      	ldr	r2, [r7, #8]
 8006092:	683b      	ldr	r3, [r7, #0]
 8006094:	3314      	adds	r3, #20
 8006096:	009b      	lsls	r3, r3, #2
 8006098:	4413      	add	r3, r2
 800609a:	685b      	ldr	r3, [r3, #4]
 800609c:	60fb      	str	r3, [r7, #12]
 800609e:	e001      	b.n	80060a4 <pvTaskGetThreadLocalStoragePointer+0x38>
 80060a0:	2300      	movs	r3, #0
 80060a2:	60fb      	str	r3, [r7, #12]
 80060a4:	68fb      	ldr	r3, [r7, #12]
 80060a6:	4618      	mov	r0, r3
 80060a8:	3714      	adds	r7, #20
 80060aa:	46bd      	mov	sp, r7
 80060ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060b0:	4770      	bx	lr
 80060b2:	bf00      	nop
 80060b4:	20000bdc 	.word	0x20000bdc

080060b8 <prvInitialiseTaskLists>:
 80060b8:	b580      	push	{r7, lr}
 80060ba:	b082      	sub	sp, #8
 80060bc:	af00      	add	r7, sp, #0
 80060be:	2300      	movs	r3, #0
 80060c0:	607b      	str	r3, [r7, #4]
 80060c2:	e00c      	b.n	80060de <prvInitialiseTaskLists+0x26>
 80060c4:	687a      	ldr	r2, [r7, #4]
 80060c6:	4613      	mov	r3, r2
 80060c8:	009b      	lsls	r3, r3, #2
 80060ca:	4413      	add	r3, r2
 80060cc:	009b      	lsls	r3, r3, #2
 80060ce:	4a12      	ldr	r2, [pc, #72]	; (8006118 <prvInitialiseTaskLists+0x60>)
 80060d0:	4413      	add	r3, r2
 80060d2:	4618      	mov	r0, r3
 80060d4:	f7fe f868 	bl	80041a8 <vListInitialise>
 80060d8:	687b      	ldr	r3, [r7, #4]
 80060da:	3301      	adds	r3, #1
 80060dc:	607b      	str	r3, [r7, #4]
 80060de:	687b      	ldr	r3, [r7, #4]
 80060e0:	2b37      	cmp	r3, #55	; 0x37
 80060e2:	d9ef      	bls.n	80060c4 <prvInitialiseTaskLists+0xc>
 80060e4:	480d      	ldr	r0, [pc, #52]	; (800611c <prvInitialiseTaskLists+0x64>)
 80060e6:	f7fe f85f 	bl	80041a8 <vListInitialise>
 80060ea:	480d      	ldr	r0, [pc, #52]	; (8006120 <prvInitialiseTaskLists+0x68>)
 80060ec:	f7fe f85c 	bl	80041a8 <vListInitialise>
 80060f0:	480c      	ldr	r0, [pc, #48]	; (8006124 <prvInitialiseTaskLists+0x6c>)
 80060f2:	f7fe f859 	bl	80041a8 <vListInitialise>
 80060f6:	480c      	ldr	r0, [pc, #48]	; (8006128 <prvInitialiseTaskLists+0x70>)
 80060f8:	f7fe f856 	bl	80041a8 <vListInitialise>
 80060fc:	480b      	ldr	r0, [pc, #44]	; (800612c <prvInitialiseTaskLists+0x74>)
 80060fe:	f7fe f853 	bl	80041a8 <vListInitialise>
 8006102:	4b0b      	ldr	r3, [pc, #44]	; (8006130 <prvInitialiseTaskLists+0x78>)
 8006104:	4a05      	ldr	r2, [pc, #20]	; (800611c <prvInitialiseTaskLists+0x64>)
 8006106:	601a      	str	r2, [r3, #0]
 8006108:	4b0a      	ldr	r3, [pc, #40]	; (8006134 <prvInitialiseTaskLists+0x7c>)
 800610a:	4a05      	ldr	r2, [pc, #20]	; (8006120 <prvInitialiseTaskLists+0x68>)
 800610c:	601a      	str	r2, [r3, #0]
 800610e:	bf00      	nop
 8006110:	3708      	adds	r7, #8
 8006112:	46bd      	mov	sp, r7
 8006114:	bd80      	pop	{r7, pc}
 8006116:	bf00      	nop
 8006118:	20000be0 	.word	0x20000be0
 800611c:	20001040 	.word	0x20001040
 8006120:	20001054 	.word	0x20001054
 8006124:	20001070 	.word	0x20001070
 8006128:	20001084 	.word	0x20001084
 800612c:	2000109c 	.word	0x2000109c
 8006130:	20001068 	.word	0x20001068
 8006134:	2000106c 	.word	0x2000106c

08006138 <prvCheckTasksWaitingTermination>:
 8006138:	b580      	push	{r7, lr}
 800613a:	b082      	sub	sp, #8
 800613c:	af00      	add	r7, sp, #0
 800613e:	e019      	b.n	8006174 <prvCheckTasksWaitingTermination+0x3c>
 8006140:	f000 ffc8 	bl	80070d4 <vPortEnterCritical>
 8006144:	4b10      	ldr	r3, [pc, #64]	; (8006188 <prvCheckTasksWaitingTermination+0x50>)
 8006146:	68db      	ldr	r3, [r3, #12]
 8006148:	68db      	ldr	r3, [r3, #12]
 800614a:	607b      	str	r3, [r7, #4]
 800614c:	687b      	ldr	r3, [r7, #4]
 800614e:	3304      	adds	r3, #4
 8006150:	4618      	mov	r0, r3
 8006152:	f7fe f8b3 	bl	80042bc <uxListRemove>
 8006156:	4b0d      	ldr	r3, [pc, #52]	; (800618c <prvCheckTasksWaitingTermination+0x54>)
 8006158:	681b      	ldr	r3, [r3, #0]
 800615a:	3b01      	subs	r3, #1
 800615c:	4a0b      	ldr	r2, [pc, #44]	; (800618c <prvCheckTasksWaitingTermination+0x54>)
 800615e:	6013      	str	r3, [r2, #0]
 8006160:	4b0b      	ldr	r3, [pc, #44]	; (8006190 <prvCheckTasksWaitingTermination+0x58>)
 8006162:	681b      	ldr	r3, [r3, #0]
 8006164:	3b01      	subs	r3, #1
 8006166:	4a0a      	ldr	r2, [pc, #40]	; (8006190 <prvCheckTasksWaitingTermination+0x58>)
 8006168:	6013      	str	r3, [r2, #0]
 800616a:	f000 ffe3 	bl	8007134 <vPortExitCritical>
 800616e:	6878      	ldr	r0, [r7, #4]
 8006170:	f000 f810 	bl	8006194 <prvDeleteTCB>
 8006174:	4b06      	ldr	r3, [pc, #24]	; (8006190 <prvCheckTasksWaitingTermination+0x58>)
 8006176:	681b      	ldr	r3, [r3, #0]
 8006178:	2b00      	cmp	r3, #0
 800617a:	d1e1      	bne.n	8006140 <prvCheckTasksWaitingTermination+0x8>
 800617c:	bf00      	nop
 800617e:	bf00      	nop
 8006180:	3708      	adds	r7, #8
 8006182:	46bd      	mov	sp, r7
 8006184:	bd80      	pop	{r7, pc}
 8006186:	bf00      	nop
 8006188:	20001084 	.word	0x20001084
 800618c:	200010b0 	.word	0x200010b0
 8006190:	20001098 	.word	0x20001098

08006194 <prvDeleteTCB>:
 8006194:	b580      	push	{r7, lr}
 8006196:	b084      	sub	sp, #16
 8006198:	af00      	add	r7, sp, #0
 800619a:	6078      	str	r0, [r7, #4]
 800619c:	687b      	ldr	r3, [r7, #4]
 800619e:	3358      	adds	r3, #88	; 0x58
 80061a0:	4618      	mov	r0, r3
 80061a2:	f002 f92d 	bl	8008400 <_reclaim_reent>
 80061a6:	687b      	ldr	r3, [r7, #4]
 80061a8:	f893 30a9 	ldrb.w	r3, [r3, #169]	; 0xa9
 80061ac:	2b00      	cmp	r3, #0
 80061ae:	d108      	bne.n	80061c2 <prvDeleteTCB+0x2e>
 80061b0:	687b      	ldr	r3, [r7, #4]
 80061b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80061b4:	4618      	mov	r0, r3
 80061b6:	f001 f97b 	bl	80074b0 <vPortFree>
 80061ba:	6878      	ldr	r0, [r7, #4]
 80061bc:	f001 f978 	bl	80074b0 <vPortFree>
 80061c0:	e018      	b.n	80061f4 <prvDeleteTCB+0x60>
 80061c2:	687b      	ldr	r3, [r7, #4]
 80061c4:	f893 30a9 	ldrb.w	r3, [r3, #169]	; 0xa9
 80061c8:	2b01      	cmp	r3, #1
 80061ca:	d103      	bne.n	80061d4 <prvDeleteTCB+0x40>
 80061cc:	6878      	ldr	r0, [r7, #4]
 80061ce:	f001 f96f 	bl	80074b0 <vPortFree>
 80061d2:	e00f      	b.n	80061f4 <prvDeleteTCB+0x60>
 80061d4:	687b      	ldr	r3, [r7, #4]
 80061d6:	f893 30a9 	ldrb.w	r3, [r3, #169]	; 0xa9
 80061da:	2b02      	cmp	r3, #2
 80061dc:	d00a      	beq.n	80061f4 <prvDeleteTCB+0x60>
 80061de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80061e2:	f383 8811 	msr	BASEPRI, r3
 80061e6:	f3bf 8f6f 	isb	sy
 80061ea:	f3bf 8f4f 	dsb	sy
 80061ee:	60fb      	str	r3, [r7, #12]
 80061f0:	bf00      	nop
 80061f2:	e7fe      	b.n	80061f2 <prvDeleteTCB+0x5e>
 80061f4:	bf00      	nop
 80061f6:	3710      	adds	r7, #16
 80061f8:	46bd      	mov	sp, r7
 80061fa:	bd80      	pop	{r7, pc}

080061fc <prvResetNextTaskUnblockTime>:
 80061fc:	b480      	push	{r7}
 80061fe:	b083      	sub	sp, #12
 8006200:	af00      	add	r7, sp, #0
 8006202:	4b0c      	ldr	r3, [pc, #48]	; (8006234 <prvResetNextTaskUnblockTime+0x38>)
 8006204:	681b      	ldr	r3, [r3, #0]
 8006206:	681b      	ldr	r3, [r3, #0]
 8006208:	2b00      	cmp	r3, #0
 800620a:	d104      	bne.n	8006216 <prvResetNextTaskUnblockTime+0x1a>
 800620c:	4b0a      	ldr	r3, [pc, #40]	; (8006238 <prvResetNextTaskUnblockTime+0x3c>)
 800620e:	f04f 32ff 	mov.w	r2, #4294967295
 8006212:	601a      	str	r2, [r3, #0]
 8006214:	e008      	b.n	8006228 <prvResetNextTaskUnblockTime+0x2c>
 8006216:	4b07      	ldr	r3, [pc, #28]	; (8006234 <prvResetNextTaskUnblockTime+0x38>)
 8006218:	681b      	ldr	r3, [r3, #0]
 800621a:	68db      	ldr	r3, [r3, #12]
 800621c:	68db      	ldr	r3, [r3, #12]
 800621e:	607b      	str	r3, [r7, #4]
 8006220:	687b      	ldr	r3, [r7, #4]
 8006222:	685b      	ldr	r3, [r3, #4]
 8006224:	4a04      	ldr	r2, [pc, #16]	; (8006238 <prvResetNextTaskUnblockTime+0x3c>)
 8006226:	6013      	str	r3, [r2, #0]
 8006228:	bf00      	nop
 800622a:	370c      	adds	r7, #12
 800622c:	46bd      	mov	sp, r7
 800622e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006232:	4770      	bx	lr
 8006234:	20001068 	.word	0x20001068
 8006238:	200010d0 	.word	0x200010d0

0800623c <xTaskGetCurrentTaskHandle>:
 800623c:	b480      	push	{r7}
 800623e:	b083      	sub	sp, #12
 8006240:	af00      	add	r7, sp, #0
 8006242:	4b05      	ldr	r3, [pc, #20]	; (8006258 <xTaskGetCurrentTaskHandle+0x1c>)
 8006244:	681b      	ldr	r3, [r3, #0]
 8006246:	607b      	str	r3, [r7, #4]
 8006248:	687b      	ldr	r3, [r7, #4]
 800624a:	4618      	mov	r0, r3
 800624c:	370c      	adds	r7, #12
 800624e:	46bd      	mov	sp, r7
 8006250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006254:	4770      	bx	lr
 8006256:	bf00      	nop
 8006258:	20000bdc 	.word	0x20000bdc

0800625c <xTaskGetSchedulerState>:
 800625c:	b480      	push	{r7}
 800625e:	b083      	sub	sp, #12
 8006260:	af00      	add	r7, sp, #0
 8006262:	4b0b      	ldr	r3, [pc, #44]	; (8006290 <xTaskGetSchedulerState+0x34>)
 8006264:	681b      	ldr	r3, [r3, #0]
 8006266:	2b00      	cmp	r3, #0
 8006268:	d102      	bne.n	8006270 <xTaskGetSchedulerState+0x14>
 800626a:	2301      	movs	r3, #1
 800626c:	607b      	str	r3, [r7, #4]
 800626e:	e008      	b.n	8006282 <xTaskGetSchedulerState+0x26>
 8006270:	4b08      	ldr	r3, [pc, #32]	; (8006294 <xTaskGetSchedulerState+0x38>)
 8006272:	681b      	ldr	r3, [r3, #0]
 8006274:	2b00      	cmp	r3, #0
 8006276:	d102      	bne.n	800627e <xTaskGetSchedulerState+0x22>
 8006278:	2302      	movs	r3, #2
 800627a:	607b      	str	r3, [r7, #4]
 800627c:	e001      	b.n	8006282 <xTaskGetSchedulerState+0x26>
 800627e:	2300      	movs	r3, #0
 8006280:	607b      	str	r3, [r7, #4]
 8006282:	687b      	ldr	r3, [r7, #4]
 8006284:	4618      	mov	r0, r3
 8006286:	370c      	adds	r7, #12
 8006288:	46bd      	mov	sp, r7
 800628a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800628e:	4770      	bx	lr
 8006290:	200010bc 	.word	0x200010bc
 8006294:	200010d8 	.word	0x200010d8

08006298 <xTaskPriorityInherit>:
 8006298:	b580      	push	{r7, lr}
 800629a:	b084      	sub	sp, #16
 800629c:	af00      	add	r7, sp, #0
 800629e:	6078      	str	r0, [r7, #4]
 80062a0:	687b      	ldr	r3, [r7, #4]
 80062a2:	60bb      	str	r3, [r7, #8]
 80062a4:	2300      	movs	r3, #0
 80062a6:	60fb      	str	r3, [r7, #12]
 80062a8:	687b      	ldr	r3, [r7, #4]
 80062aa:	2b00      	cmp	r3, #0
 80062ac:	d051      	beq.n	8006352 <xTaskPriorityInherit+0xba>
 80062ae:	68bb      	ldr	r3, [r7, #8]
 80062b0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80062b2:	4b2a      	ldr	r3, [pc, #168]	; (800635c <xTaskPriorityInherit+0xc4>)
 80062b4:	681b      	ldr	r3, [r3, #0]
 80062b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80062b8:	429a      	cmp	r2, r3
 80062ba:	d241      	bcs.n	8006340 <xTaskPriorityInherit+0xa8>
 80062bc:	68bb      	ldr	r3, [r7, #8]
 80062be:	699b      	ldr	r3, [r3, #24]
 80062c0:	2b00      	cmp	r3, #0
 80062c2:	db06      	blt.n	80062d2 <xTaskPriorityInherit+0x3a>
 80062c4:	4b25      	ldr	r3, [pc, #148]	; (800635c <xTaskPriorityInherit+0xc4>)
 80062c6:	681b      	ldr	r3, [r3, #0]
 80062c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80062ca:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 80062ce:	68bb      	ldr	r3, [r7, #8]
 80062d0:	619a      	str	r2, [r3, #24]
 80062d2:	68bb      	ldr	r3, [r7, #8]
 80062d4:	6959      	ldr	r1, [r3, #20]
 80062d6:	68bb      	ldr	r3, [r7, #8]
 80062d8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80062da:	4613      	mov	r3, r2
 80062dc:	009b      	lsls	r3, r3, #2
 80062de:	4413      	add	r3, r2
 80062e0:	009b      	lsls	r3, r3, #2
 80062e2:	4a1f      	ldr	r2, [pc, #124]	; (8006360 <xTaskPriorityInherit+0xc8>)
 80062e4:	4413      	add	r3, r2
 80062e6:	4299      	cmp	r1, r3
 80062e8:	d122      	bne.n	8006330 <xTaskPriorityInherit+0x98>
 80062ea:	68bb      	ldr	r3, [r7, #8]
 80062ec:	3304      	adds	r3, #4
 80062ee:	4618      	mov	r0, r3
 80062f0:	f7fd ffe4 	bl	80042bc <uxListRemove>
 80062f4:	4b19      	ldr	r3, [pc, #100]	; (800635c <xTaskPriorityInherit+0xc4>)
 80062f6:	681b      	ldr	r3, [r3, #0]
 80062f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80062fa:	68bb      	ldr	r3, [r7, #8]
 80062fc:	62da      	str	r2, [r3, #44]	; 0x2c
 80062fe:	68bb      	ldr	r3, [r7, #8]
 8006300:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006302:	4b18      	ldr	r3, [pc, #96]	; (8006364 <xTaskPriorityInherit+0xcc>)
 8006304:	681b      	ldr	r3, [r3, #0]
 8006306:	429a      	cmp	r2, r3
 8006308:	d903      	bls.n	8006312 <xTaskPriorityInherit+0x7a>
 800630a:	68bb      	ldr	r3, [r7, #8]
 800630c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800630e:	4a15      	ldr	r2, [pc, #84]	; (8006364 <xTaskPriorityInherit+0xcc>)
 8006310:	6013      	str	r3, [r2, #0]
 8006312:	68bb      	ldr	r3, [r7, #8]
 8006314:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006316:	4613      	mov	r3, r2
 8006318:	009b      	lsls	r3, r3, #2
 800631a:	4413      	add	r3, r2
 800631c:	009b      	lsls	r3, r3, #2
 800631e:	4a10      	ldr	r2, [pc, #64]	; (8006360 <xTaskPriorityInherit+0xc8>)
 8006320:	441a      	add	r2, r3
 8006322:	68bb      	ldr	r3, [r7, #8]
 8006324:	3304      	adds	r3, #4
 8006326:	4619      	mov	r1, r3
 8006328:	4610      	mov	r0, r2
 800632a:	f7fd ff6a 	bl	8004202 <vListInsertEnd>
 800632e:	e004      	b.n	800633a <xTaskPriorityInherit+0xa2>
 8006330:	4b0a      	ldr	r3, [pc, #40]	; (800635c <xTaskPriorityInherit+0xc4>)
 8006332:	681b      	ldr	r3, [r3, #0]
 8006334:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006336:	68bb      	ldr	r3, [r7, #8]
 8006338:	62da      	str	r2, [r3, #44]	; 0x2c
 800633a:	2301      	movs	r3, #1
 800633c:	60fb      	str	r3, [r7, #12]
 800633e:	e008      	b.n	8006352 <xTaskPriorityInherit+0xba>
 8006340:	68bb      	ldr	r3, [r7, #8]
 8006342:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8006344:	4b05      	ldr	r3, [pc, #20]	; (800635c <xTaskPriorityInherit+0xc4>)
 8006346:	681b      	ldr	r3, [r3, #0]
 8006348:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800634a:	429a      	cmp	r2, r3
 800634c:	d201      	bcs.n	8006352 <xTaskPriorityInherit+0xba>
 800634e:	2301      	movs	r3, #1
 8006350:	60fb      	str	r3, [r7, #12]
 8006352:	68fb      	ldr	r3, [r7, #12]
 8006354:	4618      	mov	r0, r3
 8006356:	3710      	adds	r7, #16
 8006358:	46bd      	mov	sp, r7
 800635a:	bd80      	pop	{r7, pc}
 800635c:	20000bdc 	.word	0x20000bdc
 8006360:	20000be0 	.word	0x20000be0
 8006364:	200010b8 	.word	0x200010b8

08006368 <xTaskPriorityDisinherit>:
 8006368:	b580      	push	{r7, lr}
 800636a:	b086      	sub	sp, #24
 800636c:	af00      	add	r7, sp, #0
 800636e:	6078      	str	r0, [r7, #4]
 8006370:	687b      	ldr	r3, [r7, #4]
 8006372:	613b      	str	r3, [r7, #16]
 8006374:	2300      	movs	r3, #0
 8006376:	617b      	str	r3, [r7, #20]
 8006378:	687b      	ldr	r3, [r7, #4]
 800637a:	2b00      	cmp	r3, #0
 800637c:	d056      	beq.n	800642c <xTaskPriorityDisinherit+0xc4>
 800637e:	4b2e      	ldr	r3, [pc, #184]	; (8006438 <xTaskPriorityDisinherit+0xd0>)
 8006380:	681b      	ldr	r3, [r3, #0]
 8006382:	693a      	ldr	r2, [r7, #16]
 8006384:	429a      	cmp	r2, r3
 8006386:	d00a      	beq.n	800639e <xTaskPriorityDisinherit+0x36>
 8006388:	f04f 0350 	mov.w	r3, #80	; 0x50
 800638c:	f383 8811 	msr	BASEPRI, r3
 8006390:	f3bf 8f6f 	isb	sy
 8006394:	f3bf 8f4f 	dsb	sy
 8006398:	60fb      	str	r3, [r7, #12]
 800639a:	bf00      	nop
 800639c:	e7fe      	b.n	800639c <xTaskPriorityDisinherit+0x34>
 800639e:	693b      	ldr	r3, [r7, #16]
 80063a0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80063a2:	2b00      	cmp	r3, #0
 80063a4:	d10a      	bne.n	80063bc <xTaskPriorityDisinherit+0x54>
 80063a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80063aa:	f383 8811 	msr	BASEPRI, r3
 80063ae:	f3bf 8f6f 	isb	sy
 80063b2:	f3bf 8f4f 	dsb	sy
 80063b6:	60bb      	str	r3, [r7, #8]
 80063b8:	bf00      	nop
 80063ba:	e7fe      	b.n	80063ba <xTaskPriorityDisinherit+0x52>
 80063bc:	693b      	ldr	r3, [r7, #16]
 80063be:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80063c0:	1e5a      	subs	r2, r3, #1
 80063c2:	693b      	ldr	r3, [r7, #16]
 80063c4:	651a      	str	r2, [r3, #80]	; 0x50
 80063c6:	693b      	ldr	r3, [r7, #16]
 80063c8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80063ca:	693b      	ldr	r3, [r7, #16]
 80063cc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80063ce:	429a      	cmp	r2, r3
 80063d0:	d02c      	beq.n	800642c <xTaskPriorityDisinherit+0xc4>
 80063d2:	693b      	ldr	r3, [r7, #16]
 80063d4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80063d6:	2b00      	cmp	r3, #0
 80063d8:	d128      	bne.n	800642c <xTaskPriorityDisinherit+0xc4>
 80063da:	693b      	ldr	r3, [r7, #16]
 80063dc:	3304      	adds	r3, #4
 80063de:	4618      	mov	r0, r3
 80063e0:	f7fd ff6c 	bl	80042bc <uxListRemove>
 80063e4:	693b      	ldr	r3, [r7, #16]
 80063e6:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80063e8:	693b      	ldr	r3, [r7, #16]
 80063ea:	62da      	str	r2, [r3, #44]	; 0x2c
 80063ec:	693b      	ldr	r3, [r7, #16]
 80063ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80063f0:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 80063f4:	693b      	ldr	r3, [r7, #16]
 80063f6:	619a      	str	r2, [r3, #24]
 80063f8:	693b      	ldr	r3, [r7, #16]
 80063fa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80063fc:	4b0f      	ldr	r3, [pc, #60]	; (800643c <xTaskPriorityDisinherit+0xd4>)
 80063fe:	681b      	ldr	r3, [r3, #0]
 8006400:	429a      	cmp	r2, r3
 8006402:	d903      	bls.n	800640c <xTaskPriorityDisinherit+0xa4>
 8006404:	693b      	ldr	r3, [r7, #16]
 8006406:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006408:	4a0c      	ldr	r2, [pc, #48]	; (800643c <xTaskPriorityDisinherit+0xd4>)
 800640a:	6013      	str	r3, [r2, #0]
 800640c:	693b      	ldr	r3, [r7, #16]
 800640e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006410:	4613      	mov	r3, r2
 8006412:	009b      	lsls	r3, r3, #2
 8006414:	4413      	add	r3, r2
 8006416:	009b      	lsls	r3, r3, #2
 8006418:	4a09      	ldr	r2, [pc, #36]	; (8006440 <xTaskPriorityDisinherit+0xd8>)
 800641a:	441a      	add	r2, r3
 800641c:	693b      	ldr	r3, [r7, #16]
 800641e:	3304      	adds	r3, #4
 8006420:	4619      	mov	r1, r3
 8006422:	4610      	mov	r0, r2
 8006424:	f7fd feed 	bl	8004202 <vListInsertEnd>
 8006428:	2301      	movs	r3, #1
 800642a:	617b      	str	r3, [r7, #20]
 800642c:	697b      	ldr	r3, [r7, #20]
 800642e:	4618      	mov	r0, r3
 8006430:	3718      	adds	r7, #24
 8006432:	46bd      	mov	sp, r7
 8006434:	bd80      	pop	{r7, pc}
 8006436:	bf00      	nop
 8006438:	20000bdc 	.word	0x20000bdc
 800643c:	200010b8 	.word	0x200010b8
 8006440:	20000be0 	.word	0x20000be0

08006444 <vTaskPriorityDisinheritAfterTimeout>:
 8006444:	b580      	push	{r7, lr}
 8006446:	b088      	sub	sp, #32
 8006448:	af00      	add	r7, sp, #0
 800644a:	6078      	str	r0, [r7, #4]
 800644c:	6039      	str	r1, [r7, #0]
 800644e:	687b      	ldr	r3, [r7, #4]
 8006450:	61bb      	str	r3, [r7, #24]
 8006452:	2301      	movs	r3, #1
 8006454:	617b      	str	r3, [r7, #20]
 8006456:	687b      	ldr	r3, [r7, #4]
 8006458:	2b00      	cmp	r3, #0
 800645a:	d06a      	beq.n	8006532 <vTaskPriorityDisinheritAfterTimeout+0xee>
 800645c:	69bb      	ldr	r3, [r7, #24]
 800645e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006460:	2b00      	cmp	r3, #0
 8006462:	d10a      	bne.n	800647a <vTaskPriorityDisinheritAfterTimeout+0x36>
 8006464:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006468:	f383 8811 	msr	BASEPRI, r3
 800646c:	f3bf 8f6f 	isb	sy
 8006470:	f3bf 8f4f 	dsb	sy
 8006474:	60fb      	str	r3, [r7, #12]
 8006476:	bf00      	nop
 8006478:	e7fe      	b.n	8006478 <vTaskPriorityDisinheritAfterTimeout+0x34>
 800647a:	69bb      	ldr	r3, [r7, #24]
 800647c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800647e:	683a      	ldr	r2, [r7, #0]
 8006480:	429a      	cmp	r2, r3
 8006482:	d902      	bls.n	800648a <vTaskPriorityDisinheritAfterTimeout+0x46>
 8006484:	683b      	ldr	r3, [r7, #0]
 8006486:	61fb      	str	r3, [r7, #28]
 8006488:	e002      	b.n	8006490 <vTaskPriorityDisinheritAfterTimeout+0x4c>
 800648a:	69bb      	ldr	r3, [r7, #24]
 800648c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800648e:	61fb      	str	r3, [r7, #28]
 8006490:	69bb      	ldr	r3, [r7, #24]
 8006492:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006494:	69fa      	ldr	r2, [r7, #28]
 8006496:	429a      	cmp	r2, r3
 8006498:	d04b      	beq.n	8006532 <vTaskPriorityDisinheritAfterTimeout+0xee>
 800649a:	69bb      	ldr	r3, [r7, #24]
 800649c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800649e:	697a      	ldr	r2, [r7, #20]
 80064a0:	429a      	cmp	r2, r3
 80064a2:	d146      	bne.n	8006532 <vTaskPriorityDisinheritAfterTimeout+0xee>
 80064a4:	4b25      	ldr	r3, [pc, #148]	; (800653c <vTaskPriorityDisinheritAfterTimeout+0xf8>)
 80064a6:	681b      	ldr	r3, [r3, #0]
 80064a8:	69ba      	ldr	r2, [r7, #24]
 80064aa:	429a      	cmp	r2, r3
 80064ac:	d10a      	bne.n	80064c4 <vTaskPriorityDisinheritAfterTimeout+0x80>
 80064ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80064b2:	f383 8811 	msr	BASEPRI, r3
 80064b6:	f3bf 8f6f 	isb	sy
 80064ba:	f3bf 8f4f 	dsb	sy
 80064be:	60bb      	str	r3, [r7, #8]
 80064c0:	bf00      	nop
 80064c2:	e7fe      	b.n	80064c2 <vTaskPriorityDisinheritAfterTimeout+0x7e>
 80064c4:	69bb      	ldr	r3, [r7, #24]
 80064c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80064c8:	613b      	str	r3, [r7, #16]
 80064ca:	69bb      	ldr	r3, [r7, #24]
 80064cc:	69fa      	ldr	r2, [r7, #28]
 80064ce:	62da      	str	r2, [r3, #44]	; 0x2c
 80064d0:	69bb      	ldr	r3, [r7, #24]
 80064d2:	699b      	ldr	r3, [r3, #24]
 80064d4:	2b00      	cmp	r3, #0
 80064d6:	db04      	blt.n	80064e2 <vTaskPriorityDisinheritAfterTimeout+0x9e>
 80064d8:	69fb      	ldr	r3, [r7, #28]
 80064da:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 80064de:	69bb      	ldr	r3, [r7, #24]
 80064e0:	619a      	str	r2, [r3, #24]
 80064e2:	69bb      	ldr	r3, [r7, #24]
 80064e4:	6959      	ldr	r1, [r3, #20]
 80064e6:	693a      	ldr	r2, [r7, #16]
 80064e8:	4613      	mov	r3, r2
 80064ea:	009b      	lsls	r3, r3, #2
 80064ec:	4413      	add	r3, r2
 80064ee:	009b      	lsls	r3, r3, #2
 80064f0:	4a13      	ldr	r2, [pc, #76]	; (8006540 <vTaskPriorityDisinheritAfterTimeout+0xfc>)
 80064f2:	4413      	add	r3, r2
 80064f4:	4299      	cmp	r1, r3
 80064f6:	d11c      	bne.n	8006532 <vTaskPriorityDisinheritAfterTimeout+0xee>
 80064f8:	69bb      	ldr	r3, [r7, #24]
 80064fa:	3304      	adds	r3, #4
 80064fc:	4618      	mov	r0, r3
 80064fe:	f7fd fedd 	bl	80042bc <uxListRemove>
 8006502:	69bb      	ldr	r3, [r7, #24]
 8006504:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006506:	4b0f      	ldr	r3, [pc, #60]	; (8006544 <vTaskPriorityDisinheritAfterTimeout+0x100>)
 8006508:	681b      	ldr	r3, [r3, #0]
 800650a:	429a      	cmp	r2, r3
 800650c:	d903      	bls.n	8006516 <vTaskPriorityDisinheritAfterTimeout+0xd2>
 800650e:	69bb      	ldr	r3, [r7, #24]
 8006510:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006512:	4a0c      	ldr	r2, [pc, #48]	; (8006544 <vTaskPriorityDisinheritAfterTimeout+0x100>)
 8006514:	6013      	str	r3, [r2, #0]
 8006516:	69bb      	ldr	r3, [r7, #24]
 8006518:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800651a:	4613      	mov	r3, r2
 800651c:	009b      	lsls	r3, r3, #2
 800651e:	4413      	add	r3, r2
 8006520:	009b      	lsls	r3, r3, #2
 8006522:	4a07      	ldr	r2, [pc, #28]	; (8006540 <vTaskPriorityDisinheritAfterTimeout+0xfc>)
 8006524:	441a      	add	r2, r3
 8006526:	69bb      	ldr	r3, [r7, #24]
 8006528:	3304      	adds	r3, #4
 800652a:	4619      	mov	r1, r3
 800652c:	4610      	mov	r0, r2
 800652e:	f7fd fe68 	bl	8004202 <vListInsertEnd>
 8006532:	bf00      	nop
 8006534:	3720      	adds	r7, #32
 8006536:	46bd      	mov	sp, r7
 8006538:	bd80      	pop	{r7, pc}
 800653a:	bf00      	nop
 800653c:	20000bdc 	.word	0x20000bdc
 8006540:	20000be0 	.word	0x20000be0
 8006544:	200010b8 	.word	0x200010b8

08006548 <pvTaskIncrementMutexHeldCount>:
 8006548:	b480      	push	{r7}
 800654a:	af00      	add	r7, sp, #0
 800654c:	4b07      	ldr	r3, [pc, #28]	; (800656c <pvTaskIncrementMutexHeldCount+0x24>)
 800654e:	681b      	ldr	r3, [r3, #0]
 8006550:	2b00      	cmp	r3, #0
 8006552:	d004      	beq.n	800655e <pvTaskIncrementMutexHeldCount+0x16>
 8006554:	4b05      	ldr	r3, [pc, #20]	; (800656c <pvTaskIncrementMutexHeldCount+0x24>)
 8006556:	681b      	ldr	r3, [r3, #0]
 8006558:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800655a:	3201      	adds	r2, #1
 800655c:	651a      	str	r2, [r3, #80]	; 0x50
 800655e:	4b03      	ldr	r3, [pc, #12]	; (800656c <pvTaskIncrementMutexHeldCount+0x24>)
 8006560:	681b      	ldr	r3, [r3, #0]
 8006562:	4618      	mov	r0, r3
 8006564:	46bd      	mov	sp, r7
 8006566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800656a:	4770      	bx	lr
 800656c:	20000bdc 	.word	0x20000bdc

08006570 <ulTaskNotifyTake>:
 8006570:	b580      	push	{r7, lr}
 8006572:	b084      	sub	sp, #16
 8006574:	af00      	add	r7, sp, #0
 8006576:	6078      	str	r0, [r7, #4]
 8006578:	6039      	str	r1, [r7, #0]
 800657a:	f000 fdab 	bl	80070d4 <vPortEnterCritical>
 800657e:	4b20      	ldr	r3, [pc, #128]	; (8006600 <ulTaskNotifyTake+0x90>)
 8006580:	681b      	ldr	r3, [r3, #0]
 8006582:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8006586:	2b00      	cmp	r3, #0
 8006588:	d113      	bne.n	80065b2 <ulTaskNotifyTake+0x42>
 800658a:	4b1d      	ldr	r3, [pc, #116]	; (8006600 <ulTaskNotifyTake+0x90>)
 800658c:	681b      	ldr	r3, [r3, #0]
 800658e:	2201      	movs	r2, #1
 8006590:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 8006594:	683b      	ldr	r3, [r7, #0]
 8006596:	2b00      	cmp	r3, #0
 8006598:	d00b      	beq.n	80065b2 <ulTaskNotifyTake+0x42>
 800659a:	2101      	movs	r1, #1
 800659c:	6838      	ldr	r0, [r7, #0]
 800659e:	f000 f8c7 	bl	8006730 <prvAddCurrentTaskToDelayedList>
 80065a2:	4b18      	ldr	r3, [pc, #96]	; (8006604 <ulTaskNotifyTake+0x94>)
 80065a4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80065a8:	601a      	str	r2, [r3, #0]
 80065aa:	f3bf 8f4f 	dsb	sy
 80065ae:	f3bf 8f6f 	isb	sy
 80065b2:	f000 fdbf 	bl	8007134 <vPortExitCritical>
 80065b6:	f000 fd8d 	bl	80070d4 <vPortEnterCritical>
 80065ba:	4b11      	ldr	r3, [pc, #68]	; (8006600 <ulTaskNotifyTake+0x90>)
 80065bc:	681b      	ldr	r3, [r3, #0]
 80065be:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80065c2:	60fb      	str	r3, [r7, #12]
 80065c4:	68fb      	ldr	r3, [r7, #12]
 80065c6:	2b00      	cmp	r3, #0
 80065c8:	d00e      	beq.n	80065e8 <ulTaskNotifyTake+0x78>
 80065ca:	687b      	ldr	r3, [r7, #4]
 80065cc:	2b00      	cmp	r3, #0
 80065ce:	d005      	beq.n	80065dc <ulTaskNotifyTake+0x6c>
 80065d0:	4b0b      	ldr	r3, [pc, #44]	; (8006600 <ulTaskNotifyTake+0x90>)
 80065d2:	681b      	ldr	r3, [r3, #0]
 80065d4:	2200      	movs	r2, #0
 80065d6:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 80065da:	e005      	b.n	80065e8 <ulTaskNotifyTake+0x78>
 80065dc:	4b08      	ldr	r3, [pc, #32]	; (8006600 <ulTaskNotifyTake+0x90>)
 80065de:	681b      	ldr	r3, [r3, #0]
 80065e0:	68fa      	ldr	r2, [r7, #12]
 80065e2:	3a01      	subs	r2, #1
 80065e4:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 80065e8:	4b05      	ldr	r3, [pc, #20]	; (8006600 <ulTaskNotifyTake+0x90>)
 80065ea:	681b      	ldr	r3, [r3, #0]
 80065ec:	2200      	movs	r2, #0
 80065ee:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 80065f2:	f000 fd9f 	bl	8007134 <vPortExitCritical>
 80065f6:	68fb      	ldr	r3, [r7, #12]
 80065f8:	4618      	mov	r0, r3
 80065fa:	3710      	adds	r7, #16
 80065fc:	46bd      	mov	sp, r7
 80065fe:	bd80      	pop	{r7, pc}
 8006600:	20000bdc 	.word	0x20000bdc
 8006604:	e000ed04 	.word	0xe000ed04

08006608 <vTaskNotifyGiveFromISR>:
 8006608:	b580      	push	{r7, lr}
 800660a:	b08a      	sub	sp, #40	; 0x28
 800660c:	af00      	add	r7, sp, #0
 800660e:	6078      	str	r0, [r7, #4]
 8006610:	6039      	str	r1, [r7, #0]
 8006612:	687b      	ldr	r3, [r7, #4]
 8006614:	2b00      	cmp	r3, #0
 8006616:	d10a      	bne.n	800662e <vTaskNotifyGiveFromISR+0x26>
 8006618:	f04f 0350 	mov.w	r3, #80	; 0x50
 800661c:	f383 8811 	msr	BASEPRI, r3
 8006620:	f3bf 8f6f 	isb	sy
 8006624:	f3bf 8f4f 	dsb	sy
 8006628:	61bb      	str	r3, [r7, #24]
 800662a:	bf00      	nop
 800662c:	e7fe      	b.n	800662c <vTaskNotifyGiveFromISR+0x24>
 800662e:	f000 fe33 	bl	8007298 <vPortValidateInterruptPriority>
 8006632:	687b      	ldr	r3, [r7, #4]
 8006634:	627b      	str	r3, [r7, #36]	; 0x24
 8006636:	f3ef 8211 	mrs	r2, BASEPRI
 800663a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800663e:	f383 8811 	msr	BASEPRI, r3
 8006642:	f3bf 8f6f 	isb	sy
 8006646:	f3bf 8f4f 	dsb	sy
 800664a:	617a      	str	r2, [r7, #20]
 800664c:	613b      	str	r3, [r7, #16]
 800664e:	697b      	ldr	r3, [r7, #20]
 8006650:	623b      	str	r3, [r7, #32]
 8006652:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006654:	f893 30a8 	ldrb.w	r3, [r3, #168]	; 0xa8
 8006658:	77fb      	strb	r3, [r7, #31]
 800665a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800665c:	2202      	movs	r2, #2
 800665e:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 8006662:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006664:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8006668:	1c5a      	adds	r2, r3, #1
 800666a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800666c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8006670:	7ffb      	ldrb	r3, [r7, #31]
 8006672:	2b01      	cmp	r3, #1
 8006674:	d146      	bne.n	8006704 <vTaskNotifyGiveFromISR+0xfc>
 8006676:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006678:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800667a:	2b00      	cmp	r3, #0
 800667c:	d00a      	beq.n	8006694 <vTaskNotifyGiveFromISR+0x8c>
 800667e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006682:	f383 8811 	msr	BASEPRI, r3
 8006686:	f3bf 8f6f 	isb	sy
 800668a:	f3bf 8f4f 	dsb	sy
 800668e:	60fb      	str	r3, [r7, #12]
 8006690:	bf00      	nop
 8006692:	e7fe      	b.n	8006692 <vTaskNotifyGiveFromISR+0x8a>
 8006694:	4b20      	ldr	r3, [pc, #128]	; (8006718 <vTaskNotifyGiveFromISR+0x110>)
 8006696:	681b      	ldr	r3, [r3, #0]
 8006698:	2b00      	cmp	r3, #0
 800669a:	d11d      	bne.n	80066d8 <vTaskNotifyGiveFromISR+0xd0>
 800669c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800669e:	3304      	adds	r3, #4
 80066a0:	4618      	mov	r0, r3
 80066a2:	f7fd fe0b 	bl	80042bc <uxListRemove>
 80066a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80066a8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80066aa:	4b1c      	ldr	r3, [pc, #112]	; (800671c <vTaskNotifyGiveFromISR+0x114>)
 80066ac:	681b      	ldr	r3, [r3, #0]
 80066ae:	429a      	cmp	r2, r3
 80066b0:	d903      	bls.n	80066ba <vTaskNotifyGiveFromISR+0xb2>
 80066b2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80066b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80066b6:	4a19      	ldr	r2, [pc, #100]	; (800671c <vTaskNotifyGiveFromISR+0x114>)
 80066b8:	6013      	str	r3, [r2, #0]
 80066ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80066bc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80066be:	4613      	mov	r3, r2
 80066c0:	009b      	lsls	r3, r3, #2
 80066c2:	4413      	add	r3, r2
 80066c4:	009b      	lsls	r3, r3, #2
 80066c6:	4a16      	ldr	r2, [pc, #88]	; (8006720 <vTaskNotifyGiveFromISR+0x118>)
 80066c8:	441a      	add	r2, r3
 80066ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80066cc:	3304      	adds	r3, #4
 80066ce:	4619      	mov	r1, r3
 80066d0:	4610      	mov	r0, r2
 80066d2:	f7fd fd96 	bl	8004202 <vListInsertEnd>
 80066d6:	e005      	b.n	80066e4 <vTaskNotifyGiveFromISR+0xdc>
 80066d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80066da:	3318      	adds	r3, #24
 80066dc:	4619      	mov	r1, r3
 80066de:	4811      	ldr	r0, [pc, #68]	; (8006724 <vTaskNotifyGiveFromISR+0x11c>)
 80066e0:	f7fd fd8f 	bl	8004202 <vListInsertEnd>
 80066e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80066e6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80066e8:	4b0f      	ldr	r3, [pc, #60]	; (8006728 <vTaskNotifyGiveFromISR+0x120>)
 80066ea:	681b      	ldr	r3, [r3, #0]
 80066ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80066ee:	429a      	cmp	r2, r3
 80066f0:	d908      	bls.n	8006704 <vTaskNotifyGiveFromISR+0xfc>
 80066f2:	683b      	ldr	r3, [r7, #0]
 80066f4:	2b00      	cmp	r3, #0
 80066f6:	d002      	beq.n	80066fe <vTaskNotifyGiveFromISR+0xf6>
 80066f8:	683b      	ldr	r3, [r7, #0]
 80066fa:	2201      	movs	r2, #1
 80066fc:	601a      	str	r2, [r3, #0]
 80066fe:	4b0b      	ldr	r3, [pc, #44]	; (800672c <vTaskNotifyGiveFromISR+0x124>)
 8006700:	2201      	movs	r2, #1
 8006702:	601a      	str	r2, [r3, #0]
 8006704:	6a3b      	ldr	r3, [r7, #32]
 8006706:	60bb      	str	r3, [r7, #8]
 8006708:	68bb      	ldr	r3, [r7, #8]
 800670a:	f383 8811 	msr	BASEPRI, r3
 800670e:	bf00      	nop
 8006710:	bf00      	nop
 8006712:	3728      	adds	r7, #40	; 0x28
 8006714:	46bd      	mov	sp, r7
 8006716:	bd80      	pop	{r7, pc}
 8006718:	200010d8 	.word	0x200010d8
 800671c:	200010b8 	.word	0x200010b8
 8006720:	20000be0 	.word	0x20000be0
 8006724:	20001070 	.word	0x20001070
 8006728:	20000bdc 	.word	0x20000bdc
 800672c:	200010c4 	.word	0x200010c4

08006730 <prvAddCurrentTaskToDelayedList>:
 8006730:	b580      	push	{r7, lr}
 8006732:	b084      	sub	sp, #16
 8006734:	af00      	add	r7, sp, #0
 8006736:	6078      	str	r0, [r7, #4]
 8006738:	6039      	str	r1, [r7, #0]
 800673a:	4b21      	ldr	r3, [pc, #132]	; (80067c0 <prvAddCurrentTaskToDelayedList+0x90>)
 800673c:	681b      	ldr	r3, [r3, #0]
 800673e:	60fb      	str	r3, [r7, #12]
 8006740:	4b20      	ldr	r3, [pc, #128]	; (80067c4 <prvAddCurrentTaskToDelayedList+0x94>)
 8006742:	681b      	ldr	r3, [r3, #0]
 8006744:	3304      	adds	r3, #4
 8006746:	4618      	mov	r0, r3
 8006748:	f7fd fdb8 	bl	80042bc <uxListRemove>
 800674c:	687b      	ldr	r3, [r7, #4]
 800674e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006752:	d10a      	bne.n	800676a <prvAddCurrentTaskToDelayedList+0x3a>
 8006754:	683b      	ldr	r3, [r7, #0]
 8006756:	2b00      	cmp	r3, #0
 8006758:	d007      	beq.n	800676a <prvAddCurrentTaskToDelayedList+0x3a>
 800675a:	4b1a      	ldr	r3, [pc, #104]	; (80067c4 <prvAddCurrentTaskToDelayedList+0x94>)
 800675c:	681b      	ldr	r3, [r3, #0]
 800675e:	3304      	adds	r3, #4
 8006760:	4619      	mov	r1, r3
 8006762:	4819      	ldr	r0, [pc, #100]	; (80067c8 <prvAddCurrentTaskToDelayedList+0x98>)
 8006764:	f7fd fd4d 	bl	8004202 <vListInsertEnd>
 8006768:	e026      	b.n	80067b8 <prvAddCurrentTaskToDelayedList+0x88>
 800676a:	68fa      	ldr	r2, [r7, #12]
 800676c:	687b      	ldr	r3, [r7, #4]
 800676e:	4413      	add	r3, r2
 8006770:	60bb      	str	r3, [r7, #8]
 8006772:	4b14      	ldr	r3, [pc, #80]	; (80067c4 <prvAddCurrentTaskToDelayedList+0x94>)
 8006774:	681b      	ldr	r3, [r3, #0]
 8006776:	68ba      	ldr	r2, [r7, #8]
 8006778:	605a      	str	r2, [r3, #4]
 800677a:	68ba      	ldr	r2, [r7, #8]
 800677c:	68fb      	ldr	r3, [r7, #12]
 800677e:	429a      	cmp	r2, r3
 8006780:	d209      	bcs.n	8006796 <prvAddCurrentTaskToDelayedList+0x66>
 8006782:	4b12      	ldr	r3, [pc, #72]	; (80067cc <prvAddCurrentTaskToDelayedList+0x9c>)
 8006784:	681a      	ldr	r2, [r3, #0]
 8006786:	4b0f      	ldr	r3, [pc, #60]	; (80067c4 <prvAddCurrentTaskToDelayedList+0x94>)
 8006788:	681b      	ldr	r3, [r3, #0]
 800678a:	3304      	adds	r3, #4
 800678c:	4619      	mov	r1, r3
 800678e:	4610      	mov	r0, r2
 8006790:	f7fd fd5b 	bl	800424a <vListInsert>
 8006794:	e010      	b.n	80067b8 <prvAddCurrentTaskToDelayedList+0x88>
 8006796:	4b0e      	ldr	r3, [pc, #56]	; (80067d0 <prvAddCurrentTaskToDelayedList+0xa0>)
 8006798:	681a      	ldr	r2, [r3, #0]
 800679a:	4b0a      	ldr	r3, [pc, #40]	; (80067c4 <prvAddCurrentTaskToDelayedList+0x94>)
 800679c:	681b      	ldr	r3, [r3, #0]
 800679e:	3304      	adds	r3, #4
 80067a0:	4619      	mov	r1, r3
 80067a2:	4610      	mov	r0, r2
 80067a4:	f7fd fd51 	bl	800424a <vListInsert>
 80067a8:	4b0a      	ldr	r3, [pc, #40]	; (80067d4 <prvAddCurrentTaskToDelayedList+0xa4>)
 80067aa:	681b      	ldr	r3, [r3, #0]
 80067ac:	68ba      	ldr	r2, [r7, #8]
 80067ae:	429a      	cmp	r2, r3
 80067b0:	d202      	bcs.n	80067b8 <prvAddCurrentTaskToDelayedList+0x88>
 80067b2:	4a08      	ldr	r2, [pc, #32]	; (80067d4 <prvAddCurrentTaskToDelayedList+0xa4>)
 80067b4:	68bb      	ldr	r3, [r7, #8]
 80067b6:	6013      	str	r3, [r2, #0]
 80067b8:	bf00      	nop
 80067ba:	3710      	adds	r7, #16
 80067bc:	46bd      	mov	sp, r7
 80067be:	bd80      	pop	{r7, pc}
 80067c0:	200010b4 	.word	0x200010b4
 80067c4:	20000bdc 	.word	0x20000bdc
 80067c8:	2000109c 	.word	0x2000109c
 80067cc:	2000106c 	.word	0x2000106c
 80067d0:	20001068 	.word	0x20001068
 80067d4:	200010d0 	.word	0x200010d0

080067d8 <xTimerCreateTimerTask>:
 80067d8:	b580      	push	{r7, lr}
 80067da:	b08a      	sub	sp, #40	; 0x28
 80067dc:	af04      	add	r7, sp, #16
 80067de:	2300      	movs	r3, #0
 80067e0:	617b      	str	r3, [r7, #20]
 80067e2:	f000 fb07 	bl	8006df4 <prvCheckForValidListAndQueue>
 80067e6:	4b1c      	ldr	r3, [pc, #112]	; (8006858 <xTimerCreateTimerTask+0x80>)
 80067e8:	681b      	ldr	r3, [r3, #0]
 80067ea:	2b00      	cmp	r3, #0
 80067ec:	d021      	beq.n	8006832 <xTimerCreateTimerTask+0x5a>
 80067ee:	2300      	movs	r3, #0
 80067f0:	60fb      	str	r3, [r7, #12]
 80067f2:	2300      	movs	r3, #0
 80067f4:	60bb      	str	r3, [r7, #8]
 80067f6:	1d3a      	adds	r2, r7, #4
 80067f8:	f107 0108 	add.w	r1, r7, #8
 80067fc:	f107 030c 	add.w	r3, r7, #12
 8006800:	4618      	mov	r0, r3
 8006802:	f7fd fcb7 	bl	8004174 <vApplicationGetTimerTaskMemory>
 8006806:	6879      	ldr	r1, [r7, #4]
 8006808:	68bb      	ldr	r3, [r7, #8]
 800680a:	68fa      	ldr	r2, [r7, #12]
 800680c:	9202      	str	r2, [sp, #8]
 800680e:	9301      	str	r3, [sp, #4]
 8006810:	2302      	movs	r3, #2
 8006812:	9300      	str	r3, [sp, #0]
 8006814:	2300      	movs	r3, #0
 8006816:	460a      	mov	r2, r1
 8006818:	4910      	ldr	r1, [pc, #64]	; (800685c <xTimerCreateTimerTask+0x84>)
 800681a:	4811      	ldr	r0, [pc, #68]	; (8006860 <xTimerCreateTimerTask+0x88>)
 800681c:	f7fe fc78 	bl	8005110 <xTaskCreateStatic>
 8006820:	4603      	mov	r3, r0
 8006822:	4a10      	ldr	r2, [pc, #64]	; (8006864 <xTimerCreateTimerTask+0x8c>)
 8006824:	6013      	str	r3, [r2, #0]
 8006826:	4b0f      	ldr	r3, [pc, #60]	; (8006864 <xTimerCreateTimerTask+0x8c>)
 8006828:	681b      	ldr	r3, [r3, #0]
 800682a:	2b00      	cmp	r3, #0
 800682c:	d001      	beq.n	8006832 <xTimerCreateTimerTask+0x5a>
 800682e:	2301      	movs	r3, #1
 8006830:	617b      	str	r3, [r7, #20]
 8006832:	697b      	ldr	r3, [r7, #20]
 8006834:	2b00      	cmp	r3, #0
 8006836:	d10a      	bne.n	800684e <xTimerCreateTimerTask+0x76>
 8006838:	f04f 0350 	mov.w	r3, #80	; 0x50
 800683c:	f383 8811 	msr	BASEPRI, r3
 8006840:	f3bf 8f6f 	isb	sy
 8006844:	f3bf 8f4f 	dsb	sy
 8006848:	613b      	str	r3, [r7, #16]
 800684a:	bf00      	nop
 800684c:	e7fe      	b.n	800684c <xTimerCreateTimerTask+0x74>
 800684e:	697b      	ldr	r3, [r7, #20]
 8006850:	4618      	mov	r0, r3
 8006852:	3718      	adds	r7, #24
 8006854:	46bd      	mov	sp, r7
 8006856:	bd80      	pop	{r7, pc}
 8006858:	2000110c 	.word	0x2000110c
 800685c:	0800a450 	.word	0x0800a450
 8006860:	0800699d 	.word	0x0800699d
 8006864:	20001110 	.word	0x20001110

08006868 <xTimerGenericCommand>:
 8006868:	b580      	push	{r7, lr}
 800686a:	b08a      	sub	sp, #40	; 0x28
 800686c:	af00      	add	r7, sp, #0
 800686e:	60f8      	str	r0, [r7, #12]
 8006870:	60b9      	str	r1, [r7, #8]
 8006872:	607a      	str	r2, [r7, #4]
 8006874:	603b      	str	r3, [r7, #0]
 8006876:	2300      	movs	r3, #0
 8006878:	627b      	str	r3, [r7, #36]	; 0x24
 800687a:	68fb      	ldr	r3, [r7, #12]
 800687c:	2b00      	cmp	r3, #0
 800687e:	d10a      	bne.n	8006896 <xTimerGenericCommand+0x2e>
 8006880:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006884:	f383 8811 	msr	BASEPRI, r3
 8006888:	f3bf 8f6f 	isb	sy
 800688c:	f3bf 8f4f 	dsb	sy
 8006890:	623b      	str	r3, [r7, #32]
 8006892:	bf00      	nop
 8006894:	e7fe      	b.n	8006894 <xTimerGenericCommand+0x2c>
 8006896:	4b1a      	ldr	r3, [pc, #104]	; (8006900 <xTimerGenericCommand+0x98>)
 8006898:	681b      	ldr	r3, [r3, #0]
 800689a:	2b00      	cmp	r3, #0
 800689c:	d02a      	beq.n	80068f4 <xTimerGenericCommand+0x8c>
 800689e:	68bb      	ldr	r3, [r7, #8]
 80068a0:	613b      	str	r3, [r7, #16]
 80068a2:	687b      	ldr	r3, [r7, #4]
 80068a4:	617b      	str	r3, [r7, #20]
 80068a6:	68fb      	ldr	r3, [r7, #12]
 80068a8:	61bb      	str	r3, [r7, #24]
 80068aa:	68bb      	ldr	r3, [r7, #8]
 80068ac:	2b05      	cmp	r3, #5
 80068ae:	dc18      	bgt.n	80068e2 <xTimerGenericCommand+0x7a>
 80068b0:	f7ff fcd4 	bl	800625c <xTaskGetSchedulerState>
 80068b4:	4603      	mov	r3, r0
 80068b6:	2b02      	cmp	r3, #2
 80068b8:	d109      	bne.n	80068ce <xTimerGenericCommand+0x66>
 80068ba:	4b11      	ldr	r3, [pc, #68]	; (8006900 <xTimerGenericCommand+0x98>)
 80068bc:	6818      	ldr	r0, [r3, #0]
 80068be:	f107 0110 	add.w	r1, r7, #16
 80068c2:	2300      	movs	r3, #0
 80068c4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80068c6:	f7fd ff17 	bl	80046f8 <xQueueGenericSend>
 80068ca:	6278      	str	r0, [r7, #36]	; 0x24
 80068cc:	e012      	b.n	80068f4 <xTimerGenericCommand+0x8c>
 80068ce:	4b0c      	ldr	r3, [pc, #48]	; (8006900 <xTimerGenericCommand+0x98>)
 80068d0:	6818      	ldr	r0, [r3, #0]
 80068d2:	f107 0110 	add.w	r1, r7, #16
 80068d6:	2300      	movs	r3, #0
 80068d8:	2200      	movs	r2, #0
 80068da:	f7fd ff0d 	bl	80046f8 <xQueueGenericSend>
 80068de:	6278      	str	r0, [r7, #36]	; 0x24
 80068e0:	e008      	b.n	80068f4 <xTimerGenericCommand+0x8c>
 80068e2:	4b07      	ldr	r3, [pc, #28]	; (8006900 <xTimerGenericCommand+0x98>)
 80068e4:	6818      	ldr	r0, [r3, #0]
 80068e6:	f107 0110 	add.w	r1, r7, #16
 80068ea:	2300      	movs	r3, #0
 80068ec:	683a      	ldr	r2, [r7, #0]
 80068ee:	f7fe f801 	bl	80048f4 <xQueueGenericSendFromISR>
 80068f2:	6278      	str	r0, [r7, #36]	; 0x24
 80068f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80068f6:	4618      	mov	r0, r3
 80068f8:	3728      	adds	r7, #40	; 0x28
 80068fa:	46bd      	mov	sp, r7
 80068fc:	bd80      	pop	{r7, pc}
 80068fe:	bf00      	nop
 8006900:	2000110c 	.word	0x2000110c

08006904 <prvProcessExpiredTimer>:
 8006904:	b580      	push	{r7, lr}
 8006906:	b088      	sub	sp, #32
 8006908:	af02      	add	r7, sp, #8
 800690a:	6078      	str	r0, [r7, #4]
 800690c:	6039      	str	r1, [r7, #0]
 800690e:	4b22      	ldr	r3, [pc, #136]	; (8006998 <prvProcessExpiredTimer+0x94>)
 8006910:	681b      	ldr	r3, [r3, #0]
 8006912:	68db      	ldr	r3, [r3, #12]
 8006914:	68db      	ldr	r3, [r3, #12]
 8006916:	617b      	str	r3, [r7, #20]
 8006918:	697b      	ldr	r3, [r7, #20]
 800691a:	3304      	adds	r3, #4
 800691c:	4618      	mov	r0, r3
 800691e:	f7fd fccd 	bl	80042bc <uxListRemove>
 8006922:	697b      	ldr	r3, [r7, #20]
 8006924:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006928:	f003 0304 	and.w	r3, r3, #4
 800692c:	2b00      	cmp	r3, #0
 800692e:	d022      	beq.n	8006976 <prvProcessExpiredTimer+0x72>
 8006930:	697b      	ldr	r3, [r7, #20]
 8006932:	699a      	ldr	r2, [r3, #24]
 8006934:	687b      	ldr	r3, [r7, #4]
 8006936:	18d1      	adds	r1, r2, r3
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	683a      	ldr	r2, [r7, #0]
 800693c:	6978      	ldr	r0, [r7, #20]
 800693e:	f000 f8d1 	bl	8006ae4 <prvInsertTimerInActiveList>
 8006942:	4603      	mov	r3, r0
 8006944:	2b00      	cmp	r3, #0
 8006946:	d01f      	beq.n	8006988 <prvProcessExpiredTimer+0x84>
 8006948:	2300      	movs	r3, #0
 800694a:	9300      	str	r3, [sp, #0]
 800694c:	2300      	movs	r3, #0
 800694e:	687a      	ldr	r2, [r7, #4]
 8006950:	2100      	movs	r1, #0
 8006952:	6978      	ldr	r0, [r7, #20]
 8006954:	f7ff ff88 	bl	8006868 <xTimerGenericCommand>
 8006958:	6138      	str	r0, [r7, #16]
 800695a:	693b      	ldr	r3, [r7, #16]
 800695c:	2b00      	cmp	r3, #0
 800695e:	d113      	bne.n	8006988 <prvProcessExpiredTimer+0x84>
 8006960:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006964:	f383 8811 	msr	BASEPRI, r3
 8006968:	f3bf 8f6f 	isb	sy
 800696c:	f3bf 8f4f 	dsb	sy
 8006970:	60fb      	str	r3, [r7, #12]
 8006972:	bf00      	nop
 8006974:	e7fe      	b.n	8006974 <prvProcessExpiredTimer+0x70>
 8006976:	697b      	ldr	r3, [r7, #20]
 8006978:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800697c:	f023 0301 	bic.w	r3, r3, #1
 8006980:	b2da      	uxtb	r2, r3
 8006982:	697b      	ldr	r3, [r7, #20]
 8006984:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8006988:	697b      	ldr	r3, [r7, #20]
 800698a:	6a1b      	ldr	r3, [r3, #32]
 800698c:	6978      	ldr	r0, [r7, #20]
 800698e:	4798      	blx	r3
 8006990:	bf00      	nop
 8006992:	3718      	adds	r7, #24
 8006994:	46bd      	mov	sp, r7
 8006996:	bd80      	pop	{r7, pc}
 8006998:	20001104 	.word	0x20001104

0800699c <prvTimerTask>:
 800699c:	b580      	push	{r7, lr}
 800699e:	b084      	sub	sp, #16
 80069a0:	af00      	add	r7, sp, #0
 80069a2:	6078      	str	r0, [r7, #4]
 80069a4:	f107 0308 	add.w	r3, r7, #8
 80069a8:	4618      	mov	r0, r3
 80069aa:	f000 f857 	bl	8006a5c <prvGetNextExpireTime>
 80069ae:	60f8      	str	r0, [r7, #12]
 80069b0:	68bb      	ldr	r3, [r7, #8]
 80069b2:	4619      	mov	r1, r3
 80069b4:	68f8      	ldr	r0, [r7, #12]
 80069b6:	f000 f803 	bl	80069c0 <prvProcessTimerOrBlockTask>
 80069ba:	f000 f8d5 	bl	8006b68 <prvProcessReceivedCommands>
 80069be:	e7f1      	b.n	80069a4 <prvTimerTask+0x8>

080069c0 <prvProcessTimerOrBlockTask>:
 80069c0:	b580      	push	{r7, lr}
 80069c2:	b084      	sub	sp, #16
 80069c4:	af00      	add	r7, sp, #0
 80069c6:	6078      	str	r0, [r7, #4]
 80069c8:	6039      	str	r1, [r7, #0]
 80069ca:	f7fe ffcf 	bl	800596c <vTaskSuspendAll>
 80069ce:	f107 0308 	add.w	r3, r7, #8
 80069d2:	4618      	mov	r0, r3
 80069d4:	f000 f866 	bl	8006aa4 <prvSampleTimeNow>
 80069d8:	60f8      	str	r0, [r7, #12]
 80069da:	68bb      	ldr	r3, [r7, #8]
 80069dc:	2b00      	cmp	r3, #0
 80069de:	d130      	bne.n	8006a42 <prvProcessTimerOrBlockTask+0x82>
 80069e0:	683b      	ldr	r3, [r7, #0]
 80069e2:	2b00      	cmp	r3, #0
 80069e4:	d10a      	bne.n	80069fc <prvProcessTimerOrBlockTask+0x3c>
 80069e6:	687a      	ldr	r2, [r7, #4]
 80069e8:	68fb      	ldr	r3, [r7, #12]
 80069ea:	429a      	cmp	r2, r3
 80069ec:	d806      	bhi.n	80069fc <prvProcessTimerOrBlockTask+0x3c>
 80069ee:	f7fe ffcb 	bl	8005988 <xTaskResumeAll>
 80069f2:	68f9      	ldr	r1, [r7, #12]
 80069f4:	6878      	ldr	r0, [r7, #4]
 80069f6:	f7ff ff85 	bl	8006904 <prvProcessExpiredTimer>
 80069fa:	e024      	b.n	8006a46 <prvProcessTimerOrBlockTask+0x86>
 80069fc:	683b      	ldr	r3, [r7, #0]
 80069fe:	2b00      	cmp	r3, #0
 8006a00:	d008      	beq.n	8006a14 <prvProcessTimerOrBlockTask+0x54>
 8006a02:	4b13      	ldr	r3, [pc, #76]	; (8006a50 <prvProcessTimerOrBlockTask+0x90>)
 8006a04:	681b      	ldr	r3, [r3, #0]
 8006a06:	681b      	ldr	r3, [r3, #0]
 8006a08:	2b00      	cmp	r3, #0
 8006a0a:	d101      	bne.n	8006a10 <prvProcessTimerOrBlockTask+0x50>
 8006a0c:	2301      	movs	r3, #1
 8006a0e:	e000      	b.n	8006a12 <prvProcessTimerOrBlockTask+0x52>
 8006a10:	2300      	movs	r3, #0
 8006a12:	603b      	str	r3, [r7, #0]
 8006a14:	4b0f      	ldr	r3, [pc, #60]	; (8006a54 <prvProcessTimerOrBlockTask+0x94>)
 8006a16:	6818      	ldr	r0, [r3, #0]
 8006a18:	687a      	ldr	r2, [r7, #4]
 8006a1a:	68fb      	ldr	r3, [r7, #12]
 8006a1c:	1ad3      	subs	r3, r2, r3
 8006a1e:	683a      	ldr	r2, [r7, #0]
 8006a20:	4619      	mov	r1, r3
 8006a22:	f7fe fb41 	bl	80050a8 <vQueueWaitForMessageRestricted>
 8006a26:	f7fe ffaf 	bl	8005988 <xTaskResumeAll>
 8006a2a:	4603      	mov	r3, r0
 8006a2c:	2b00      	cmp	r3, #0
 8006a2e:	d10a      	bne.n	8006a46 <prvProcessTimerOrBlockTask+0x86>
 8006a30:	4b09      	ldr	r3, [pc, #36]	; (8006a58 <prvProcessTimerOrBlockTask+0x98>)
 8006a32:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006a36:	601a      	str	r2, [r3, #0]
 8006a38:	f3bf 8f4f 	dsb	sy
 8006a3c:	f3bf 8f6f 	isb	sy
 8006a40:	e001      	b.n	8006a46 <prvProcessTimerOrBlockTask+0x86>
 8006a42:	f7fe ffa1 	bl	8005988 <xTaskResumeAll>
 8006a46:	bf00      	nop
 8006a48:	3710      	adds	r7, #16
 8006a4a:	46bd      	mov	sp, r7
 8006a4c:	bd80      	pop	{r7, pc}
 8006a4e:	bf00      	nop
 8006a50:	20001108 	.word	0x20001108
 8006a54:	2000110c 	.word	0x2000110c
 8006a58:	e000ed04 	.word	0xe000ed04

08006a5c <prvGetNextExpireTime>:
 8006a5c:	b480      	push	{r7}
 8006a5e:	b085      	sub	sp, #20
 8006a60:	af00      	add	r7, sp, #0
 8006a62:	6078      	str	r0, [r7, #4]
 8006a64:	4b0e      	ldr	r3, [pc, #56]	; (8006aa0 <prvGetNextExpireTime+0x44>)
 8006a66:	681b      	ldr	r3, [r3, #0]
 8006a68:	681b      	ldr	r3, [r3, #0]
 8006a6a:	2b00      	cmp	r3, #0
 8006a6c:	d101      	bne.n	8006a72 <prvGetNextExpireTime+0x16>
 8006a6e:	2201      	movs	r2, #1
 8006a70:	e000      	b.n	8006a74 <prvGetNextExpireTime+0x18>
 8006a72:	2200      	movs	r2, #0
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	601a      	str	r2, [r3, #0]
 8006a78:	687b      	ldr	r3, [r7, #4]
 8006a7a:	681b      	ldr	r3, [r3, #0]
 8006a7c:	2b00      	cmp	r3, #0
 8006a7e:	d105      	bne.n	8006a8c <prvGetNextExpireTime+0x30>
 8006a80:	4b07      	ldr	r3, [pc, #28]	; (8006aa0 <prvGetNextExpireTime+0x44>)
 8006a82:	681b      	ldr	r3, [r3, #0]
 8006a84:	68db      	ldr	r3, [r3, #12]
 8006a86:	681b      	ldr	r3, [r3, #0]
 8006a88:	60fb      	str	r3, [r7, #12]
 8006a8a:	e001      	b.n	8006a90 <prvGetNextExpireTime+0x34>
 8006a8c:	2300      	movs	r3, #0
 8006a8e:	60fb      	str	r3, [r7, #12]
 8006a90:	68fb      	ldr	r3, [r7, #12]
 8006a92:	4618      	mov	r0, r3
 8006a94:	3714      	adds	r7, #20
 8006a96:	46bd      	mov	sp, r7
 8006a98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a9c:	4770      	bx	lr
 8006a9e:	bf00      	nop
 8006aa0:	20001104 	.word	0x20001104

08006aa4 <prvSampleTimeNow>:
 8006aa4:	b580      	push	{r7, lr}
 8006aa6:	b084      	sub	sp, #16
 8006aa8:	af00      	add	r7, sp, #0
 8006aaa:	6078      	str	r0, [r7, #4]
 8006aac:	f7ff f80a 	bl	8005ac4 <xTaskGetTickCount>
 8006ab0:	60f8      	str	r0, [r7, #12]
 8006ab2:	4b0b      	ldr	r3, [pc, #44]	; (8006ae0 <prvSampleTimeNow+0x3c>)
 8006ab4:	681b      	ldr	r3, [r3, #0]
 8006ab6:	68fa      	ldr	r2, [r7, #12]
 8006ab8:	429a      	cmp	r2, r3
 8006aba:	d205      	bcs.n	8006ac8 <prvSampleTimeNow+0x24>
 8006abc:	f000 f936 	bl	8006d2c <prvSwitchTimerLists>
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	2201      	movs	r2, #1
 8006ac4:	601a      	str	r2, [r3, #0]
 8006ac6:	e002      	b.n	8006ace <prvSampleTimeNow+0x2a>
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	2200      	movs	r2, #0
 8006acc:	601a      	str	r2, [r3, #0]
 8006ace:	4a04      	ldr	r2, [pc, #16]	; (8006ae0 <prvSampleTimeNow+0x3c>)
 8006ad0:	68fb      	ldr	r3, [r7, #12]
 8006ad2:	6013      	str	r3, [r2, #0]
 8006ad4:	68fb      	ldr	r3, [r7, #12]
 8006ad6:	4618      	mov	r0, r3
 8006ad8:	3710      	adds	r7, #16
 8006ada:	46bd      	mov	sp, r7
 8006adc:	bd80      	pop	{r7, pc}
 8006ade:	bf00      	nop
 8006ae0:	20001114 	.word	0x20001114

08006ae4 <prvInsertTimerInActiveList>:
 8006ae4:	b580      	push	{r7, lr}
 8006ae6:	b086      	sub	sp, #24
 8006ae8:	af00      	add	r7, sp, #0
 8006aea:	60f8      	str	r0, [r7, #12]
 8006aec:	60b9      	str	r1, [r7, #8]
 8006aee:	607a      	str	r2, [r7, #4]
 8006af0:	603b      	str	r3, [r7, #0]
 8006af2:	2300      	movs	r3, #0
 8006af4:	617b      	str	r3, [r7, #20]
 8006af6:	68fb      	ldr	r3, [r7, #12]
 8006af8:	68ba      	ldr	r2, [r7, #8]
 8006afa:	605a      	str	r2, [r3, #4]
 8006afc:	68fb      	ldr	r3, [r7, #12]
 8006afe:	68fa      	ldr	r2, [r7, #12]
 8006b00:	611a      	str	r2, [r3, #16]
 8006b02:	68ba      	ldr	r2, [r7, #8]
 8006b04:	687b      	ldr	r3, [r7, #4]
 8006b06:	429a      	cmp	r2, r3
 8006b08:	d812      	bhi.n	8006b30 <prvInsertTimerInActiveList+0x4c>
 8006b0a:	687a      	ldr	r2, [r7, #4]
 8006b0c:	683b      	ldr	r3, [r7, #0]
 8006b0e:	1ad2      	subs	r2, r2, r3
 8006b10:	68fb      	ldr	r3, [r7, #12]
 8006b12:	699b      	ldr	r3, [r3, #24]
 8006b14:	429a      	cmp	r2, r3
 8006b16:	d302      	bcc.n	8006b1e <prvInsertTimerInActiveList+0x3a>
 8006b18:	2301      	movs	r3, #1
 8006b1a:	617b      	str	r3, [r7, #20]
 8006b1c:	e01b      	b.n	8006b56 <prvInsertTimerInActiveList+0x72>
 8006b1e:	4b10      	ldr	r3, [pc, #64]	; (8006b60 <prvInsertTimerInActiveList+0x7c>)
 8006b20:	681a      	ldr	r2, [r3, #0]
 8006b22:	68fb      	ldr	r3, [r7, #12]
 8006b24:	3304      	adds	r3, #4
 8006b26:	4619      	mov	r1, r3
 8006b28:	4610      	mov	r0, r2
 8006b2a:	f7fd fb8e 	bl	800424a <vListInsert>
 8006b2e:	e012      	b.n	8006b56 <prvInsertTimerInActiveList+0x72>
 8006b30:	687a      	ldr	r2, [r7, #4]
 8006b32:	683b      	ldr	r3, [r7, #0]
 8006b34:	429a      	cmp	r2, r3
 8006b36:	d206      	bcs.n	8006b46 <prvInsertTimerInActiveList+0x62>
 8006b38:	68ba      	ldr	r2, [r7, #8]
 8006b3a:	683b      	ldr	r3, [r7, #0]
 8006b3c:	429a      	cmp	r2, r3
 8006b3e:	d302      	bcc.n	8006b46 <prvInsertTimerInActiveList+0x62>
 8006b40:	2301      	movs	r3, #1
 8006b42:	617b      	str	r3, [r7, #20]
 8006b44:	e007      	b.n	8006b56 <prvInsertTimerInActiveList+0x72>
 8006b46:	4b07      	ldr	r3, [pc, #28]	; (8006b64 <prvInsertTimerInActiveList+0x80>)
 8006b48:	681a      	ldr	r2, [r3, #0]
 8006b4a:	68fb      	ldr	r3, [r7, #12]
 8006b4c:	3304      	adds	r3, #4
 8006b4e:	4619      	mov	r1, r3
 8006b50:	4610      	mov	r0, r2
 8006b52:	f7fd fb7a 	bl	800424a <vListInsert>
 8006b56:	697b      	ldr	r3, [r7, #20]
 8006b58:	4618      	mov	r0, r3
 8006b5a:	3718      	adds	r7, #24
 8006b5c:	46bd      	mov	sp, r7
 8006b5e:	bd80      	pop	{r7, pc}
 8006b60:	20001108 	.word	0x20001108
 8006b64:	20001104 	.word	0x20001104

08006b68 <prvProcessReceivedCommands>:
 8006b68:	b580      	push	{r7, lr}
 8006b6a:	b08e      	sub	sp, #56	; 0x38
 8006b6c:	af02      	add	r7, sp, #8
 8006b6e:	e0ca      	b.n	8006d06 <prvProcessReceivedCommands+0x19e>
 8006b70:	687b      	ldr	r3, [r7, #4]
 8006b72:	2b00      	cmp	r3, #0
 8006b74:	da18      	bge.n	8006ba8 <prvProcessReceivedCommands+0x40>
 8006b76:	1d3b      	adds	r3, r7, #4
 8006b78:	3304      	adds	r3, #4
 8006b7a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006b7c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006b7e:	2b00      	cmp	r3, #0
 8006b80:	d10a      	bne.n	8006b98 <prvProcessReceivedCommands+0x30>
 8006b82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b86:	f383 8811 	msr	BASEPRI, r3
 8006b8a:	f3bf 8f6f 	isb	sy
 8006b8e:	f3bf 8f4f 	dsb	sy
 8006b92:	61fb      	str	r3, [r7, #28]
 8006b94:	bf00      	nop
 8006b96:	e7fe      	b.n	8006b96 <prvProcessReceivedCommands+0x2e>
 8006b98:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006b9a:	681b      	ldr	r3, [r3, #0]
 8006b9c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006b9e:	6850      	ldr	r0, [r2, #4]
 8006ba0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006ba2:	6892      	ldr	r2, [r2, #8]
 8006ba4:	4611      	mov	r1, r2
 8006ba6:	4798      	blx	r3
 8006ba8:	687b      	ldr	r3, [r7, #4]
 8006baa:	2b00      	cmp	r3, #0
 8006bac:	f2c0 80ab 	blt.w	8006d06 <prvProcessReceivedCommands+0x19e>
 8006bb0:	68fb      	ldr	r3, [r7, #12]
 8006bb2:	62bb      	str	r3, [r7, #40]	; 0x28
 8006bb4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006bb6:	695b      	ldr	r3, [r3, #20]
 8006bb8:	2b00      	cmp	r3, #0
 8006bba:	d004      	beq.n	8006bc6 <prvProcessReceivedCommands+0x5e>
 8006bbc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006bbe:	3304      	adds	r3, #4
 8006bc0:	4618      	mov	r0, r3
 8006bc2:	f7fd fb7b 	bl	80042bc <uxListRemove>
 8006bc6:	463b      	mov	r3, r7
 8006bc8:	4618      	mov	r0, r3
 8006bca:	f7ff ff6b 	bl	8006aa4 <prvSampleTimeNow>
 8006bce:	6278      	str	r0, [r7, #36]	; 0x24
 8006bd0:	687b      	ldr	r3, [r7, #4]
 8006bd2:	2b09      	cmp	r3, #9
 8006bd4:	f200 8096 	bhi.w	8006d04 <prvProcessReceivedCommands+0x19c>
 8006bd8:	a201      	add	r2, pc, #4	; (adr r2, 8006be0 <prvProcessReceivedCommands+0x78>)
 8006bda:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006bde:	bf00      	nop
 8006be0:	08006c09 	.word	0x08006c09
 8006be4:	08006c09 	.word	0x08006c09
 8006be8:	08006c09 	.word	0x08006c09
 8006bec:	08006c7d 	.word	0x08006c7d
 8006bf0:	08006c91 	.word	0x08006c91
 8006bf4:	08006cdb 	.word	0x08006cdb
 8006bf8:	08006c09 	.word	0x08006c09
 8006bfc:	08006c09 	.word	0x08006c09
 8006c00:	08006c7d 	.word	0x08006c7d
 8006c04:	08006c91 	.word	0x08006c91
 8006c08:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006c0a:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006c0e:	f043 0301 	orr.w	r3, r3, #1
 8006c12:	b2da      	uxtb	r2, r3
 8006c14:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006c16:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8006c1a:	68ba      	ldr	r2, [r7, #8]
 8006c1c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006c1e:	699b      	ldr	r3, [r3, #24]
 8006c20:	18d1      	adds	r1, r2, r3
 8006c22:	68bb      	ldr	r3, [r7, #8]
 8006c24:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006c26:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8006c28:	f7ff ff5c 	bl	8006ae4 <prvInsertTimerInActiveList>
 8006c2c:	4603      	mov	r3, r0
 8006c2e:	2b00      	cmp	r3, #0
 8006c30:	d069      	beq.n	8006d06 <prvProcessReceivedCommands+0x19e>
 8006c32:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006c34:	6a1b      	ldr	r3, [r3, #32]
 8006c36:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8006c38:	4798      	blx	r3
 8006c3a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006c3c:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006c40:	f003 0304 	and.w	r3, r3, #4
 8006c44:	2b00      	cmp	r3, #0
 8006c46:	d05e      	beq.n	8006d06 <prvProcessReceivedCommands+0x19e>
 8006c48:	68ba      	ldr	r2, [r7, #8]
 8006c4a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006c4c:	699b      	ldr	r3, [r3, #24]
 8006c4e:	441a      	add	r2, r3
 8006c50:	2300      	movs	r3, #0
 8006c52:	9300      	str	r3, [sp, #0]
 8006c54:	2300      	movs	r3, #0
 8006c56:	2100      	movs	r1, #0
 8006c58:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8006c5a:	f7ff fe05 	bl	8006868 <xTimerGenericCommand>
 8006c5e:	6238      	str	r0, [r7, #32]
 8006c60:	6a3b      	ldr	r3, [r7, #32]
 8006c62:	2b00      	cmp	r3, #0
 8006c64:	d14f      	bne.n	8006d06 <prvProcessReceivedCommands+0x19e>
 8006c66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006c6a:	f383 8811 	msr	BASEPRI, r3
 8006c6e:	f3bf 8f6f 	isb	sy
 8006c72:	f3bf 8f4f 	dsb	sy
 8006c76:	61bb      	str	r3, [r7, #24]
 8006c78:	bf00      	nop
 8006c7a:	e7fe      	b.n	8006c7a <prvProcessReceivedCommands+0x112>
 8006c7c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006c7e:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006c82:	f023 0301 	bic.w	r3, r3, #1
 8006c86:	b2da      	uxtb	r2, r3
 8006c88:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006c8a:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8006c8e:	e03a      	b.n	8006d06 <prvProcessReceivedCommands+0x19e>
 8006c90:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006c92:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006c96:	f043 0301 	orr.w	r3, r3, #1
 8006c9a:	b2da      	uxtb	r2, r3
 8006c9c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006c9e:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8006ca2:	68ba      	ldr	r2, [r7, #8]
 8006ca4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006ca6:	619a      	str	r2, [r3, #24]
 8006ca8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006caa:	699b      	ldr	r3, [r3, #24]
 8006cac:	2b00      	cmp	r3, #0
 8006cae:	d10a      	bne.n	8006cc6 <prvProcessReceivedCommands+0x15e>
 8006cb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006cb4:	f383 8811 	msr	BASEPRI, r3
 8006cb8:	f3bf 8f6f 	isb	sy
 8006cbc:	f3bf 8f4f 	dsb	sy
 8006cc0:	617b      	str	r3, [r7, #20]
 8006cc2:	bf00      	nop
 8006cc4:	e7fe      	b.n	8006cc4 <prvProcessReceivedCommands+0x15c>
 8006cc6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006cc8:	699a      	ldr	r2, [r3, #24]
 8006cca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006ccc:	18d1      	adds	r1, r2, r3
 8006cce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006cd0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006cd2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8006cd4:	f7ff ff06 	bl	8006ae4 <prvInsertTimerInActiveList>
 8006cd8:	e015      	b.n	8006d06 <prvProcessReceivedCommands+0x19e>
 8006cda:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006cdc:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006ce0:	f003 0302 	and.w	r3, r3, #2
 8006ce4:	2b00      	cmp	r3, #0
 8006ce6:	d103      	bne.n	8006cf0 <prvProcessReceivedCommands+0x188>
 8006ce8:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8006cea:	f000 fbe1 	bl	80074b0 <vPortFree>
 8006cee:	e00a      	b.n	8006d06 <prvProcessReceivedCommands+0x19e>
 8006cf0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006cf2:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006cf6:	f023 0301 	bic.w	r3, r3, #1
 8006cfa:	b2da      	uxtb	r2, r3
 8006cfc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006cfe:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8006d02:	e000      	b.n	8006d06 <prvProcessReceivedCommands+0x19e>
 8006d04:	bf00      	nop
 8006d06:	4b08      	ldr	r3, [pc, #32]	; (8006d28 <prvProcessReceivedCommands+0x1c0>)
 8006d08:	681b      	ldr	r3, [r3, #0]
 8006d0a:	1d39      	adds	r1, r7, #4
 8006d0c:	2200      	movs	r2, #0
 8006d0e:	4618      	mov	r0, r3
 8006d10:	f7fd fe8c 	bl	8004a2c <xQueueReceive>
 8006d14:	4603      	mov	r3, r0
 8006d16:	2b00      	cmp	r3, #0
 8006d18:	f47f af2a 	bne.w	8006b70 <prvProcessReceivedCommands+0x8>
 8006d1c:	bf00      	nop
 8006d1e:	bf00      	nop
 8006d20:	3730      	adds	r7, #48	; 0x30
 8006d22:	46bd      	mov	sp, r7
 8006d24:	bd80      	pop	{r7, pc}
 8006d26:	bf00      	nop
 8006d28:	2000110c 	.word	0x2000110c

08006d2c <prvSwitchTimerLists>:
 8006d2c:	b580      	push	{r7, lr}
 8006d2e:	b088      	sub	sp, #32
 8006d30:	af02      	add	r7, sp, #8
 8006d32:	e048      	b.n	8006dc6 <prvSwitchTimerLists+0x9a>
 8006d34:	4b2d      	ldr	r3, [pc, #180]	; (8006dec <prvSwitchTimerLists+0xc0>)
 8006d36:	681b      	ldr	r3, [r3, #0]
 8006d38:	68db      	ldr	r3, [r3, #12]
 8006d3a:	681b      	ldr	r3, [r3, #0]
 8006d3c:	613b      	str	r3, [r7, #16]
 8006d3e:	4b2b      	ldr	r3, [pc, #172]	; (8006dec <prvSwitchTimerLists+0xc0>)
 8006d40:	681b      	ldr	r3, [r3, #0]
 8006d42:	68db      	ldr	r3, [r3, #12]
 8006d44:	68db      	ldr	r3, [r3, #12]
 8006d46:	60fb      	str	r3, [r7, #12]
 8006d48:	68fb      	ldr	r3, [r7, #12]
 8006d4a:	3304      	adds	r3, #4
 8006d4c:	4618      	mov	r0, r3
 8006d4e:	f7fd fab5 	bl	80042bc <uxListRemove>
 8006d52:	68fb      	ldr	r3, [r7, #12]
 8006d54:	6a1b      	ldr	r3, [r3, #32]
 8006d56:	68f8      	ldr	r0, [r7, #12]
 8006d58:	4798      	blx	r3
 8006d5a:	68fb      	ldr	r3, [r7, #12]
 8006d5c:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006d60:	f003 0304 	and.w	r3, r3, #4
 8006d64:	2b00      	cmp	r3, #0
 8006d66:	d02e      	beq.n	8006dc6 <prvSwitchTimerLists+0x9a>
 8006d68:	68fb      	ldr	r3, [r7, #12]
 8006d6a:	699b      	ldr	r3, [r3, #24]
 8006d6c:	693a      	ldr	r2, [r7, #16]
 8006d6e:	4413      	add	r3, r2
 8006d70:	60bb      	str	r3, [r7, #8]
 8006d72:	68ba      	ldr	r2, [r7, #8]
 8006d74:	693b      	ldr	r3, [r7, #16]
 8006d76:	429a      	cmp	r2, r3
 8006d78:	d90e      	bls.n	8006d98 <prvSwitchTimerLists+0x6c>
 8006d7a:	68fb      	ldr	r3, [r7, #12]
 8006d7c:	68ba      	ldr	r2, [r7, #8]
 8006d7e:	605a      	str	r2, [r3, #4]
 8006d80:	68fb      	ldr	r3, [r7, #12]
 8006d82:	68fa      	ldr	r2, [r7, #12]
 8006d84:	611a      	str	r2, [r3, #16]
 8006d86:	4b19      	ldr	r3, [pc, #100]	; (8006dec <prvSwitchTimerLists+0xc0>)
 8006d88:	681a      	ldr	r2, [r3, #0]
 8006d8a:	68fb      	ldr	r3, [r7, #12]
 8006d8c:	3304      	adds	r3, #4
 8006d8e:	4619      	mov	r1, r3
 8006d90:	4610      	mov	r0, r2
 8006d92:	f7fd fa5a 	bl	800424a <vListInsert>
 8006d96:	e016      	b.n	8006dc6 <prvSwitchTimerLists+0x9a>
 8006d98:	2300      	movs	r3, #0
 8006d9a:	9300      	str	r3, [sp, #0]
 8006d9c:	2300      	movs	r3, #0
 8006d9e:	693a      	ldr	r2, [r7, #16]
 8006da0:	2100      	movs	r1, #0
 8006da2:	68f8      	ldr	r0, [r7, #12]
 8006da4:	f7ff fd60 	bl	8006868 <xTimerGenericCommand>
 8006da8:	6078      	str	r0, [r7, #4]
 8006daa:	687b      	ldr	r3, [r7, #4]
 8006dac:	2b00      	cmp	r3, #0
 8006dae:	d10a      	bne.n	8006dc6 <prvSwitchTimerLists+0x9a>
 8006db0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006db4:	f383 8811 	msr	BASEPRI, r3
 8006db8:	f3bf 8f6f 	isb	sy
 8006dbc:	f3bf 8f4f 	dsb	sy
 8006dc0:	603b      	str	r3, [r7, #0]
 8006dc2:	bf00      	nop
 8006dc4:	e7fe      	b.n	8006dc4 <prvSwitchTimerLists+0x98>
 8006dc6:	4b09      	ldr	r3, [pc, #36]	; (8006dec <prvSwitchTimerLists+0xc0>)
 8006dc8:	681b      	ldr	r3, [r3, #0]
 8006dca:	681b      	ldr	r3, [r3, #0]
 8006dcc:	2b00      	cmp	r3, #0
 8006dce:	d1b1      	bne.n	8006d34 <prvSwitchTimerLists+0x8>
 8006dd0:	4b06      	ldr	r3, [pc, #24]	; (8006dec <prvSwitchTimerLists+0xc0>)
 8006dd2:	681b      	ldr	r3, [r3, #0]
 8006dd4:	617b      	str	r3, [r7, #20]
 8006dd6:	4b06      	ldr	r3, [pc, #24]	; (8006df0 <prvSwitchTimerLists+0xc4>)
 8006dd8:	681b      	ldr	r3, [r3, #0]
 8006dda:	4a04      	ldr	r2, [pc, #16]	; (8006dec <prvSwitchTimerLists+0xc0>)
 8006ddc:	6013      	str	r3, [r2, #0]
 8006dde:	4a04      	ldr	r2, [pc, #16]	; (8006df0 <prvSwitchTimerLists+0xc4>)
 8006de0:	697b      	ldr	r3, [r7, #20]
 8006de2:	6013      	str	r3, [r2, #0]
 8006de4:	bf00      	nop
 8006de6:	3718      	adds	r7, #24
 8006de8:	46bd      	mov	sp, r7
 8006dea:	bd80      	pop	{r7, pc}
 8006dec:	20001104 	.word	0x20001104
 8006df0:	20001108 	.word	0x20001108

08006df4 <prvCheckForValidListAndQueue>:
 8006df4:	b580      	push	{r7, lr}
 8006df6:	b082      	sub	sp, #8
 8006df8:	af02      	add	r7, sp, #8
 8006dfa:	f000 f96b 	bl	80070d4 <vPortEnterCritical>
 8006dfe:	4b15      	ldr	r3, [pc, #84]	; (8006e54 <prvCheckForValidListAndQueue+0x60>)
 8006e00:	681b      	ldr	r3, [r3, #0]
 8006e02:	2b00      	cmp	r3, #0
 8006e04:	d120      	bne.n	8006e48 <prvCheckForValidListAndQueue+0x54>
 8006e06:	4814      	ldr	r0, [pc, #80]	; (8006e58 <prvCheckForValidListAndQueue+0x64>)
 8006e08:	f7fd f9ce 	bl	80041a8 <vListInitialise>
 8006e0c:	4813      	ldr	r0, [pc, #76]	; (8006e5c <prvCheckForValidListAndQueue+0x68>)
 8006e0e:	f7fd f9cb 	bl	80041a8 <vListInitialise>
 8006e12:	4b13      	ldr	r3, [pc, #76]	; (8006e60 <prvCheckForValidListAndQueue+0x6c>)
 8006e14:	4a10      	ldr	r2, [pc, #64]	; (8006e58 <prvCheckForValidListAndQueue+0x64>)
 8006e16:	601a      	str	r2, [r3, #0]
 8006e18:	4b12      	ldr	r3, [pc, #72]	; (8006e64 <prvCheckForValidListAndQueue+0x70>)
 8006e1a:	4a10      	ldr	r2, [pc, #64]	; (8006e5c <prvCheckForValidListAndQueue+0x68>)
 8006e1c:	601a      	str	r2, [r3, #0]
 8006e1e:	2300      	movs	r3, #0
 8006e20:	9300      	str	r3, [sp, #0]
 8006e22:	4b11      	ldr	r3, [pc, #68]	; (8006e68 <prvCheckForValidListAndQueue+0x74>)
 8006e24:	4a11      	ldr	r2, [pc, #68]	; (8006e6c <prvCheckForValidListAndQueue+0x78>)
 8006e26:	2110      	movs	r1, #16
 8006e28:	200a      	movs	r0, #10
 8006e2a:	f7fd fad9 	bl	80043e0 <xQueueGenericCreateStatic>
 8006e2e:	4603      	mov	r3, r0
 8006e30:	4a08      	ldr	r2, [pc, #32]	; (8006e54 <prvCheckForValidListAndQueue+0x60>)
 8006e32:	6013      	str	r3, [r2, #0]
 8006e34:	4b07      	ldr	r3, [pc, #28]	; (8006e54 <prvCheckForValidListAndQueue+0x60>)
 8006e36:	681b      	ldr	r3, [r3, #0]
 8006e38:	2b00      	cmp	r3, #0
 8006e3a:	d005      	beq.n	8006e48 <prvCheckForValidListAndQueue+0x54>
 8006e3c:	4b05      	ldr	r3, [pc, #20]	; (8006e54 <prvCheckForValidListAndQueue+0x60>)
 8006e3e:	681b      	ldr	r3, [r3, #0]
 8006e40:	490b      	ldr	r1, [pc, #44]	; (8006e70 <prvCheckForValidListAndQueue+0x7c>)
 8006e42:	4618      	mov	r0, r3
 8006e44:	f7fe f906 	bl	8005054 <vQueueAddToRegistry>
 8006e48:	f000 f974 	bl	8007134 <vPortExitCritical>
 8006e4c:	bf00      	nop
 8006e4e:	46bd      	mov	sp, r7
 8006e50:	bd80      	pop	{r7, pc}
 8006e52:	bf00      	nop
 8006e54:	2000110c 	.word	0x2000110c
 8006e58:	200010dc 	.word	0x200010dc
 8006e5c:	200010f0 	.word	0x200010f0
 8006e60:	20001104 	.word	0x20001104
 8006e64:	20001108 	.word	0x20001108
 8006e68:	200011b8 	.word	0x200011b8
 8006e6c:	20001118 	.word	0x20001118
 8006e70:	0800a458 	.word	0x0800a458

08006e74 <pxPortInitialiseStack>:
 8006e74:	b480      	push	{r7}
 8006e76:	b085      	sub	sp, #20
 8006e78:	af00      	add	r7, sp, #0
 8006e7a:	60f8      	str	r0, [r7, #12]
 8006e7c:	60b9      	str	r1, [r7, #8]
 8006e7e:	607a      	str	r2, [r7, #4]
 8006e80:	68fb      	ldr	r3, [r7, #12]
 8006e82:	3b04      	subs	r3, #4
 8006e84:	60fb      	str	r3, [r7, #12]
 8006e86:	68fb      	ldr	r3, [r7, #12]
 8006e88:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8006e8c:	601a      	str	r2, [r3, #0]
 8006e8e:	68fb      	ldr	r3, [r7, #12]
 8006e90:	3b04      	subs	r3, #4
 8006e92:	60fb      	str	r3, [r7, #12]
 8006e94:	68bb      	ldr	r3, [r7, #8]
 8006e96:	f023 0201 	bic.w	r2, r3, #1
 8006e9a:	68fb      	ldr	r3, [r7, #12]
 8006e9c:	601a      	str	r2, [r3, #0]
 8006e9e:	68fb      	ldr	r3, [r7, #12]
 8006ea0:	3b04      	subs	r3, #4
 8006ea2:	60fb      	str	r3, [r7, #12]
 8006ea4:	4a0c      	ldr	r2, [pc, #48]	; (8006ed8 <pxPortInitialiseStack+0x64>)
 8006ea6:	68fb      	ldr	r3, [r7, #12]
 8006ea8:	601a      	str	r2, [r3, #0]
 8006eaa:	68fb      	ldr	r3, [r7, #12]
 8006eac:	3b14      	subs	r3, #20
 8006eae:	60fb      	str	r3, [r7, #12]
 8006eb0:	687a      	ldr	r2, [r7, #4]
 8006eb2:	68fb      	ldr	r3, [r7, #12]
 8006eb4:	601a      	str	r2, [r3, #0]
 8006eb6:	68fb      	ldr	r3, [r7, #12]
 8006eb8:	3b04      	subs	r3, #4
 8006eba:	60fb      	str	r3, [r7, #12]
 8006ebc:	68fb      	ldr	r3, [r7, #12]
 8006ebe:	f06f 0202 	mvn.w	r2, #2
 8006ec2:	601a      	str	r2, [r3, #0]
 8006ec4:	68fb      	ldr	r3, [r7, #12]
 8006ec6:	3b20      	subs	r3, #32
 8006ec8:	60fb      	str	r3, [r7, #12]
 8006eca:	68fb      	ldr	r3, [r7, #12]
 8006ecc:	4618      	mov	r0, r3
 8006ece:	3714      	adds	r7, #20
 8006ed0:	46bd      	mov	sp, r7
 8006ed2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ed6:	4770      	bx	lr
 8006ed8:	08006edd 	.word	0x08006edd

08006edc <prvTaskExitError>:
 8006edc:	b480      	push	{r7}
 8006ede:	b085      	sub	sp, #20
 8006ee0:	af00      	add	r7, sp, #0
 8006ee2:	2300      	movs	r3, #0
 8006ee4:	607b      	str	r3, [r7, #4]
 8006ee6:	4b12      	ldr	r3, [pc, #72]	; (8006f30 <prvTaskExitError+0x54>)
 8006ee8:	681b      	ldr	r3, [r3, #0]
 8006eea:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006eee:	d00a      	beq.n	8006f06 <prvTaskExitError+0x2a>
 8006ef0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006ef4:	f383 8811 	msr	BASEPRI, r3
 8006ef8:	f3bf 8f6f 	isb	sy
 8006efc:	f3bf 8f4f 	dsb	sy
 8006f00:	60fb      	str	r3, [r7, #12]
 8006f02:	bf00      	nop
 8006f04:	e7fe      	b.n	8006f04 <prvTaskExitError+0x28>
 8006f06:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f0a:	f383 8811 	msr	BASEPRI, r3
 8006f0e:	f3bf 8f6f 	isb	sy
 8006f12:	f3bf 8f4f 	dsb	sy
 8006f16:	60bb      	str	r3, [r7, #8]
 8006f18:	bf00      	nop
 8006f1a:	bf00      	nop
 8006f1c:	687b      	ldr	r3, [r7, #4]
 8006f1e:	2b00      	cmp	r3, #0
 8006f20:	d0fc      	beq.n	8006f1c <prvTaskExitError+0x40>
 8006f22:	bf00      	nop
 8006f24:	bf00      	nop
 8006f26:	3714      	adds	r7, #20
 8006f28:	46bd      	mov	sp, r7
 8006f2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f2e:	4770      	bx	lr
 8006f30:	2000000c 	.word	0x2000000c
	...

08006f40 <SVC_Handler>:
 8006f40:	4b07      	ldr	r3, [pc, #28]	; (8006f60 <pxCurrentTCBConst2>)
 8006f42:	6819      	ldr	r1, [r3, #0]
 8006f44:	6808      	ldr	r0, [r1, #0]
 8006f46:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f4a:	f380 8809 	msr	PSP, r0
 8006f4e:	f3bf 8f6f 	isb	sy
 8006f52:	f04f 0000 	mov.w	r0, #0
 8006f56:	f380 8811 	msr	BASEPRI, r0
 8006f5a:	4770      	bx	lr
 8006f5c:	f3af 8000 	nop.w

08006f60 <pxCurrentTCBConst2>:
 8006f60:	20000bdc 	.word	0x20000bdc
 8006f64:	bf00      	nop
 8006f66:	bf00      	nop

08006f68 <prvPortStartFirstTask>:
 8006f68:	4808      	ldr	r0, [pc, #32]	; (8006f8c <prvPortStartFirstTask+0x24>)
 8006f6a:	6800      	ldr	r0, [r0, #0]
 8006f6c:	6800      	ldr	r0, [r0, #0]
 8006f6e:	f380 8808 	msr	MSP, r0
 8006f72:	f04f 0000 	mov.w	r0, #0
 8006f76:	f380 8814 	msr	CONTROL, r0
 8006f7a:	b662      	cpsie	i
 8006f7c:	b661      	cpsie	f
 8006f7e:	f3bf 8f4f 	dsb	sy
 8006f82:	f3bf 8f6f 	isb	sy
 8006f86:	df00      	svc	0
 8006f88:	bf00      	nop
 8006f8a:	bf00      	nop
 8006f8c:	e000ed08 	.word	0xe000ed08

08006f90 <xPortStartScheduler>:
 8006f90:	b580      	push	{r7, lr}
 8006f92:	b086      	sub	sp, #24
 8006f94:	af00      	add	r7, sp, #0
 8006f96:	4b46      	ldr	r3, [pc, #280]	; (80070b0 <xPortStartScheduler+0x120>)
 8006f98:	681b      	ldr	r3, [r3, #0]
 8006f9a:	4a46      	ldr	r2, [pc, #280]	; (80070b4 <xPortStartScheduler+0x124>)
 8006f9c:	4293      	cmp	r3, r2
 8006f9e:	d10a      	bne.n	8006fb6 <xPortStartScheduler+0x26>
 8006fa0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fa4:	f383 8811 	msr	BASEPRI, r3
 8006fa8:	f3bf 8f6f 	isb	sy
 8006fac:	f3bf 8f4f 	dsb	sy
 8006fb0:	613b      	str	r3, [r7, #16]
 8006fb2:	bf00      	nop
 8006fb4:	e7fe      	b.n	8006fb4 <xPortStartScheduler+0x24>
 8006fb6:	4b3e      	ldr	r3, [pc, #248]	; (80070b0 <xPortStartScheduler+0x120>)
 8006fb8:	681b      	ldr	r3, [r3, #0]
 8006fba:	4a3f      	ldr	r2, [pc, #252]	; (80070b8 <xPortStartScheduler+0x128>)
 8006fbc:	4293      	cmp	r3, r2
 8006fbe:	d10a      	bne.n	8006fd6 <xPortStartScheduler+0x46>
 8006fc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fc4:	f383 8811 	msr	BASEPRI, r3
 8006fc8:	f3bf 8f6f 	isb	sy
 8006fcc:	f3bf 8f4f 	dsb	sy
 8006fd0:	60fb      	str	r3, [r7, #12]
 8006fd2:	bf00      	nop
 8006fd4:	e7fe      	b.n	8006fd4 <xPortStartScheduler+0x44>
 8006fd6:	4b39      	ldr	r3, [pc, #228]	; (80070bc <xPortStartScheduler+0x12c>)
 8006fd8:	617b      	str	r3, [r7, #20]
 8006fda:	697b      	ldr	r3, [r7, #20]
 8006fdc:	781b      	ldrb	r3, [r3, #0]
 8006fde:	b2db      	uxtb	r3, r3
 8006fe0:	607b      	str	r3, [r7, #4]
 8006fe2:	697b      	ldr	r3, [r7, #20]
 8006fe4:	22ff      	movs	r2, #255	; 0xff
 8006fe6:	701a      	strb	r2, [r3, #0]
 8006fe8:	697b      	ldr	r3, [r7, #20]
 8006fea:	781b      	ldrb	r3, [r3, #0]
 8006fec:	b2db      	uxtb	r3, r3
 8006fee:	70fb      	strb	r3, [r7, #3]
 8006ff0:	78fb      	ldrb	r3, [r7, #3]
 8006ff2:	b2db      	uxtb	r3, r3
 8006ff4:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8006ff8:	b2da      	uxtb	r2, r3
 8006ffa:	4b31      	ldr	r3, [pc, #196]	; (80070c0 <xPortStartScheduler+0x130>)
 8006ffc:	701a      	strb	r2, [r3, #0]
 8006ffe:	4b31      	ldr	r3, [pc, #196]	; (80070c4 <xPortStartScheduler+0x134>)
 8007000:	2207      	movs	r2, #7
 8007002:	601a      	str	r2, [r3, #0]
 8007004:	e009      	b.n	800701a <xPortStartScheduler+0x8a>
 8007006:	4b2f      	ldr	r3, [pc, #188]	; (80070c4 <xPortStartScheduler+0x134>)
 8007008:	681b      	ldr	r3, [r3, #0]
 800700a:	3b01      	subs	r3, #1
 800700c:	4a2d      	ldr	r2, [pc, #180]	; (80070c4 <xPortStartScheduler+0x134>)
 800700e:	6013      	str	r3, [r2, #0]
 8007010:	78fb      	ldrb	r3, [r7, #3]
 8007012:	b2db      	uxtb	r3, r3
 8007014:	005b      	lsls	r3, r3, #1
 8007016:	b2db      	uxtb	r3, r3
 8007018:	70fb      	strb	r3, [r7, #3]
 800701a:	78fb      	ldrb	r3, [r7, #3]
 800701c:	b2db      	uxtb	r3, r3
 800701e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007022:	2b80      	cmp	r3, #128	; 0x80
 8007024:	d0ef      	beq.n	8007006 <xPortStartScheduler+0x76>
 8007026:	4b27      	ldr	r3, [pc, #156]	; (80070c4 <xPortStartScheduler+0x134>)
 8007028:	681b      	ldr	r3, [r3, #0]
 800702a:	f1c3 0307 	rsb	r3, r3, #7
 800702e:	2b04      	cmp	r3, #4
 8007030:	d00a      	beq.n	8007048 <xPortStartScheduler+0xb8>
 8007032:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007036:	f383 8811 	msr	BASEPRI, r3
 800703a:	f3bf 8f6f 	isb	sy
 800703e:	f3bf 8f4f 	dsb	sy
 8007042:	60bb      	str	r3, [r7, #8]
 8007044:	bf00      	nop
 8007046:	e7fe      	b.n	8007046 <xPortStartScheduler+0xb6>
 8007048:	4b1e      	ldr	r3, [pc, #120]	; (80070c4 <xPortStartScheduler+0x134>)
 800704a:	681b      	ldr	r3, [r3, #0]
 800704c:	021b      	lsls	r3, r3, #8
 800704e:	4a1d      	ldr	r2, [pc, #116]	; (80070c4 <xPortStartScheduler+0x134>)
 8007050:	6013      	str	r3, [r2, #0]
 8007052:	4b1c      	ldr	r3, [pc, #112]	; (80070c4 <xPortStartScheduler+0x134>)
 8007054:	681b      	ldr	r3, [r3, #0]
 8007056:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800705a:	4a1a      	ldr	r2, [pc, #104]	; (80070c4 <xPortStartScheduler+0x134>)
 800705c:	6013      	str	r3, [r2, #0]
 800705e:	687b      	ldr	r3, [r7, #4]
 8007060:	b2da      	uxtb	r2, r3
 8007062:	697b      	ldr	r3, [r7, #20]
 8007064:	701a      	strb	r2, [r3, #0]
 8007066:	4b18      	ldr	r3, [pc, #96]	; (80070c8 <xPortStartScheduler+0x138>)
 8007068:	681b      	ldr	r3, [r3, #0]
 800706a:	4a17      	ldr	r2, [pc, #92]	; (80070c8 <xPortStartScheduler+0x138>)
 800706c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8007070:	6013      	str	r3, [r2, #0]
 8007072:	4b15      	ldr	r3, [pc, #84]	; (80070c8 <xPortStartScheduler+0x138>)
 8007074:	681b      	ldr	r3, [r3, #0]
 8007076:	4a14      	ldr	r2, [pc, #80]	; (80070c8 <xPortStartScheduler+0x138>)
 8007078:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800707c:	6013      	str	r3, [r2, #0]
 800707e:	f000 f8dd 	bl	800723c <vPortSetupTimerInterrupt>
 8007082:	4b12      	ldr	r3, [pc, #72]	; (80070cc <xPortStartScheduler+0x13c>)
 8007084:	2200      	movs	r2, #0
 8007086:	601a      	str	r2, [r3, #0]
 8007088:	f000 f8fc 	bl	8007284 <vPortEnableVFP>
 800708c:	4b10      	ldr	r3, [pc, #64]	; (80070d0 <xPortStartScheduler+0x140>)
 800708e:	681b      	ldr	r3, [r3, #0]
 8007090:	4a0f      	ldr	r2, [pc, #60]	; (80070d0 <xPortStartScheduler+0x140>)
 8007092:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007096:	6013      	str	r3, [r2, #0]
 8007098:	f7ff ff66 	bl	8006f68 <prvPortStartFirstTask>
 800709c:	f7fe fe04 	bl	8005ca8 <vTaskSwitchContext>
 80070a0:	f7ff ff1c 	bl	8006edc <prvTaskExitError>
 80070a4:	2300      	movs	r3, #0
 80070a6:	4618      	mov	r0, r3
 80070a8:	3718      	adds	r7, #24
 80070aa:	46bd      	mov	sp, r7
 80070ac:	bd80      	pop	{r7, pc}
 80070ae:	bf00      	nop
 80070b0:	e000ed00 	.word	0xe000ed00
 80070b4:	410fc271 	.word	0x410fc271
 80070b8:	410fc270 	.word	0x410fc270
 80070bc:	e000e400 	.word	0xe000e400
 80070c0:	20001208 	.word	0x20001208
 80070c4:	2000120c 	.word	0x2000120c
 80070c8:	e000ed20 	.word	0xe000ed20
 80070cc:	2000000c 	.word	0x2000000c
 80070d0:	e000ef34 	.word	0xe000ef34

080070d4 <vPortEnterCritical>:
 80070d4:	b480      	push	{r7}
 80070d6:	b083      	sub	sp, #12
 80070d8:	af00      	add	r7, sp, #0
 80070da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070de:	f383 8811 	msr	BASEPRI, r3
 80070e2:	f3bf 8f6f 	isb	sy
 80070e6:	f3bf 8f4f 	dsb	sy
 80070ea:	607b      	str	r3, [r7, #4]
 80070ec:	bf00      	nop
 80070ee:	4b0f      	ldr	r3, [pc, #60]	; (800712c <vPortEnterCritical+0x58>)
 80070f0:	681b      	ldr	r3, [r3, #0]
 80070f2:	3301      	adds	r3, #1
 80070f4:	4a0d      	ldr	r2, [pc, #52]	; (800712c <vPortEnterCritical+0x58>)
 80070f6:	6013      	str	r3, [r2, #0]
 80070f8:	4b0c      	ldr	r3, [pc, #48]	; (800712c <vPortEnterCritical+0x58>)
 80070fa:	681b      	ldr	r3, [r3, #0]
 80070fc:	2b01      	cmp	r3, #1
 80070fe:	d10f      	bne.n	8007120 <vPortEnterCritical+0x4c>
 8007100:	4b0b      	ldr	r3, [pc, #44]	; (8007130 <vPortEnterCritical+0x5c>)
 8007102:	681b      	ldr	r3, [r3, #0]
 8007104:	b2db      	uxtb	r3, r3
 8007106:	2b00      	cmp	r3, #0
 8007108:	d00a      	beq.n	8007120 <vPortEnterCritical+0x4c>
 800710a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800710e:	f383 8811 	msr	BASEPRI, r3
 8007112:	f3bf 8f6f 	isb	sy
 8007116:	f3bf 8f4f 	dsb	sy
 800711a:	603b      	str	r3, [r7, #0]
 800711c:	bf00      	nop
 800711e:	e7fe      	b.n	800711e <vPortEnterCritical+0x4a>
 8007120:	bf00      	nop
 8007122:	370c      	adds	r7, #12
 8007124:	46bd      	mov	sp, r7
 8007126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800712a:	4770      	bx	lr
 800712c:	2000000c 	.word	0x2000000c
 8007130:	e000ed04 	.word	0xe000ed04

08007134 <vPortExitCritical>:
 8007134:	b480      	push	{r7}
 8007136:	b083      	sub	sp, #12
 8007138:	af00      	add	r7, sp, #0
 800713a:	4b12      	ldr	r3, [pc, #72]	; (8007184 <vPortExitCritical+0x50>)
 800713c:	681b      	ldr	r3, [r3, #0]
 800713e:	2b00      	cmp	r3, #0
 8007140:	d10a      	bne.n	8007158 <vPortExitCritical+0x24>
 8007142:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007146:	f383 8811 	msr	BASEPRI, r3
 800714a:	f3bf 8f6f 	isb	sy
 800714e:	f3bf 8f4f 	dsb	sy
 8007152:	607b      	str	r3, [r7, #4]
 8007154:	bf00      	nop
 8007156:	e7fe      	b.n	8007156 <vPortExitCritical+0x22>
 8007158:	4b0a      	ldr	r3, [pc, #40]	; (8007184 <vPortExitCritical+0x50>)
 800715a:	681b      	ldr	r3, [r3, #0]
 800715c:	3b01      	subs	r3, #1
 800715e:	4a09      	ldr	r2, [pc, #36]	; (8007184 <vPortExitCritical+0x50>)
 8007160:	6013      	str	r3, [r2, #0]
 8007162:	4b08      	ldr	r3, [pc, #32]	; (8007184 <vPortExitCritical+0x50>)
 8007164:	681b      	ldr	r3, [r3, #0]
 8007166:	2b00      	cmp	r3, #0
 8007168:	d105      	bne.n	8007176 <vPortExitCritical+0x42>
 800716a:	2300      	movs	r3, #0
 800716c:	603b      	str	r3, [r7, #0]
 800716e:	683b      	ldr	r3, [r7, #0]
 8007170:	f383 8811 	msr	BASEPRI, r3
 8007174:	bf00      	nop
 8007176:	bf00      	nop
 8007178:	370c      	adds	r7, #12
 800717a:	46bd      	mov	sp, r7
 800717c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007180:	4770      	bx	lr
 8007182:	bf00      	nop
 8007184:	2000000c 	.word	0x2000000c
	...

08007190 <PendSV_Handler>:
 8007190:	f3ef 8009 	mrs	r0, PSP
 8007194:	f3bf 8f6f 	isb	sy
 8007198:	4b15      	ldr	r3, [pc, #84]	; (80071f0 <pxCurrentTCBConst>)
 800719a:	681a      	ldr	r2, [r3, #0]
 800719c:	f01e 0f10 	tst.w	lr, #16
 80071a0:	bf08      	it	eq
 80071a2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80071a6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80071aa:	6010      	str	r0, [r2, #0]
 80071ac:	e92d 0009 	stmdb	sp!, {r0, r3}
 80071b0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80071b4:	f380 8811 	msr	BASEPRI, r0
 80071b8:	f3bf 8f4f 	dsb	sy
 80071bc:	f3bf 8f6f 	isb	sy
 80071c0:	f7fe fd72 	bl	8005ca8 <vTaskSwitchContext>
 80071c4:	f04f 0000 	mov.w	r0, #0
 80071c8:	f380 8811 	msr	BASEPRI, r0
 80071cc:	bc09      	pop	{r0, r3}
 80071ce:	6819      	ldr	r1, [r3, #0]
 80071d0:	6808      	ldr	r0, [r1, #0]
 80071d2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80071d6:	f01e 0f10 	tst.w	lr, #16
 80071da:	bf08      	it	eq
 80071dc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80071e0:	f380 8809 	msr	PSP, r0
 80071e4:	f3bf 8f6f 	isb	sy
 80071e8:	4770      	bx	lr
 80071ea:	bf00      	nop
 80071ec:	f3af 8000 	nop.w

080071f0 <pxCurrentTCBConst>:
 80071f0:	20000bdc 	.word	0x20000bdc
 80071f4:	bf00      	nop
 80071f6:	bf00      	nop

080071f8 <xPortSysTickHandler>:
 80071f8:	b580      	push	{r7, lr}
 80071fa:	b082      	sub	sp, #8
 80071fc:	af00      	add	r7, sp, #0
 80071fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007202:	f383 8811 	msr	BASEPRI, r3
 8007206:	f3bf 8f6f 	isb	sy
 800720a:	f3bf 8f4f 	dsb	sy
 800720e:	607b      	str	r3, [r7, #4]
 8007210:	bf00      	nop
 8007212:	f7fe fc95 	bl	8005b40 <xTaskIncrementTick>
 8007216:	4603      	mov	r3, r0
 8007218:	2b00      	cmp	r3, #0
 800721a:	d003      	beq.n	8007224 <xPortSysTickHandler+0x2c>
 800721c:	4b06      	ldr	r3, [pc, #24]	; (8007238 <xPortSysTickHandler+0x40>)
 800721e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007222:	601a      	str	r2, [r3, #0]
 8007224:	2300      	movs	r3, #0
 8007226:	603b      	str	r3, [r7, #0]
 8007228:	683b      	ldr	r3, [r7, #0]
 800722a:	f383 8811 	msr	BASEPRI, r3
 800722e:	bf00      	nop
 8007230:	bf00      	nop
 8007232:	3708      	adds	r7, #8
 8007234:	46bd      	mov	sp, r7
 8007236:	bd80      	pop	{r7, pc}
 8007238:	e000ed04 	.word	0xe000ed04

0800723c <vPortSetupTimerInterrupt>:
 800723c:	b480      	push	{r7}
 800723e:	af00      	add	r7, sp, #0
 8007240:	4b0b      	ldr	r3, [pc, #44]	; (8007270 <vPortSetupTimerInterrupt+0x34>)
 8007242:	2200      	movs	r2, #0
 8007244:	601a      	str	r2, [r3, #0]
 8007246:	4b0b      	ldr	r3, [pc, #44]	; (8007274 <vPortSetupTimerInterrupt+0x38>)
 8007248:	2200      	movs	r2, #0
 800724a:	601a      	str	r2, [r3, #0]
 800724c:	4b0a      	ldr	r3, [pc, #40]	; (8007278 <vPortSetupTimerInterrupt+0x3c>)
 800724e:	681b      	ldr	r3, [r3, #0]
 8007250:	4a0a      	ldr	r2, [pc, #40]	; (800727c <vPortSetupTimerInterrupt+0x40>)
 8007252:	fba2 2303 	umull	r2, r3, r2, r3
 8007256:	099b      	lsrs	r3, r3, #6
 8007258:	4a09      	ldr	r2, [pc, #36]	; (8007280 <vPortSetupTimerInterrupt+0x44>)
 800725a:	3b01      	subs	r3, #1
 800725c:	6013      	str	r3, [r2, #0]
 800725e:	4b04      	ldr	r3, [pc, #16]	; (8007270 <vPortSetupTimerInterrupt+0x34>)
 8007260:	2207      	movs	r2, #7
 8007262:	601a      	str	r2, [r3, #0]
 8007264:	bf00      	nop
 8007266:	46bd      	mov	sp, r7
 8007268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800726c:	4770      	bx	lr
 800726e:	bf00      	nop
 8007270:	e000e010 	.word	0xe000e010
 8007274:	e000e018 	.word	0xe000e018
 8007278:	20000000 	.word	0x20000000
 800727c:	10624dd3 	.word	0x10624dd3
 8007280:	e000e014 	.word	0xe000e014

08007284 <vPortEnableVFP>:
 8007284:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8007294 <vPortEnableVFP+0x10>
 8007288:	6801      	ldr	r1, [r0, #0]
 800728a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800728e:	6001      	str	r1, [r0, #0]
 8007290:	4770      	bx	lr
 8007292:	bf00      	nop
 8007294:	e000ed88 	.word	0xe000ed88

08007298 <vPortValidateInterruptPriority>:
 8007298:	b480      	push	{r7}
 800729a:	b085      	sub	sp, #20
 800729c:	af00      	add	r7, sp, #0
 800729e:	f3ef 8305 	mrs	r3, IPSR
 80072a2:	60fb      	str	r3, [r7, #12]
 80072a4:	68fb      	ldr	r3, [r7, #12]
 80072a6:	2b0f      	cmp	r3, #15
 80072a8:	d914      	bls.n	80072d4 <vPortValidateInterruptPriority+0x3c>
 80072aa:	4a17      	ldr	r2, [pc, #92]	; (8007308 <vPortValidateInterruptPriority+0x70>)
 80072ac:	68fb      	ldr	r3, [r7, #12]
 80072ae:	4413      	add	r3, r2
 80072b0:	781b      	ldrb	r3, [r3, #0]
 80072b2:	72fb      	strb	r3, [r7, #11]
 80072b4:	4b15      	ldr	r3, [pc, #84]	; (800730c <vPortValidateInterruptPriority+0x74>)
 80072b6:	781b      	ldrb	r3, [r3, #0]
 80072b8:	7afa      	ldrb	r2, [r7, #11]
 80072ba:	429a      	cmp	r2, r3
 80072bc:	d20a      	bcs.n	80072d4 <vPortValidateInterruptPriority+0x3c>
 80072be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072c2:	f383 8811 	msr	BASEPRI, r3
 80072c6:	f3bf 8f6f 	isb	sy
 80072ca:	f3bf 8f4f 	dsb	sy
 80072ce:	607b      	str	r3, [r7, #4]
 80072d0:	bf00      	nop
 80072d2:	e7fe      	b.n	80072d2 <vPortValidateInterruptPriority+0x3a>
 80072d4:	4b0e      	ldr	r3, [pc, #56]	; (8007310 <vPortValidateInterruptPriority+0x78>)
 80072d6:	681b      	ldr	r3, [r3, #0]
 80072d8:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 80072dc:	4b0d      	ldr	r3, [pc, #52]	; (8007314 <vPortValidateInterruptPriority+0x7c>)
 80072de:	681b      	ldr	r3, [r3, #0]
 80072e0:	429a      	cmp	r2, r3
 80072e2:	d90a      	bls.n	80072fa <vPortValidateInterruptPriority+0x62>
 80072e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072e8:	f383 8811 	msr	BASEPRI, r3
 80072ec:	f3bf 8f6f 	isb	sy
 80072f0:	f3bf 8f4f 	dsb	sy
 80072f4:	603b      	str	r3, [r7, #0]
 80072f6:	bf00      	nop
 80072f8:	e7fe      	b.n	80072f8 <vPortValidateInterruptPriority+0x60>
 80072fa:	bf00      	nop
 80072fc:	3714      	adds	r7, #20
 80072fe:	46bd      	mov	sp, r7
 8007300:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007304:	4770      	bx	lr
 8007306:	bf00      	nop
 8007308:	e000e3f0 	.word	0xe000e3f0
 800730c:	20001208 	.word	0x20001208
 8007310:	e000ed0c 	.word	0xe000ed0c
 8007314:	2000120c 	.word	0x2000120c

08007318 <pvPortMalloc>:
 8007318:	b580      	push	{r7, lr}
 800731a:	b08a      	sub	sp, #40	; 0x28
 800731c:	af00      	add	r7, sp, #0
 800731e:	6078      	str	r0, [r7, #4]
 8007320:	2300      	movs	r3, #0
 8007322:	61fb      	str	r3, [r7, #28]
 8007324:	f7fe fb22 	bl	800596c <vTaskSuspendAll>
 8007328:	4b5b      	ldr	r3, [pc, #364]	; (8007498 <pvPortMalloc+0x180>)
 800732a:	681b      	ldr	r3, [r3, #0]
 800732c:	2b00      	cmp	r3, #0
 800732e:	d101      	bne.n	8007334 <pvPortMalloc+0x1c>
 8007330:	f000 f920 	bl	8007574 <prvHeapInit>
 8007334:	4b59      	ldr	r3, [pc, #356]	; (800749c <pvPortMalloc+0x184>)
 8007336:	681a      	ldr	r2, [r3, #0]
 8007338:	687b      	ldr	r3, [r7, #4]
 800733a:	4013      	ands	r3, r2
 800733c:	2b00      	cmp	r3, #0
 800733e:	f040 8093 	bne.w	8007468 <pvPortMalloc+0x150>
 8007342:	687b      	ldr	r3, [r7, #4]
 8007344:	2b00      	cmp	r3, #0
 8007346:	d01d      	beq.n	8007384 <pvPortMalloc+0x6c>
 8007348:	2208      	movs	r2, #8
 800734a:	687b      	ldr	r3, [r7, #4]
 800734c:	4413      	add	r3, r2
 800734e:	607b      	str	r3, [r7, #4]
 8007350:	687b      	ldr	r3, [r7, #4]
 8007352:	f003 0307 	and.w	r3, r3, #7
 8007356:	2b00      	cmp	r3, #0
 8007358:	d014      	beq.n	8007384 <pvPortMalloc+0x6c>
 800735a:	687b      	ldr	r3, [r7, #4]
 800735c:	f023 0307 	bic.w	r3, r3, #7
 8007360:	3308      	adds	r3, #8
 8007362:	607b      	str	r3, [r7, #4]
 8007364:	687b      	ldr	r3, [r7, #4]
 8007366:	f003 0307 	and.w	r3, r3, #7
 800736a:	2b00      	cmp	r3, #0
 800736c:	d00a      	beq.n	8007384 <pvPortMalloc+0x6c>
 800736e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007372:	f383 8811 	msr	BASEPRI, r3
 8007376:	f3bf 8f6f 	isb	sy
 800737a:	f3bf 8f4f 	dsb	sy
 800737e:	617b      	str	r3, [r7, #20]
 8007380:	bf00      	nop
 8007382:	e7fe      	b.n	8007382 <pvPortMalloc+0x6a>
 8007384:	687b      	ldr	r3, [r7, #4]
 8007386:	2b00      	cmp	r3, #0
 8007388:	d06e      	beq.n	8007468 <pvPortMalloc+0x150>
 800738a:	4b45      	ldr	r3, [pc, #276]	; (80074a0 <pvPortMalloc+0x188>)
 800738c:	681b      	ldr	r3, [r3, #0]
 800738e:	687a      	ldr	r2, [r7, #4]
 8007390:	429a      	cmp	r2, r3
 8007392:	d869      	bhi.n	8007468 <pvPortMalloc+0x150>
 8007394:	4b43      	ldr	r3, [pc, #268]	; (80074a4 <pvPortMalloc+0x18c>)
 8007396:	623b      	str	r3, [r7, #32]
 8007398:	4b42      	ldr	r3, [pc, #264]	; (80074a4 <pvPortMalloc+0x18c>)
 800739a:	681b      	ldr	r3, [r3, #0]
 800739c:	627b      	str	r3, [r7, #36]	; 0x24
 800739e:	e004      	b.n	80073aa <pvPortMalloc+0x92>
 80073a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80073a2:	623b      	str	r3, [r7, #32]
 80073a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80073a6:	681b      	ldr	r3, [r3, #0]
 80073a8:	627b      	str	r3, [r7, #36]	; 0x24
 80073aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80073ac:	685b      	ldr	r3, [r3, #4]
 80073ae:	687a      	ldr	r2, [r7, #4]
 80073b0:	429a      	cmp	r2, r3
 80073b2:	d903      	bls.n	80073bc <pvPortMalloc+0xa4>
 80073b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80073b6:	681b      	ldr	r3, [r3, #0]
 80073b8:	2b00      	cmp	r3, #0
 80073ba:	d1f1      	bne.n	80073a0 <pvPortMalloc+0x88>
 80073bc:	4b36      	ldr	r3, [pc, #216]	; (8007498 <pvPortMalloc+0x180>)
 80073be:	681b      	ldr	r3, [r3, #0]
 80073c0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80073c2:	429a      	cmp	r2, r3
 80073c4:	d050      	beq.n	8007468 <pvPortMalloc+0x150>
 80073c6:	6a3b      	ldr	r3, [r7, #32]
 80073c8:	681b      	ldr	r3, [r3, #0]
 80073ca:	2208      	movs	r2, #8
 80073cc:	4413      	add	r3, r2
 80073ce:	61fb      	str	r3, [r7, #28]
 80073d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80073d2:	681a      	ldr	r2, [r3, #0]
 80073d4:	6a3b      	ldr	r3, [r7, #32]
 80073d6:	601a      	str	r2, [r3, #0]
 80073d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80073da:	685a      	ldr	r2, [r3, #4]
 80073dc:	687b      	ldr	r3, [r7, #4]
 80073de:	1ad2      	subs	r2, r2, r3
 80073e0:	2308      	movs	r3, #8
 80073e2:	005b      	lsls	r3, r3, #1
 80073e4:	429a      	cmp	r2, r3
 80073e6:	d91f      	bls.n	8007428 <pvPortMalloc+0x110>
 80073e8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80073ea:	687b      	ldr	r3, [r7, #4]
 80073ec:	4413      	add	r3, r2
 80073ee:	61bb      	str	r3, [r7, #24]
 80073f0:	69bb      	ldr	r3, [r7, #24]
 80073f2:	f003 0307 	and.w	r3, r3, #7
 80073f6:	2b00      	cmp	r3, #0
 80073f8:	d00a      	beq.n	8007410 <pvPortMalloc+0xf8>
 80073fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073fe:	f383 8811 	msr	BASEPRI, r3
 8007402:	f3bf 8f6f 	isb	sy
 8007406:	f3bf 8f4f 	dsb	sy
 800740a:	613b      	str	r3, [r7, #16]
 800740c:	bf00      	nop
 800740e:	e7fe      	b.n	800740e <pvPortMalloc+0xf6>
 8007410:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007412:	685a      	ldr	r2, [r3, #4]
 8007414:	687b      	ldr	r3, [r7, #4]
 8007416:	1ad2      	subs	r2, r2, r3
 8007418:	69bb      	ldr	r3, [r7, #24]
 800741a:	605a      	str	r2, [r3, #4]
 800741c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800741e:	687a      	ldr	r2, [r7, #4]
 8007420:	605a      	str	r2, [r3, #4]
 8007422:	69b8      	ldr	r0, [r7, #24]
 8007424:	f000 f908 	bl	8007638 <prvInsertBlockIntoFreeList>
 8007428:	4b1d      	ldr	r3, [pc, #116]	; (80074a0 <pvPortMalloc+0x188>)
 800742a:	681a      	ldr	r2, [r3, #0]
 800742c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800742e:	685b      	ldr	r3, [r3, #4]
 8007430:	1ad3      	subs	r3, r2, r3
 8007432:	4a1b      	ldr	r2, [pc, #108]	; (80074a0 <pvPortMalloc+0x188>)
 8007434:	6013      	str	r3, [r2, #0]
 8007436:	4b1a      	ldr	r3, [pc, #104]	; (80074a0 <pvPortMalloc+0x188>)
 8007438:	681a      	ldr	r2, [r3, #0]
 800743a:	4b1b      	ldr	r3, [pc, #108]	; (80074a8 <pvPortMalloc+0x190>)
 800743c:	681b      	ldr	r3, [r3, #0]
 800743e:	429a      	cmp	r2, r3
 8007440:	d203      	bcs.n	800744a <pvPortMalloc+0x132>
 8007442:	4b17      	ldr	r3, [pc, #92]	; (80074a0 <pvPortMalloc+0x188>)
 8007444:	681b      	ldr	r3, [r3, #0]
 8007446:	4a18      	ldr	r2, [pc, #96]	; (80074a8 <pvPortMalloc+0x190>)
 8007448:	6013      	str	r3, [r2, #0]
 800744a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800744c:	685a      	ldr	r2, [r3, #4]
 800744e:	4b13      	ldr	r3, [pc, #76]	; (800749c <pvPortMalloc+0x184>)
 8007450:	681b      	ldr	r3, [r3, #0]
 8007452:	431a      	orrs	r2, r3
 8007454:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007456:	605a      	str	r2, [r3, #4]
 8007458:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800745a:	2200      	movs	r2, #0
 800745c:	601a      	str	r2, [r3, #0]
 800745e:	4b13      	ldr	r3, [pc, #76]	; (80074ac <pvPortMalloc+0x194>)
 8007460:	681b      	ldr	r3, [r3, #0]
 8007462:	3301      	adds	r3, #1
 8007464:	4a11      	ldr	r2, [pc, #68]	; (80074ac <pvPortMalloc+0x194>)
 8007466:	6013      	str	r3, [r2, #0]
 8007468:	f7fe fa8e 	bl	8005988 <xTaskResumeAll>
 800746c:	69fb      	ldr	r3, [r7, #28]
 800746e:	f003 0307 	and.w	r3, r3, #7
 8007472:	2b00      	cmp	r3, #0
 8007474:	d00a      	beq.n	800748c <pvPortMalloc+0x174>
 8007476:	f04f 0350 	mov.w	r3, #80	; 0x50
 800747a:	f383 8811 	msr	BASEPRI, r3
 800747e:	f3bf 8f6f 	isb	sy
 8007482:	f3bf 8f4f 	dsb	sy
 8007486:	60fb      	str	r3, [r7, #12]
 8007488:	bf00      	nop
 800748a:	e7fe      	b.n	800748a <pvPortMalloc+0x172>
 800748c:	69fb      	ldr	r3, [r7, #28]
 800748e:	4618      	mov	r0, r3
 8007490:	3728      	adds	r7, #40	; 0x28
 8007492:	46bd      	mov	sp, r7
 8007494:	bd80      	pop	{r7, pc}
 8007496:	bf00      	nop
 8007498:	20004e18 	.word	0x20004e18
 800749c:	20004e2c 	.word	0x20004e2c
 80074a0:	20004e1c 	.word	0x20004e1c
 80074a4:	20004e10 	.word	0x20004e10
 80074a8:	20004e20 	.word	0x20004e20
 80074ac:	20004e24 	.word	0x20004e24

080074b0 <vPortFree>:
 80074b0:	b580      	push	{r7, lr}
 80074b2:	b086      	sub	sp, #24
 80074b4:	af00      	add	r7, sp, #0
 80074b6:	6078      	str	r0, [r7, #4]
 80074b8:	687b      	ldr	r3, [r7, #4]
 80074ba:	617b      	str	r3, [r7, #20]
 80074bc:	687b      	ldr	r3, [r7, #4]
 80074be:	2b00      	cmp	r3, #0
 80074c0:	d04d      	beq.n	800755e <vPortFree+0xae>
 80074c2:	2308      	movs	r3, #8
 80074c4:	425b      	negs	r3, r3
 80074c6:	697a      	ldr	r2, [r7, #20]
 80074c8:	4413      	add	r3, r2
 80074ca:	617b      	str	r3, [r7, #20]
 80074cc:	697b      	ldr	r3, [r7, #20]
 80074ce:	613b      	str	r3, [r7, #16]
 80074d0:	693b      	ldr	r3, [r7, #16]
 80074d2:	685a      	ldr	r2, [r3, #4]
 80074d4:	4b24      	ldr	r3, [pc, #144]	; (8007568 <vPortFree+0xb8>)
 80074d6:	681b      	ldr	r3, [r3, #0]
 80074d8:	4013      	ands	r3, r2
 80074da:	2b00      	cmp	r3, #0
 80074dc:	d10a      	bne.n	80074f4 <vPortFree+0x44>
 80074de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074e2:	f383 8811 	msr	BASEPRI, r3
 80074e6:	f3bf 8f6f 	isb	sy
 80074ea:	f3bf 8f4f 	dsb	sy
 80074ee:	60fb      	str	r3, [r7, #12]
 80074f0:	bf00      	nop
 80074f2:	e7fe      	b.n	80074f2 <vPortFree+0x42>
 80074f4:	693b      	ldr	r3, [r7, #16]
 80074f6:	681b      	ldr	r3, [r3, #0]
 80074f8:	2b00      	cmp	r3, #0
 80074fa:	d00a      	beq.n	8007512 <vPortFree+0x62>
 80074fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007500:	f383 8811 	msr	BASEPRI, r3
 8007504:	f3bf 8f6f 	isb	sy
 8007508:	f3bf 8f4f 	dsb	sy
 800750c:	60bb      	str	r3, [r7, #8]
 800750e:	bf00      	nop
 8007510:	e7fe      	b.n	8007510 <vPortFree+0x60>
 8007512:	693b      	ldr	r3, [r7, #16]
 8007514:	685a      	ldr	r2, [r3, #4]
 8007516:	4b14      	ldr	r3, [pc, #80]	; (8007568 <vPortFree+0xb8>)
 8007518:	681b      	ldr	r3, [r3, #0]
 800751a:	4013      	ands	r3, r2
 800751c:	2b00      	cmp	r3, #0
 800751e:	d01e      	beq.n	800755e <vPortFree+0xae>
 8007520:	693b      	ldr	r3, [r7, #16]
 8007522:	681b      	ldr	r3, [r3, #0]
 8007524:	2b00      	cmp	r3, #0
 8007526:	d11a      	bne.n	800755e <vPortFree+0xae>
 8007528:	693b      	ldr	r3, [r7, #16]
 800752a:	685a      	ldr	r2, [r3, #4]
 800752c:	4b0e      	ldr	r3, [pc, #56]	; (8007568 <vPortFree+0xb8>)
 800752e:	681b      	ldr	r3, [r3, #0]
 8007530:	43db      	mvns	r3, r3
 8007532:	401a      	ands	r2, r3
 8007534:	693b      	ldr	r3, [r7, #16]
 8007536:	605a      	str	r2, [r3, #4]
 8007538:	f7fe fa18 	bl	800596c <vTaskSuspendAll>
 800753c:	693b      	ldr	r3, [r7, #16]
 800753e:	685a      	ldr	r2, [r3, #4]
 8007540:	4b0a      	ldr	r3, [pc, #40]	; (800756c <vPortFree+0xbc>)
 8007542:	681b      	ldr	r3, [r3, #0]
 8007544:	4413      	add	r3, r2
 8007546:	4a09      	ldr	r2, [pc, #36]	; (800756c <vPortFree+0xbc>)
 8007548:	6013      	str	r3, [r2, #0]
 800754a:	6938      	ldr	r0, [r7, #16]
 800754c:	f000 f874 	bl	8007638 <prvInsertBlockIntoFreeList>
 8007550:	4b07      	ldr	r3, [pc, #28]	; (8007570 <vPortFree+0xc0>)
 8007552:	681b      	ldr	r3, [r3, #0]
 8007554:	3301      	adds	r3, #1
 8007556:	4a06      	ldr	r2, [pc, #24]	; (8007570 <vPortFree+0xc0>)
 8007558:	6013      	str	r3, [r2, #0]
 800755a:	f7fe fa15 	bl	8005988 <xTaskResumeAll>
 800755e:	bf00      	nop
 8007560:	3718      	adds	r7, #24
 8007562:	46bd      	mov	sp, r7
 8007564:	bd80      	pop	{r7, pc}
 8007566:	bf00      	nop
 8007568:	20004e2c 	.word	0x20004e2c
 800756c:	20004e1c 	.word	0x20004e1c
 8007570:	20004e28 	.word	0x20004e28

08007574 <prvHeapInit>:
 8007574:	b480      	push	{r7}
 8007576:	b085      	sub	sp, #20
 8007578:	af00      	add	r7, sp, #0
 800757a:	f44f 5370 	mov.w	r3, #15360	; 0x3c00
 800757e:	60bb      	str	r3, [r7, #8]
 8007580:	4b27      	ldr	r3, [pc, #156]	; (8007620 <prvHeapInit+0xac>)
 8007582:	60fb      	str	r3, [r7, #12]
 8007584:	68fb      	ldr	r3, [r7, #12]
 8007586:	f003 0307 	and.w	r3, r3, #7
 800758a:	2b00      	cmp	r3, #0
 800758c:	d00c      	beq.n	80075a8 <prvHeapInit+0x34>
 800758e:	68fb      	ldr	r3, [r7, #12]
 8007590:	3307      	adds	r3, #7
 8007592:	60fb      	str	r3, [r7, #12]
 8007594:	68fb      	ldr	r3, [r7, #12]
 8007596:	f023 0307 	bic.w	r3, r3, #7
 800759a:	60fb      	str	r3, [r7, #12]
 800759c:	68ba      	ldr	r2, [r7, #8]
 800759e:	68fb      	ldr	r3, [r7, #12]
 80075a0:	1ad3      	subs	r3, r2, r3
 80075a2:	4a1f      	ldr	r2, [pc, #124]	; (8007620 <prvHeapInit+0xac>)
 80075a4:	4413      	add	r3, r2
 80075a6:	60bb      	str	r3, [r7, #8]
 80075a8:	68fb      	ldr	r3, [r7, #12]
 80075aa:	607b      	str	r3, [r7, #4]
 80075ac:	4a1d      	ldr	r2, [pc, #116]	; (8007624 <prvHeapInit+0xb0>)
 80075ae:	687b      	ldr	r3, [r7, #4]
 80075b0:	6013      	str	r3, [r2, #0]
 80075b2:	4b1c      	ldr	r3, [pc, #112]	; (8007624 <prvHeapInit+0xb0>)
 80075b4:	2200      	movs	r2, #0
 80075b6:	605a      	str	r2, [r3, #4]
 80075b8:	687b      	ldr	r3, [r7, #4]
 80075ba:	68ba      	ldr	r2, [r7, #8]
 80075bc:	4413      	add	r3, r2
 80075be:	60fb      	str	r3, [r7, #12]
 80075c0:	2208      	movs	r2, #8
 80075c2:	68fb      	ldr	r3, [r7, #12]
 80075c4:	1a9b      	subs	r3, r3, r2
 80075c6:	60fb      	str	r3, [r7, #12]
 80075c8:	68fb      	ldr	r3, [r7, #12]
 80075ca:	f023 0307 	bic.w	r3, r3, #7
 80075ce:	60fb      	str	r3, [r7, #12]
 80075d0:	68fb      	ldr	r3, [r7, #12]
 80075d2:	4a15      	ldr	r2, [pc, #84]	; (8007628 <prvHeapInit+0xb4>)
 80075d4:	6013      	str	r3, [r2, #0]
 80075d6:	4b14      	ldr	r3, [pc, #80]	; (8007628 <prvHeapInit+0xb4>)
 80075d8:	681b      	ldr	r3, [r3, #0]
 80075da:	2200      	movs	r2, #0
 80075dc:	605a      	str	r2, [r3, #4]
 80075de:	4b12      	ldr	r3, [pc, #72]	; (8007628 <prvHeapInit+0xb4>)
 80075e0:	681b      	ldr	r3, [r3, #0]
 80075e2:	2200      	movs	r2, #0
 80075e4:	601a      	str	r2, [r3, #0]
 80075e6:	687b      	ldr	r3, [r7, #4]
 80075e8:	603b      	str	r3, [r7, #0]
 80075ea:	683b      	ldr	r3, [r7, #0]
 80075ec:	68fa      	ldr	r2, [r7, #12]
 80075ee:	1ad2      	subs	r2, r2, r3
 80075f0:	683b      	ldr	r3, [r7, #0]
 80075f2:	605a      	str	r2, [r3, #4]
 80075f4:	4b0c      	ldr	r3, [pc, #48]	; (8007628 <prvHeapInit+0xb4>)
 80075f6:	681a      	ldr	r2, [r3, #0]
 80075f8:	683b      	ldr	r3, [r7, #0]
 80075fa:	601a      	str	r2, [r3, #0]
 80075fc:	683b      	ldr	r3, [r7, #0]
 80075fe:	685b      	ldr	r3, [r3, #4]
 8007600:	4a0a      	ldr	r2, [pc, #40]	; (800762c <prvHeapInit+0xb8>)
 8007602:	6013      	str	r3, [r2, #0]
 8007604:	683b      	ldr	r3, [r7, #0]
 8007606:	685b      	ldr	r3, [r3, #4]
 8007608:	4a09      	ldr	r2, [pc, #36]	; (8007630 <prvHeapInit+0xbc>)
 800760a:	6013      	str	r3, [r2, #0]
 800760c:	4b09      	ldr	r3, [pc, #36]	; (8007634 <prvHeapInit+0xc0>)
 800760e:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8007612:	601a      	str	r2, [r3, #0]
 8007614:	bf00      	nop
 8007616:	3714      	adds	r7, #20
 8007618:	46bd      	mov	sp, r7
 800761a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800761e:	4770      	bx	lr
 8007620:	20001210 	.word	0x20001210
 8007624:	20004e10 	.word	0x20004e10
 8007628:	20004e18 	.word	0x20004e18
 800762c:	20004e20 	.word	0x20004e20
 8007630:	20004e1c 	.word	0x20004e1c
 8007634:	20004e2c 	.word	0x20004e2c

08007638 <prvInsertBlockIntoFreeList>:
 8007638:	b480      	push	{r7}
 800763a:	b085      	sub	sp, #20
 800763c:	af00      	add	r7, sp, #0
 800763e:	6078      	str	r0, [r7, #4]
 8007640:	4b28      	ldr	r3, [pc, #160]	; (80076e4 <prvInsertBlockIntoFreeList+0xac>)
 8007642:	60fb      	str	r3, [r7, #12]
 8007644:	e002      	b.n	800764c <prvInsertBlockIntoFreeList+0x14>
 8007646:	68fb      	ldr	r3, [r7, #12]
 8007648:	681b      	ldr	r3, [r3, #0]
 800764a:	60fb      	str	r3, [r7, #12]
 800764c:	68fb      	ldr	r3, [r7, #12]
 800764e:	681b      	ldr	r3, [r3, #0]
 8007650:	687a      	ldr	r2, [r7, #4]
 8007652:	429a      	cmp	r2, r3
 8007654:	d8f7      	bhi.n	8007646 <prvInsertBlockIntoFreeList+0xe>
 8007656:	68fb      	ldr	r3, [r7, #12]
 8007658:	60bb      	str	r3, [r7, #8]
 800765a:	68fb      	ldr	r3, [r7, #12]
 800765c:	685b      	ldr	r3, [r3, #4]
 800765e:	68ba      	ldr	r2, [r7, #8]
 8007660:	4413      	add	r3, r2
 8007662:	687a      	ldr	r2, [r7, #4]
 8007664:	429a      	cmp	r2, r3
 8007666:	d108      	bne.n	800767a <prvInsertBlockIntoFreeList+0x42>
 8007668:	68fb      	ldr	r3, [r7, #12]
 800766a:	685a      	ldr	r2, [r3, #4]
 800766c:	687b      	ldr	r3, [r7, #4]
 800766e:	685b      	ldr	r3, [r3, #4]
 8007670:	441a      	add	r2, r3
 8007672:	68fb      	ldr	r3, [r7, #12]
 8007674:	605a      	str	r2, [r3, #4]
 8007676:	68fb      	ldr	r3, [r7, #12]
 8007678:	607b      	str	r3, [r7, #4]
 800767a:	687b      	ldr	r3, [r7, #4]
 800767c:	60bb      	str	r3, [r7, #8]
 800767e:	687b      	ldr	r3, [r7, #4]
 8007680:	685b      	ldr	r3, [r3, #4]
 8007682:	68ba      	ldr	r2, [r7, #8]
 8007684:	441a      	add	r2, r3
 8007686:	68fb      	ldr	r3, [r7, #12]
 8007688:	681b      	ldr	r3, [r3, #0]
 800768a:	429a      	cmp	r2, r3
 800768c:	d118      	bne.n	80076c0 <prvInsertBlockIntoFreeList+0x88>
 800768e:	68fb      	ldr	r3, [r7, #12]
 8007690:	681a      	ldr	r2, [r3, #0]
 8007692:	4b15      	ldr	r3, [pc, #84]	; (80076e8 <prvInsertBlockIntoFreeList+0xb0>)
 8007694:	681b      	ldr	r3, [r3, #0]
 8007696:	429a      	cmp	r2, r3
 8007698:	d00d      	beq.n	80076b6 <prvInsertBlockIntoFreeList+0x7e>
 800769a:	687b      	ldr	r3, [r7, #4]
 800769c:	685a      	ldr	r2, [r3, #4]
 800769e:	68fb      	ldr	r3, [r7, #12]
 80076a0:	681b      	ldr	r3, [r3, #0]
 80076a2:	685b      	ldr	r3, [r3, #4]
 80076a4:	441a      	add	r2, r3
 80076a6:	687b      	ldr	r3, [r7, #4]
 80076a8:	605a      	str	r2, [r3, #4]
 80076aa:	68fb      	ldr	r3, [r7, #12]
 80076ac:	681b      	ldr	r3, [r3, #0]
 80076ae:	681a      	ldr	r2, [r3, #0]
 80076b0:	687b      	ldr	r3, [r7, #4]
 80076b2:	601a      	str	r2, [r3, #0]
 80076b4:	e008      	b.n	80076c8 <prvInsertBlockIntoFreeList+0x90>
 80076b6:	4b0c      	ldr	r3, [pc, #48]	; (80076e8 <prvInsertBlockIntoFreeList+0xb0>)
 80076b8:	681a      	ldr	r2, [r3, #0]
 80076ba:	687b      	ldr	r3, [r7, #4]
 80076bc:	601a      	str	r2, [r3, #0]
 80076be:	e003      	b.n	80076c8 <prvInsertBlockIntoFreeList+0x90>
 80076c0:	68fb      	ldr	r3, [r7, #12]
 80076c2:	681a      	ldr	r2, [r3, #0]
 80076c4:	687b      	ldr	r3, [r7, #4]
 80076c6:	601a      	str	r2, [r3, #0]
 80076c8:	68fa      	ldr	r2, [r7, #12]
 80076ca:	687b      	ldr	r3, [r7, #4]
 80076cc:	429a      	cmp	r2, r3
 80076ce:	d002      	beq.n	80076d6 <prvInsertBlockIntoFreeList+0x9e>
 80076d0:	68fb      	ldr	r3, [r7, #12]
 80076d2:	687a      	ldr	r2, [r7, #4]
 80076d4:	601a      	str	r2, [r3, #0]
 80076d6:	bf00      	nop
 80076d8:	3714      	adds	r7, #20
 80076da:	46bd      	mov	sp, r7
 80076dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076e0:	4770      	bx	lr
 80076e2:	bf00      	nop
 80076e4:	20004e10 	.word	0x20004e10
 80076e8:	20004e18 	.word	0x20004e18

080076ec <__cvt>:
 80076ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80076f0:	ec55 4b10 	vmov	r4, r5, d0
 80076f4:	2d00      	cmp	r5, #0
 80076f6:	460e      	mov	r6, r1
 80076f8:	4619      	mov	r1, r3
 80076fa:	462b      	mov	r3, r5
 80076fc:	bfbb      	ittet	lt
 80076fe:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8007702:	461d      	movlt	r5, r3
 8007704:	2300      	movge	r3, #0
 8007706:	232d      	movlt	r3, #45	; 0x2d
 8007708:	700b      	strb	r3, [r1, #0]
 800770a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800770c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8007710:	4691      	mov	r9, r2
 8007712:	f023 0820 	bic.w	r8, r3, #32
 8007716:	bfbc      	itt	lt
 8007718:	4622      	movlt	r2, r4
 800771a:	4614      	movlt	r4, r2
 800771c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8007720:	d005      	beq.n	800772e <__cvt+0x42>
 8007722:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8007726:	d100      	bne.n	800772a <__cvt+0x3e>
 8007728:	3601      	adds	r6, #1
 800772a:	2102      	movs	r1, #2
 800772c:	e000      	b.n	8007730 <__cvt+0x44>
 800772e:	2103      	movs	r1, #3
 8007730:	ab03      	add	r3, sp, #12
 8007732:	9301      	str	r3, [sp, #4]
 8007734:	ab02      	add	r3, sp, #8
 8007736:	9300      	str	r3, [sp, #0]
 8007738:	ec45 4b10 	vmov	d0, r4, r5
 800773c:	4653      	mov	r3, sl
 800773e:	4632      	mov	r2, r6
 8007740:	f000 ffae 	bl	80086a0 <_dtoa_r>
 8007744:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8007748:	4607      	mov	r7, r0
 800774a:	d102      	bne.n	8007752 <__cvt+0x66>
 800774c:	f019 0f01 	tst.w	r9, #1
 8007750:	d022      	beq.n	8007798 <__cvt+0xac>
 8007752:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8007756:	eb07 0906 	add.w	r9, r7, r6
 800775a:	d110      	bne.n	800777e <__cvt+0x92>
 800775c:	783b      	ldrb	r3, [r7, #0]
 800775e:	2b30      	cmp	r3, #48	; 0x30
 8007760:	d10a      	bne.n	8007778 <__cvt+0x8c>
 8007762:	2200      	movs	r2, #0
 8007764:	2300      	movs	r3, #0
 8007766:	4620      	mov	r0, r4
 8007768:	4629      	mov	r1, r5
 800776a:	f7f9 f9b5 	bl	8000ad8 <__aeabi_dcmpeq>
 800776e:	b918      	cbnz	r0, 8007778 <__cvt+0x8c>
 8007770:	f1c6 0601 	rsb	r6, r6, #1
 8007774:	f8ca 6000 	str.w	r6, [sl]
 8007778:	f8da 3000 	ldr.w	r3, [sl]
 800777c:	4499      	add	r9, r3
 800777e:	2200      	movs	r2, #0
 8007780:	2300      	movs	r3, #0
 8007782:	4620      	mov	r0, r4
 8007784:	4629      	mov	r1, r5
 8007786:	f7f9 f9a7 	bl	8000ad8 <__aeabi_dcmpeq>
 800778a:	b108      	cbz	r0, 8007790 <__cvt+0xa4>
 800778c:	f8cd 900c 	str.w	r9, [sp, #12]
 8007790:	2230      	movs	r2, #48	; 0x30
 8007792:	9b03      	ldr	r3, [sp, #12]
 8007794:	454b      	cmp	r3, r9
 8007796:	d307      	bcc.n	80077a8 <__cvt+0xbc>
 8007798:	9b03      	ldr	r3, [sp, #12]
 800779a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800779c:	1bdb      	subs	r3, r3, r7
 800779e:	4638      	mov	r0, r7
 80077a0:	6013      	str	r3, [r2, #0]
 80077a2:	b004      	add	sp, #16
 80077a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80077a8:	1c59      	adds	r1, r3, #1
 80077aa:	9103      	str	r1, [sp, #12]
 80077ac:	701a      	strb	r2, [r3, #0]
 80077ae:	e7f0      	b.n	8007792 <__cvt+0xa6>

080077b0 <__exponent>:
 80077b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80077b2:	4603      	mov	r3, r0
 80077b4:	2900      	cmp	r1, #0
 80077b6:	bfb8      	it	lt
 80077b8:	4249      	neglt	r1, r1
 80077ba:	f803 2b02 	strb.w	r2, [r3], #2
 80077be:	bfb4      	ite	lt
 80077c0:	222d      	movlt	r2, #45	; 0x2d
 80077c2:	222b      	movge	r2, #43	; 0x2b
 80077c4:	2909      	cmp	r1, #9
 80077c6:	7042      	strb	r2, [r0, #1]
 80077c8:	dd2a      	ble.n	8007820 <__exponent+0x70>
 80077ca:	f10d 0207 	add.w	r2, sp, #7
 80077ce:	4617      	mov	r7, r2
 80077d0:	260a      	movs	r6, #10
 80077d2:	4694      	mov	ip, r2
 80077d4:	fb91 f5f6 	sdiv	r5, r1, r6
 80077d8:	fb06 1415 	mls	r4, r6, r5, r1
 80077dc:	3430      	adds	r4, #48	; 0x30
 80077de:	f80c 4c01 	strb.w	r4, [ip, #-1]
 80077e2:	460c      	mov	r4, r1
 80077e4:	2c63      	cmp	r4, #99	; 0x63
 80077e6:	f102 32ff 	add.w	r2, r2, #4294967295
 80077ea:	4629      	mov	r1, r5
 80077ec:	dcf1      	bgt.n	80077d2 <__exponent+0x22>
 80077ee:	3130      	adds	r1, #48	; 0x30
 80077f0:	f1ac 0402 	sub.w	r4, ip, #2
 80077f4:	f802 1c01 	strb.w	r1, [r2, #-1]
 80077f8:	1c41      	adds	r1, r0, #1
 80077fa:	4622      	mov	r2, r4
 80077fc:	42ba      	cmp	r2, r7
 80077fe:	d30a      	bcc.n	8007816 <__exponent+0x66>
 8007800:	f10d 0209 	add.w	r2, sp, #9
 8007804:	eba2 020c 	sub.w	r2, r2, ip
 8007808:	42bc      	cmp	r4, r7
 800780a:	bf88      	it	hi
 800780c:	2200      	movhi	r2, #0
 800780e:	4413      	add	r3, r2
 8007810:	1a18      	subs	r0, r3, r0
 8007812:	b003      	add	sp, #12
 8007814:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007816:	f812 5b01 	ldrb.w	r5, [r2], #1
 800781a:	f801 5f01 	strb.w	r5, [r1, #1]!
 800781e:	e7ed      	b.n	80077fc <__exponent+0x4c>
 8007820:	2330      	movs	r3, #48	; 0x30
 8007822:	3130      	adds	r1, #48	; 0x30
 8007824:	7083      	strb	r3, [r0, #2]
 8007826:	70c1      	strb	r1, [r0, #3]
 8007828:	1d03      	adds	r3, r0, #4
 800782a:	e7f1      	b.n	8007810 <__exponent+0x60>

0800782c <_printf_float>:
 800782c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007830:	ed2d 8b02 	vpush	{d8}
 8007834:	b08d      	sub	sp, #52	; 0x34
 8007836:	460c      	mov	r4, r1
 8007838:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800783c:	4616      	mov	r6, r2
 800783e:	461f      	mov	r7, r3
 8007840:	4605      	mov	r5, r0
 8007842:	f000 fdc9 	bl	80083d8 <_localeconv_r>
 8007846:	f8d0 a000 	ldr.w	sl, [r0]
 800784a:	4650      	mov	r0, sl
 800784c:	f7f8 fd18 	bl	8000280 <strlen>
 8007850:	2300      	movs	r3, #0
 8007852:	930a      	str	r3, [sp, #40]	; 0x28
 8007854:	6823      	ldr	r3, [r4, #0]
 8007856:	9305      	str	r3, [sp, #20]
 8007858:	f8d8 3000 	ldr.w	r3, [r8]
 800785c:	f894 b018 	ldrb.w	fp, [r4, #24]
 8007860:	3307      	adds	r3, #7
 8007862:	f023 0307 	bic.w	r3, r3, #7
 8007866:	f103 0208 	add.w	r2, r3, #8
 800786a:	f8c8 2000 	str.w	r2, [r8]
 800786e:	e9d3 8900 	ldrd	r8, r9, [r3]
 8007872:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8007876:	9307      	str	r3, [sp, #28]
 8007878:	f8cd 8018 	str.w	r8, [sp, #24]
 800787c:	ee08 0a10 	vmov	s16, r0
 8007880:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8007884:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007888:	4b9e      	ldr	r3, [pc, #632]	; (8007b04 <_printf_float+0x2d8>)
 800788a:	f04f 32ff 	mov.w	r2, #4294967295
 800788e:	f7f9 f955 	bl	8000b3c <__aeabi_dcmpun>
 8007892:	bb88      	cbnz	r0, 80078f8 <_printf_float+0xcc>
 8007894:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8007898:	4b9a      	ldr	r3, [pc, #616]	; (8007b04 <_printf_float+0x2d8>)
 800789a:	f04f 32ff 	mov.w	r2, #4294967295
 800789e:	f7f9 f92f 	bl	8000b00 <__aeabi_dcmple>
 80078a2:	bb48      	cbnz	r0, 80078f8 <_printf_float+0xcc>
 80078a4:	2200      	movs	r2, #0
 80078a6:	2300      	movs	r3, #0
 80078a8:	4640      	mov	r0, r8
 80078aa:	4649      	mov	r1, r9
 80078ac:	f7f9 f91e 	bl	8000aec <__aeabi_dcmplt>
 80078b0:	b110      	cbz	r0, 80078b8 <_printf_float+0x8c>
 80078b2:	232d      	movs	r3, #45	; 0x2d
 80078b4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80078b8:	4a93      	ldr	r2, [pc, #588]	; (8007b08 <_printf_float+0x2dc>)
 80078ba:	4b94      	ldr	r3, [pc, #592]	; (8007b0c <_printf_float+0x2e0>)
 80078bc:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 80078c0:	bf94      	ite	ls
 80078c2:	4690      	movls	r8, r2
 80078c4:	4698      	movhi	r8, r3
 80078c6:	2303      	movs	r3, #3
 80078c8:	6123      	str	r3, [r4, #16]
 80078ca:	9b05      	ldr	r3, [sp, #20]
 80078cc:	f023 0304 	bic.w	r3, r3, #4
 80078d0:	6023      	str	r3, [r4, #0]
 80078d2:	f04f 0900 	mov.w	r9, #0
 80078d6:	9700      	str	r7, [sp, #0]
 80078d8:	4633      	mov	r3, r6
 80078da:	aa0b      	add	r2, sp, #44	; 0x2c
 80078dc:	4621      	mov	r1, r4
 80078de:	4628      	mov	r0, r5
 80078e0:	f000 f9da 	bl	8007c98 <_printf_common>
 80078e4:	3001      	adds	r0, #1
 80078e6:	f040 8090 	bne.w	8007a0a <_printf_float+0x1de>
 80078ea:	f04f 30ff 	mov.w	r0, #4294967295
 80078ee:	b00d      	add	sp, #52	; 0x34
 80078f0:	ecbd 8b02 	vpop	{d8}
 80078f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078f8:	4642      	mov	r2, r8
 80078fa:	464b      	mov	r3, r9
 80078fc:	4640      	mov	r0, r8
 80078fe:	4649      	mov	r1, r9
 8007900:	f7f9 f91c 	bl	8000b3c <__aeabi_dcmpun>
 8007904:	b140      	cbz	r0, 8007918 <_printf_float+0xec>
 8007906:	464b      	mov	r3, r9
 8007908:	2b00      	cmp	r3, #0
 800790a:	bfbc      	itt	lt
 800790c:	232d      	movlt	r3, #45	; 0x2d
 800790e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8007912:	4a7f      	ldr	r2, [pc, #508]	; (8007b10 <_printf_float+0x2e4>)
 8007914:	4b7f      	ldr	r3, [pc, #508]	; (8007b14 <_printf_float+0x2e8>)
 8007916:	e7d1      	b.n	80078bc <_printf_float+0x90>
 8007918:	6863      	ldr	r3, [r4, #4]
 800791a:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800791e:	9206      	str	r2, [sp, #24]
 8007920:	1c5a      	adds	r2, r3, #1
 8007922:	d13f      	bne.n	80079a4 <_printf_float+0x178>
 8007924:	2306      	movs	r3, #6
 8007926:	6063      	str	r3, [r4, #4]
 8007928:	9b05      	ldr	r3, [sp, #20]
 800792a:	6861      	ldr	r1, [r4, #4]
 800792c:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8007930:	2300      	movs	r3, #0
 8007932:	9303      	str	r3, [sp, #12]
 8007934:	ab0a      	add	r3, sp, #40	; 0x28
 8007936:	e9cd b301 	strd	fp, r3, [sp, #4]
 800793a:	ab09      	add	r3, sp, #36	; 0x24
 800793c:	ec49 8b10 	vmov	d0, r8, r9
 8007940:	9300      	str	r3, [sp, #0]
 8007942:	6022      	str	r2, [r4, #0]
 8007944:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8007948:	4628      	mov	r0, r5
 800794a:	f7ff fecf 	bl	80076ec <__cvt>
 800794e:	9b06      	ldr	r3, [sp, #24]
 8007950:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007952:	2b47      	cmp	r3, #71	; 0x47
 8007954:	4680      	mov	r8, r0
 8007956:	d108      	bne.n	800796a <_printf_float+0x13e>
 8007958:	1cc8      	adds	r0, r1, #3
 800795a:	db02      	blt.n	8007962 <_printf_float+0x136>
 800795c:	6863      	ldr	r3, [r4, #4]
 800795e:	4299      	cmp	r1, r3
 8007960:	dd41      	ble.n	80079e6 <_printf_float+0x1ba>
 8007962:	f1ab 0302 	sub.w	r3, fp, #2
 8007966:	fa5f fb83 	uxtb.w	fp, r3
 800796a:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800796e:	d820      	bhi.n	80079b2 <_printf_float+0x186>
 8007970:	3901      	subs	r1, #1
 8007972:	465a      	mov	r2, fp
 8007974:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8007978:	9109      	str	r1, [sp, #36]	; 0x24
 800797a:	f7ff ff19 	bl	80077b0 <__exponent>
 800797e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007980:	1813      	adds	r3, r2, r0
 8007982:	2a01      	cmp	r2, #1
 8007984:	4681      	mov	r9, r0
 8007986:	6123      	str	r3, [r4, #16]
 8007988:	dc02      	bgt.n	8007990 <_printf_float+0x164>
 800798a:	6822      	ldr	r2, [r4, #0]
 800798c:	07d2      	lsls	r2, r2, #31
 800798e:	d501      	bpl.n	8007994 <_printf_float+0x168>
 8007990:	3301      	adds	r3, #1
 8007992:	6123      	str	r3, [r4, #16]
 8007994:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8007998:	2b00      	cmp	r3, #0
 800799a:	d09c      	beq.n	80078d6 <_printf_float+0xaa>
 800799c:	232d      	movs	r3, #45	; 0x2d
 800799e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80079a2:	e798      	b.n	80078d6 <_printf_float+0xaa>
 80079a4:	9a06      	ldr	r2, [sp, #24]
 80079a6:	2a47      	cmp	r2, #71	; 0x47
 80079a8:	d1be      	bne.n	8007928 <_printf_float+0xfc>
 80079aa:	2b00      	cmp	r3, #0
 80079ac:	d1bc      	bne.n	8007928 <_printf_float+0xfc>
 80079ae:	2301      	movs	r3, #1
 80079b0:	e7b9      	b.n	8007926 <_printf_float+0xfa>
 80079b2:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 80079b6:	d118      	bne.n	80079ea <_printf_float+0x1be>
 80079b8:	2900      	cmp	r1, #0
 80079ba:	6863      	ldr	r3, [r4, #4]
 80079bc:	dd0b      	ble.n	80079d6 <_printf_float+0x1aa>
 80079be:	6121      	str	r1, [r4, #16]
 80079c0:	b913      	cbnz	r3, 80079c8 <_printf_float+0x19c>
 80079c2:	6822      	ldr	r2, [r4, #0]
 80079c4:	07d0      	lsls	r0, r2, #31
 80079c6:	d502      	bpl.n	80079ce <_printf_float+0x1a2>
 80079c8:	3301      	adds	r3, #1
 80079ca:	440b      	add	r3, r1
 80079cc:	6123      	str	r3, [r4, #16]
 80079ce:	65a1      	str	r1, [r4, #88]	; 0x58
 80079d0:	f04f 0900 	mov.w	r9, #0
 80079d4:	e7de      	b.n	8007994 <_printf_float+0x168>
 80079d6:	b913      	cbnz	r3, 80079de <_printf_float+0x1b2>
 80079d8:	6822      	ldr	r2, [r4, #0]
 80079da:	07d2      	lsls	r2, r2, #31
 80079dc:	d501      	bpl.n	80079e2 <_printf_float+0x1b6>
 80079de:	3302      	adds	r3, #2
 80079e0:	e7f4      	b.n	80079cc <_printf_float+0x1a0>
 80079e2:	2301      	movs	r3, #1
 80079e4:	e7f2      	b.n	80079cc <_printf_float+0x1a0>
 80079e6:	f04f 0b67 	mov.w	fp, #103	; 0x67
 80079ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80079ec:	4299      	cmp	r1, r3
 80079ee:	db05      	blt.n	80079fc <_printf_float+0x1d0>
 80079f0:	6823      	ldr	r3, [r4, #0]
 80079f2:	6121      	str	r1, [r4, #16]
 80079f4:	07d8      	lsls	r0, r3, #31
 80079f6:	d5ea      	bpl.n	80079ce <_printf_float+0x1a2>
 80079f8:	1c4b      	adds	r3, r1, #1
 80079fa:	e7e7      	b.n	80079cc <_printf_float+0x1a0>
 80079fc:	2900      	cmp	r1, #0
 80079fe:	bfd4      	ite	le
 8007a00:	f1c1 0202 	rsble	r2, r1, #2
 8007a04:	2201      	movgt	r2, #1
 8007a06:	4413      	add	r3, r2
 8007a08:	e7e0      	b.n	80079cc <_printf_float+0x1a0>
 8007a0a:	6823      	ldr	r3, [r4, #0]
 8007a0c:	055a      	lsls	r2, r3, #21
 8007a0e:	d407      	bmi.n	8007a20 <_printf_float+0x1f4>
 8007a10:	6923      	ldr	r3, [r4, #16]
 8007a12:	4642      	mov	r2, r8
 8007a14:	4631      	mov	r1, r6
 8007a16:	4628      	mov	r0, r5
 8007a18:	47b8      	blx	r7
 8007a1a:	3001      	adds	r0, #1
 8007a1c:	d12c      	bne.n	8007a78 <_printf_float+0x24c>
 8007a1e:	e764      	b.n	80078ea <_printf_float+0xbe>
 8007a20:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8007a24:	f240 80e0 	bls.w	8007be8 <_printf_float+0x3bc>
 8007a28:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8007a2c:	2200      	movs	r2, #0
 8007a2e:	2300      	movs	r3, #0
 8007a30:	f7f9 f852 	bl	8000ad8 <__aeabi_dcmpeq>
 8007a34:	2800      	cmp	r0, #0
 8007a36:	d034      	beq.n	8007aa2 <_printf_float+0x276>
 8007a38:	4a37      	ldr	r2, [pc, #220]	; (8007b18 <_printf_float+0x2ec>)
 8007a3a:	2301      	movs	r3, #1
 8007a3c:	4631      	mov	r1, r6
 8007a3e:	4628      	mov	r0, r5
 8007a40:	47b8      	blx	r7
 8007a42:	3001      	adds	r0, #1
 8007a44:	f43f af51 	beq.w	80078ea <_printf_float+0xbe>
 8007a48:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8007a4c:	429a      	cmp	r2, r3
 8007a4e:	db02      	blt.n	8007a56 <_printf_float+0x22a>
 8007a50:	6823      	ldr	r3, [r4, #0]
 8007a52:	07d8      	lsls	r0, r3, #31
 8007a54:	d510      	bpl.n	8007a78 <_printf_float+0x24c>
 8007a56:	ee18 3a10 	vmov	r3, s16
 8007a5a:	4652      	mov	r2, sl
 8007a5c:	4631      	mov	r1, r6
 8007a5e:	4628      	mov	r0, r5
 8007a60:	47b8      	blx	r7
 8007a62:	3001      	adds	r0, #1
 8007a64:	f43f af41 	beq.w	80078ea <_printf_float+0xbe>
 8007a68:	f04f 0800 	mov.w	r8, #0
 8007a6c:	f104 091a 	add.w	r9, r4, #26
 8007a70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007a72:	3b01      	subs	r3, #1
 8007a74:	4543      	cmp	r3, r8
 8007a76:	dc09      	bgt.n	8007a8c <_printf_float+0x260>
 8007a78:	6823      	ldr	r3, [r4, #0]
 8007a7a:	079b      	lsls	r3, r3, #30
 8007a7c:	f100 8107 	bmi.w	8007c8e <_printf_float+0x462>
 8007a80:	68e0      	ldr	r0, [r4, #12]
 8007a82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007a84:	4298      	cmp	r0, r3
 8007a86:	bfb8      	it	lt
 8007a88:	4618      	movlt	r0, r3
 8007a8a:	e730      	b.n	80078ee <_printf_float+0xc2>
 8007a8c:	2301      	movs	r3, #1
 8007a8e:	464a      	mov	r2, r9
 8007a90:	4631      	mov	r1, r6
 8007a92:	4628      	mov	r0, r5
 8007a94:	47b8      	blx	r7
 8007a96:	3001      	adds	r0, #1
 8007a98:	f43f af27 	beq.w	80078ea <_printf_float+0xbe>
 8007a9c:	f108 0801 	add.w	r8, r8, #1
 8007aa0:	e7e6      	b.n	8007a70 <_printf_float+0x244>
 8007aa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007aa4:	2b00      	cmp	r3, #0
 8007aa6:	dc39      	bgt.n	8007b1c <_printf_float+0x2f0>
 8007aa8:	4a1b      	ldr	r2, [pc, #108]	; (8007b18 <_printf_float+0x2ec>)
 8007aaa:	2301      	movs	r3, #1
 8007aac:	4631      	mov	r1, r6
 8007aae:	4628      	mov	r0, r5
 8007ab0:	47b8      	blx	r7
 8007ab2:	3001      	adds	r0, #1
 8007ab4:	f43f af19 	beq.w	80078ea <_printf_float+0xbe>
 8007ab8:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8007abc:	4313      	orrs	r3, r2
 8007abe:	d102      	bne.n	8007ac6 <_printf_float+0x29a>
 8007ac0:	6823      	ldr	r3, [r4, #0]
 8007ac2:	07d9      	lsls	r1, r3, #31
 8007ac4:	d5d8      	bpl.n	8007a78 <_printf_float+0x24c>
 8007ac6:	ee18 3a10 	vmov	r3, s16
 8007aca:	4652      	mov	r2, sl
 8007acc:	4631      	mov	r1, r6
 8007ace:	4628      	mov	r0, r5
 8007ad0:	47b8      	blx	r7
 8007ad2:	3001      	adds	r0, #1
 8007ad4:	f43f af09 	beq.w	80078ea <_printf_float+0xbe>
 8007ad8:	f04f 0900 	mov.w	r9, #0
 8007adc:	f104 0a1a 	add.w	sl, r4, #26
 8007ae0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007ae2:	425b      	negs	r3, r3
 8007ae4:	454b      	cmp	r3, r9
 8007ae6:	dc01      	bgt.n	8007aec <_printf_float+0x2c0>
 8007ae8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007aea:	e792      	b.n	8007a12 <_printf_float+0x1e6>
 8007aec:	2301      	movs	r3, #1
 8007aee:	4652      	mov	r2, sl
 8007af0:	4631      	mov	r1, r6
 8007af2:	4628      	mov	r0, r5
 8007af4:	47b8      	blx	r7
 8007af6:	3001      	adds	r0, #1
 8007af8:	f43f aef7 	beq.w	80078ea <_printf_float+0xbe>
 8007afc:	f109 0901 	add.w	r9, r9, #1
 8007b00:	e7ee      	b.n	8007ae0 <_printf_float+0x2b4>
 8007b02:	bf00      	nop
 8007b04:	7fefffff 	.word	0x7fefffff
 8007b08:	0800a488 	.word	0x0800a488
 8007b0c:	0800a48c 	.word	0x0800a48c
 8007b10:	0800a490 	.word	0x0800a490
 8007b14:	0800a494 	.word	0x0800a494
 8007b18:	0800a498 	.word	0x0800a498
 8007b1c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007b1e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8007b20:	429a      	cmp	r2, r3
 8007b22:	bfa8      	it	ge
 8007b24:	461a      	movge	r2, r3
 8007b26:	2a00      	cmp	r2, #0
 8007b28:	4691      	mov	r9, r2
 8007b2a:	dc37      	bgt.n	8007b9c <_printf_float+0x370>
 8007b2c:	f04f 0b00 	mov.w	fp, #0
 8007b30:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007b34:	f104 021a 	add.w	r2, r4, #26
 8007b38:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8007b3a:	9305      	str	r3, [sp, #20]
 8007b3c:	eba3 0309 	sub.w	r3, r3, r9
 8007b40:	455b      	cmp	r3, fp
 8007b42:	dc33      	bgt.n	8007bac <_printf_float+0x380>
 8007b44:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8007b48:	429a      	cmp	r2, r3
 8007b4a:	db3b      	blt.n	8007bc4 <_printf_float+0x398>
 8007b4c:	6823      	ldr	r3, [r4, #0]
 8007b4e:	07da      	lsls	r2, r3, #31
 8007b50:	d438      	bmi.n	8007bc4 <_printf_float+0x398>
 8007b52:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8007b56:	eba2 0903 	sub.w	r9, r2, r3
 8007b5a:	9b05      	ldr	r3, [sp, #20]
 8007b5c:	1ad2      	subs	r2, r2, r3
 8007b5e:	4591      	cmp	r9, r2
 8007b60:	bfa8      	it	ge
 8007b62:	4691      	movge	r9, r2
 8007b64:	f1b9 0f00 	cmp.w	r9, #0
 8007b68:	dc35      	bgt.n	8007bd6 <_printf_float+0x3aa>
 8007b6a:	f04f 0800 	mov.w	r8, #0
 8007b6e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8007b72:	f104 0a1a 	add.w	sl, r4, #26
 8007b76:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8007b7a:	1a9b      	subs	r3, r3, r2
 8007b7c:	eba3 0309 	sub.w	r3, r3, r9
 8007b80:	4543      	cmp	r3, r8
 8007b82:	f77f af79 	ble.w	8007a78 <_printf_float+0x24c>
 8007b86:	2301      	movs	r3, #1
 8007b88:	4652      	mov	r2, sl
 8007b8a:	4631      	mov	r1, r6
 8007b8c:	4628      	mov	r0, r5
 8007b8e:	47b8      	blx	r7
 8007b90:	3001      	adds	r0, #1
 8007b92:	f43f aeaa 	beq.w	80078ea <_printf_float+0xbe>
 8007b96:	f108 0801 	add.w	r8, r8, #1
 8007b9a:	e7ec      	b.n	8007b76 <_printf_float+0x34a>
 8007b9c:	4613      	mov	r3, r2
 8007b9e:	4631      	mov	r1, r6
 8007ba0:	4642      	mov	r2, r8
 8007ba2:	4628      	mov	r0, r5
 8007ba4:	47b8      	blx	r7
 8007ba6:	3001      	adds	r0, #1
 8007ba8:	d1c0      	bne.n	8007b2c <_printf_float+0x300>
 8007baa:	e69e      	b.n	80078ea <_printf_float+0xbe>
 8007bac:	2301      	movs	r3, #1
 8007bae:	4631      	mov	r1, r6
 8007bb0:	4628      	mov	r0, r5
 8007bb2:	9205      	str	r2, [sp, #20]
 8007bb4:	47b8      	blx	r7
 8007bb6:	3001      	adds	r0, #1
 8007bb8:	f43f ae97 	beq.w	80078ea <_printf_float+0xbe>
 8007bbc:	9a05      	ldr	r2, [sp, #20]
 8007bbe:	f10b 0b01 	add.w	fp, fp, #1
 8007bc2:	e7b9      	b.n	8007b38 <_printf_float+0x30c>
 8007bc4:	ee18 3a10 	vmov	r3, s16
 8007bc8:	4652      	mov	r2, sl
 8007bca:	4631      	mov	r1, r6
 8007bcc:	4628      	mov	r0, r5
 8007bce:	47b8      	blx	r7
 8007bd0:	3001      	adds	r0, #1
 8007bd2:	d1be      	bne.n	8007b52 <_printf_float+0x326>
 8007bd4:	e689      	b.n	80078ea <_printf_float+0xbe>
 8007bd6:	9a05      	ldr	r2, [sp, #20]
 8007bd8:	464b      	mov	r3, r9
 8007bda:	4442      	add	r2, r8
 8007bdc:	4631      	mov	r1, r6
 8007bde:	4628      	mov	r0, r5
 8007be0:	47b8      	blx	r7
 8007be2:	3001      	adds	r0, #1
 8007be4:	d1c1      	bne.n	8007b6a <_printf_float+0x33e>
 8007be6:	e680      	b.n	80078ea <_printf_float+0xbe>
 8007be8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007bea:	2a01      	cmp	r2, #1
 8007bec:	dc01      	bgt.n	8007bf2 <_printf_float+0x3c6>
 8007bee:	07db      	lsls	r3, r3, #31
 8007bf0:	d53a      	bpl.n	8007c68 <_printf_float+0x43c>
 8007bf2:	2301      	movs	r3, #1
 8007bf4:	4642      	mov	r2, r8
 8007bf6:	4631      	mov	r1, r6
 8007bf8:	4628      	mov	r0, r5
 8007bfa:	47b8      	blx	r7
 8007bfc:	3001      	adds	r0, #1
 8007bfe:	f43f ae74 	beq.w	80078ea <_printf_float+0xbe>
 8007c02:	ee18 3a10 	vmov	r3, s16
 8007c06:	4652      	mov	r2, sl
 8007c08:	4631      	mov	r1, r6
 8007c0a:	4628      	mov	r0, r5
 8007c0c:	47b8      	blx	r7
 8007c0e:	3001      	adds	r0, #1
 8007c10:	f43f ae6b 	beq.w	80078ea <_printf_float+0xbe>
 8007c14:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8007c18:	2200      	movs	r2, #0
 8007c1a:	2300      	movs	r3, #0
 8007c1c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8007c20:	f7f8 ff5a 	bl	8000ad8 <__aeabi_dcmpeq>
 8007c24:	b9d8      	cbnz	r0, 8007c5e <_printf_float+0x432>
 8007c26:	f10a 33ff 	add.w	r3, sl, #4294967295
 8007c2a:	f108 0201 	add.w	r2, r8, #1
 8007c2e:	4631      	mov	r1, r6
 8007c30:	4628      	mov	r0, r5
 8007c32:	47b8      	blx	r7
 8007c34:	3001      	adds	r0, #1
 8007c36:	d10e      	bne.n	8007c56 <_printf_float+0x42a>
 8007c38:	e657      	b.n	80078ea <_printf_float+0xbe>
 8007c3a:	2301      	movs	r3, #1
 8007c3c:	4652      	mov	r2, sl
 8007c3e:	4631      	mov	r1, r6
 8007c40:	4628      	mov	r0, r5
 8007c42:	47b8      	blx	r7
 8007c44:	3001      	adds	r0, #1
 8007c46:	f43f ae50 	beq.w	80078ea <_printf_float+0xbe>
 8007c4a:	f108 0801 	add.w	r8, r8, #1
 8007c4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007c50:	3b01      	subs	r3, #1
 8007c52:	4543      	cmp	r3, r8
 8007c54:	dcf1      	bgt.n	8007c3a <_printf_float+0x40e>
 8007c56:	464b      	mov	r3, r9
 8007c58:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8007c5c:	e6da      	b.n	8007a14 <_printf_float+0x1e8>
 8007c5e:	f04f 0800 	mov.w	r8, #0
 8007c62:	f104 0a1a 	add.w	sl, r4, #26
 8007c66:	e7f2      	b.n	8007c4e <_printf_float+0x422>
 8007c68:	2301      	movs	r3, #1
 8007c6a:	4642      	mov	r2, r8
 8007c6c:	e7df      	b.n	8007c2e <_printf_float+0x402>
 8007c6e:	2301      	movs	r3, #1
 8007c70:	464a      	mov	r2, r9
 8007c72:	4631      	mov	r1, r6
 8007c74:	4628      	mov	r0, r5
 8007c76:	47b8      	blx	r7
 8007c78:	3001      	adds	r0, #1
 8007c7a:	f43f ae36 	beq.w	80078ea <_printf_float+0xbe>
 8007c7e:	f108 0801 	add.w	r8, r8, #1
 8007c82:	68e3      	ldr	r3, [r4, #12]
 8007c84:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007c86:	1a5b      	subs	r3, r3, r1
 8007c88:	4543      	cmp	r3, r8
 8007c8a:	dcf0      	bgt.n	8007c6e <_printf_float+0x442>
 8007c8c:	e6f8      	b.n	8007a80 <_printf_float+0x254>
 8007c8e:	f04f 0800 	mov.w	r8, #0
 8007c92:	f104 0919 	add.w	r9, r4, #25
 8007c96:	e7f4      	b.n	8007c82 <_printf_float+0x456>

08007c98 <_printf_common>:
 8007c98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007c9c:	4616      	mov	r6, r2
 8007c9e:	4699      	mov	r9, r3
 8007ca0:	688a      	ldr	r2, [r1, #8]
 8007ca2:	690b      	ldr	r3, [r1, #16]
 8007ca4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8007ca8:	4293      	cmp	r3, r2
 8007caa:	bfb8      	it	lt
 8007cac:	4613      	movlt	r3, r2
 8007cae:	6033      	str	r3, [r6, #0]
 8007cb0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8007cb4:	4607      	mov	r7, r0
 8007cb6:	460c      	mov	r4, r1
 8007cb8:	b10a      	cbz	r2, 8007cbe <_printf_common+0x26>
 8007cba:	3301      	adds	r3, #1
 8007cbc:	6033      	str	r3, [r6, #0]
 8007cbe:	6823      	ldr	r3, [r4, #0]
 8007cc0:	0699      	lsls	r1, r3, #26
 8007cc2:	bf42      	ittt	mi
 8007cc4:	6833      	ldrmi	r3, [r6, #0]
 8007cc6:	3302      	addmi	r3, #2
 8007cc8:	6033      	strmi	r3, [r6, #0]
 8007cca:	6825      	ldr	r5, [r4, #0]
 8007ccc:	f015 0506 	ands.w	r5, r5, #6
 8007cd0:	d106      	bne.n	8007ce0 <_printf_common+0x48>
 8007cd2:	f104 0a19 	add.w	sl, r4, #25
 8007cd6:	68e3      	ldr	r3, [r4, #12]
 8007cd8:	6832      	ldr	r2, [r6, #0]
 8007cda:	1a9b      	subs	r3, r3, r2
 8007cdc:	42ab      	cmp	r3, r5
 8007cde:	dc26      	bgt.n	8007d2e <_printf_common+0x96>
 8007ce0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8007ce4:	1e13      	subs	r3, r2, #0
 8007ce6:	6822      	ldr	r2, [r4, #0]
 8007ce8:	bf18      	it	ne
 8007cea:	2301      	movne	r3, #1
 8007cec:	0692      	lsls	r2, r2, #26
 8007cee:	d42b      	bmi.n	8007d48 <_printf_common+0xb0>
 8007cf0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8007cf4:	4649      	mov	r1, r9
 8007cf6:	4638      	mov	r0, r7
 8007cf8:	47c0      	blx	r8
 8007cfa:	3001      	adds	r0, #1
 8007cfc:	d01e      	beq.n	8007d3c <_printf_common+0xa4>
 8007cfe:	6823      	ldr	r3, [r4, #0]
 8007d00:	6922      	ldr	r2, [r4, #16]
 8007d02:	f003 0306 	and.w	r3, r3, #6
 8007d06:	2b04      	cmp	r3, #4
 8007d08:	bf02      	ittt	eq
 8007d0a:	68e5      	ldreq	r5, [r4, #12]
 8007d0c:	6833      	ldreq	r3, [r6, #0]
 8007d0e:	1aed      	subeq	r5, r5, r3
 8007d10:	68a3      	ldr	r3, [r4, #8]
 8007d12:	bf0c      	ite	eq
 8007d14:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007d18:	2500      	movne	r5, #0
 8007d1a:	4293      	cmp	r3, r2
 8007d1c:	bfc4      	itt	gt
 8007d1e:	1a9b      	subgt	r3, r3, r2
 8007d20:	18ed      	addgt	r5, r5, r3
 8007d22:	2600      	movs	r6, #0
 8007d24:	341a      	adds	r4, #26
 8007d26:	42b5      	cmp	r5, r6
 8007d28:	d11a      	bne.n	8007d60 <_printf_common+0xc8>
 8007d2a:	2000      	movs	r0, #0
 8007d2c:	e008      	b.n	8007d40 <_printf_common+0xa8>
 8007d2e:	2301      	movs	r3, #1
 8007d30:	4652      	mov	r2, sl
 8007d32:	4649      	mov	r1, r9
 8007d34:	4638      	mov	r0, r7
 8007d36:	47c0      	blx	r8
 8007d38:	3001      	adds	r0, #1
 8007d3a:	d103      	bne.n	8007d44 <_printf_common+0xac>
 8007d3c:	f04f 30ff 	mov.w	r0, #4294967295
 8007d40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007d44:	3501      	adds	r5, #1
 8007d46:	e7c6      	b.n	8007cd6 <_printf_common+0x3e>
 8007d48:	18e1      	adds	r1, r4, r3
 8007d4a:	1c5a      	adds	r2, r3, #1
 8007d4c:	2030      	movs	r0, #48	; 0x30
 8007d4e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8007d52:	4422      	add	r2, r4
 8007d54:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8007d58:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8007d5c:	3302      	adds	r3, #2
 8007d5e:	e7c7      	b.n	8007cf0 <_printf_common+0x58>
 8007d60:	2301      	movs	r3, #1
 8007d62:	4622      	mov	r2, r4
 8007d64:	4649      	mov	r1, r9
 8007d66:	4638      	mov	r0, r7
 8007d68:	47c0      	blx	r8
 8007d6a:	3001      	adds	r0, #1
 8007d6c:	d0e6      	beq.n	8007d3c <_printf_common+0xa4>
 8007d6e:	3601      	adds	r6, #1
 8007d70:	e7d9      	b.n	8007d26 <_printf_common+0x8e>
	...

08007d74 <_printf_i>:
 8007d74:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007d78:	7e0f      	ldrb	r7, [r1, #24]
 8007d7a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8007d7c:	2f78      	cmp	r7, #120	; 0x78
 8007d7e:	4691      	mov	r9, r2
 8007d80:	4680      	mov	r8, r0
 8007d82:	460c      	mov	r4, r1
 8007d84:	469a      	mov	sl, r3
 8007d86:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8007d8a:	d807      	bhi.n	8007d9c <_printf_i+0x28>
 8007d8c:	2f62      	cmp	r7, #98	; 0x62
 8007d8e:	d80a      	bhi.n	8007da6 <_printf_i+0x32>
 8007d90:	2f00      	cmp	r7, #0
 8007d92:	f000 80d4 	beq.w	8007f3e <_printf_i+0x1ca>
 8007d96:	2f58      	cmp	r7, #88	; 0x58
 8007d98:	f000 80c0 	beq.w	8007f1c <_printf_i+0x1a8>
 8007d9c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007da0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8007da4:	e03a      	b.n	8007e1c <_printf_i+0xa8>
 8007da6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8007daa:	2b15      	cmp	r3, #21
 8007dac:	d8f6      	bhi.n	8007d9c <_printf_i+0x28>
 8007dae:	a101      	add	r1, pc, #4	; (adr r1, 8007db4 <_printf_i+0x40>)
 8007db0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007db4:	08007e0d 	.word	0x08007e0d
 8007db8:	08007e21 	.word	0x08007e21
 8007dbc:	08007d9d 	.word	0x08007d9d
 8007dc0:	08007d9d 	.word	0x08007d9d
 8007dc4:	08007d9d 	.word	0x08007d9d
 8007dc8:	08007d9d 	.word	0x08007d9d
 8007dcc:	08007e21 	.word	0x08007e21
 8007dd0:	08007d9d 	.word	0x08007d9d
 8007dd4:	08007d9d 	.word	0x08007d9d
 8007dd8:	08007d9d 	.word	0x08007d9d
 8007ddc:	08007d9d 	.word	0x08007d9d
 8007de0:	08007f25 	.word	0x08007f25
 8007de4:	08007e4d 	.word	0x08007e4d
 8007de8:	08007edf 	.word	0x08007edf
 8007dec:	08007d9d 	.word	0x08007d9d
 8007df0:	08007d9d 	.word	0x08007d9d
 8007df4:	08007f47 	.word	0x08007f47
 8007df8:	08007d9d 	.word	0x08007d9d
 8007dfc:	08007e4d 	.word	0x08007e4d
 8007e00:	08007d9d 	.word	0x08007d9d
 8007e04:	08007d9d 	.word	0x08007d9d
 8007e08:	08007ee7 	.word	0x08007ee7
 8007e0c:	682b      	ldr	r3, [r5, #0]
 8007e0e:	1d1a      	adds	r2, r3, #4
 8007e10:	681b      	ldr	r3, [r3, #0]
 8007e12:	602a      	str	r2, [r5, #0]
 8007e14:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8007e18:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007e1c:	2301      	movs	r3, #1
 8007e1e:	e09f      	b.n	8007f60 <_printf_i+0x1ec>
 8007e20:	6820      	ldr	r0, [r4, #0]
 8007e22:	682b      	ldr	r3, [r5, #0]
 8007e24:	0607      	lsls	r7, r0, #24
 8007e26:	f103 0104 	add.w	r1, r3, #4
 8007e2a:	6029      	str	r1, [r5, #0]
 8007e2c:	d501      	bpl.n	8007e32 <_printf_i+0xbe>
 8007e2e:	681e      	ldr	r6, [r3, #0]
 8007e30:	e003      	b.n	8007e3a <_printf_i+0xc6>
 8007e32:	0646      	lsls	r6, r0, #25
 8007e34:	d5fb      	bpl.n	8007e2e <_printf_i+0xba>
 8007e36:	f9b3 6000 	ldrsh.w	r6, [r3]
 8007e3a:	2e00      	cmp	r6, #0
 8007e3c:	da03      	bge.n	8007e46 <_printf_i+0xd2>
 8007e3e:	232d      	movs	r3, #45	; 0x2d
 8007e40:	4276      	negs	r6, r6
 8007e42:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007e46:	485a      	ldr	r0, [pc, #360]	; (8007fb0 <_printf_i+0x23c>)
 8007e48:	230a      	movs	r3, #10
 8007e4a:	e012      	b.n	8007e72 <_printf_i+0xfe>
 8007e4c:	682b      	ldr	r3, [r5, #0]
 8007e4e:	6820      	ldr	r0, [r4, #0]
 8007e50:	1d19      	adds	r1, r3, #4
 8007e52:	6029      	str	r1, [r5, #0]
 8007e54:	0605      	lsls	r5, r0, #24
 8007e56:	d501      	bpl.n	8007e5c <_printf_i+0xe8>
 8007e58:	681e      	ldr	r6, [r3, #0]
 8007e5a:	e002      	b.n	8007e62 <_printf_i+0xee>
 8007e5c:	0641      	lsls	r1, r0, #25
 8007e5e:	d5fb      	bpl.n	8007e58 <_printf_i+0xe4>
 8007e60:	881e      	ldrh	r6, [r3, #0]
 8007e62:	4853      	ldr	r0, [pc, #332]	; (8007fb0 <_printf_i+0x23c>)
 8007e64:	2f6f      	cmp	r7, #111	; 0x6f
 8007e66:	bf0c      	ite	eq
 8007e68:	2308      	moveq	r3, #8
 8007e6a:	230a      	movne	r3, #10
 8007e6c:	2100      	movs	r1, #0
 8007e6e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8007e72:	6865      	ldr	r5, [r4, #4]
 8007e74:	60a5      	str	r5, [r4, #8]
 8007e76:	2d00      	cmp	r5, #0
 8007e78:	bfa2      	ittt	ge
 8007e7a:	6821      	ldrge	r1, [r4, #0]
 8007e7c:	f021 0104 	bicge.w	r1, r1, #4
 8007e80:	6021      	strge	r1, [r4, #0]
 8007e82:	b90e      	cbnz	r6, 8007e88 <_printf_i+0x114>
 8007e84:	2d00      	cmp	r5, #0
 8007e86:	d04b      	beq.n	8007f20 <_printf_i+0x1ac>
 8007e88:	4615      	mov	r5, r2
 8007e8a:	fbb6 f1f3 	udiv	r1, r6, r3
 8007e8e:	fb03 6711 	mls	r7, r3, r1, r6
 8007e92:	5dc7      	ldrb	r7, [r0, r7]
 8007e94:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8007e98:	4637      	mov	r7, r6
 8007e9a:	42bb      	cmp	r3, r7
 8007e9c:	460e      	mov	r6, r1
 8007e9e:	d9f4      	bls.n	8007e8a <_printf_i+0x116>
 8007ea0:	2b08      	cmp	r3, #8
 8007ea2:	d10b      	bne.n	8007ebc <_printf_i+0x148>
 8007ea4:	6823      	ldr	r3, [r4, #0]
 8007ea6:	07de      	lsls	r6, r3, #31
 8007ea8:	d508      	bpl.n	8007ebc <_printf_i+0x148>
 8007eaa:	6923      	ldr	r3, [r4, #16]
 8007eac:	6861      	ldr	r1, [r4, #4]
 8007eae:	4299      	cmp	r1, r3
 8007eb0:	bfde      	ittt	le
 8007eb2:	2330      	movle	r3, #48	; 0x30
 8007eb4:	f805 3c01 	strble.w	r3, [r5, #-1]
 8007eb8:	f105 35ff 	addle.w	r5, r5, #4294967295
 8007ebc:	1b52      	subs	r2, r2, r5
 8007ebe:	6122      	str	r2, [r4, #16]
 8007ec0:	f8cd a000 	str.w	sl, [sp]
 8007ec4:	464b      	mov	r3, r9
 8007ec6:	aa03      	add	r2, sp, #12
 8007ec8:	4621      	mov	r1, r4
 8007eca:	4640      	mov	r0, r8
 8007ecc:	f7ff fee4 	bl	8007c98 <_printf_common>
 8007ed0:	3001      	adds	r0, #1
 8007ed2:	d14a      	bne.n	8007f6a <_printf_i+0x1f6>
 8007ed4:	f04f 30ff 	mov.w	r0, #4294967295
 8007ed8:	b004      	add	sp, #16
 8007eda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007ede:	6823      	ldr	r3, [r4, #0]
 8007ee0:	f043 0320 	orr.w	r3, r3, #32
 8007ee4:	6023      	str	r3, [r4, #0]
 8007ee6:	4833      	ldr	r0, [pc, #204]	; (8007fb4 <_printf_i+0x240>)
 8007ee8:	2778      	movs	r7, #120	; 0x78
 8007eea:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8007eee:	6823      	ldr	r3, [r4, #0]
 8007ef0:	6829      	ldr	r1, [r5, #0]
 8007ef2:	061f      	lsls	r7, r3, #24
 8007ef4:	f851 6b04 	ldr.w	r6, [r1], #4
 8007ef8:	d402      	bmi.n	8007f00 <_printf_i+0x18c>
 8007efa:	065f      	lsls	r7, r3, #25
 8007efc:	bf48      	it	mi
 8007efe:	b2b6      	uxthmi	r6, r6
 8007f00:	07df      	lsls	r7, r3, #31
 8007f02:	bf48      	it	mi
 8007f04:	f043 0320 	orrmi.w	r3, r3, #32
 8007f08:	6029      	str	r1, [r5, #0]
 8007f0a:	bf48      	it	mi
 8007f0c:	6023      	strmi	r3, [r4, #0]
 8007f0e:	b91e      	cbnz	r6, 8007f18 <_printf_i+0x1a4>
 8007f10:	6823      	ldr	r3, [r4, #0]
 8007f12:	f023 0320 	bic.w	r3, r3, #32
 8007f16:	6023      	str	r3, [r4, #0]
 8007f18:	2310      	movs	r3, #16
 8007f1a:	e7a7      	b.n	8007e6c <_printf_i+0xf8>
 8007f1c:	4824      	ldr	r0, [pc, #144]	; (8007fb0 <_printf_i+0x23c>)
 8007f1e:	e7e4      	b.n	8007eea <_printf_i+0x176>
 8007f20:	4615      	mov	r5, r2
 8007f22:	e7bd      	b.n	8007ea0 <_printf_i+0x12c>
 8007f24:	682b      	ldr	r3, [r5, #0]
 8007f26:	6826      	ldr	r6, [r4, #0]
 8007f28:	6961      	ldr	r1, [r4, #20]
 8007f2a:	1d18      	adds	r0, r3, #4
 8007f2c:	6028      	str	r0, [r5, #0]
 8007f2e:	0635      	lsls	r5, r6, #24
 8007f30:	681b      	ldr	r3, [r3, #0]
 8007f32:	d501      	bpl.n	8007f38 <_printf_i+0x1c4>
 8007f34:	6019      	str	r1, [r3, #0]
 8007f36:	e002      	b.n	8007f3e <_printf_i+0x1ca>
 8007f38:	0670      	lsls	r0, r6, #25
 8007f3a:	d5fb      	bpl.n	8007f34 <_printf_i+0x1c0>
 8007f3c:	8019      	strh	r1, [r3, #0]
 8007f3e:	2300      	movs	r3, #0
 8007f40:	6123      	str	r3, [r4, #16]
 8007f42:	4615      	mov	r5, r2
 8007f44:	e7bc      	b.n	8007ec0 <_printf_i+0x14c>
 8007f46:	682b      	ldr	r3, [r5, #0]
 8007f48:	1d1a      	adds	r2, r3, #4
 8007f4a:	602a      	str	r2, [r5, #0]
 8007f4c:	681d      	ldr	r5, [r3, #0]
 8007f4e:	6862      	ldr	r2, [r4, #4]
 8007f50:	2100      	movs	r1, #0
 8007f52:	4628      	mov	r0, r5
 8007f54:	f7f8 f944 	bl	80001e0 <memchr>
 8007f58:	b108      	cbz	r0, 8007f5e <_printf_i+0x1ea>
 8007f5a:	1b40      	subs	r0, r0, r5
 8007f5c:	6060      	str	r0, [r4, #4]
 8007f5e:	6863      	ldr	r3, [r4, #4]
 8007f60:	6123      	str	r3, [r4, #16]
 8007f62:	2300      	movs	r3, #0
 8007f64:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007f68:	e7aa      	b.n	8007ec0 <_printf_i+0x14c>
 8007f6a:	6923      	ldr	r3, [r4, #16]
 8007f6c:	462a      	mov	r2, r5
 8007f6e:	4649      	mov	r1, r9
 8007f70:	4640      	mov	r0, r8
 8007f72:	47d0      	blx	sl
 8007f74:	3001      	adds	r0, #1
 8007f76:	d0ad      	beq.n	8007ed4 <_printf_i+0x160>
 8007f78:	6823      	ldr	r3, [r4, #0]
 8007f7a:	079b      	lsls	r3, r3, #30
 8007f7c:	d413      	bmi.n	8007fa6 <_printf_i+0x232>
 8007f7e:	68e0      	ldr	r0, [r4, #12]
 8007f80:	9b03      	ldr	r3, [sp, #12]
 8007f82:	4298      	cmp	r0, r3
 8007f84:	bfb8      	it	lt
 8007f86:	4618      	movlt	r0, r3
 8007f88:	e7a6      	b.n	8007ed8 <_printf_i+0x164>
 8007f8a:	2301      	movs	r3, #1
 8007f8c:	4632      	mov	r2, r6
 8007f8e:	4649      	mov	r1, r9
 8007f90:	4640      	mov	r0, r8
 8007f92:	47d0      	blx	sl
 8007f94:	3001      	adds	r0, #1
 8007f96:	d09d      	beq.n	8007ed4 <_printf_i+0x160>
 8007f98:	3501      	adds	r5, #1
 8007f9a:	68e3      	ldr	r3, [r4, #12]
 8007f9c:	9903      	ldr	r1, [sp, #12]
 8007f9e:	1a5b      	subs	r3, r3, r1
 8007fa0:	42ab      	cmp	r3, r5
 8007fa2:	dcf2      	bgt.n	8007f8a <_printf_i+0x216>
 8007fa4:	e7eb      	b.n	8007f7e <_printf_i+0x20a>
 8007fa6:	2500      	movs	r5, #0
 8007fa8:	f104 0619 	add.w	r6, r4, #25
 8007fac:	e7f5      	b.n	8007f9a <_printf_i+0x226>
 8007fae:	bf00      	nop
 8007fb0:	0800a49a 	.word	0x0800a49a
 8007fb4:	0800a4ab 	.word	0x0800a4ab

08007fb8 <std>:
 8007fb8:	2300      	movs	r3, #0
 8007fba:	b510      	push	{r4, lr}
 8007fbc:	4604      	mov	r4, r0
 8007fbe:	e9c0 3300 	strd	r3, r3, [r0]
 8007fc2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8007fc6:	6083      	str	r3, [r0, #8]
 8007fc8:	8181      	strh	r1, [r0, #12]
 8007fca:	6643      	str	r3, [r0, #100]	; 0x64
 8007fcc:	81c2      	strh	r2, [r0, #14]
 8007fce:	6183      	str	r3, [r0, #24]
 8007fd0:	4619      	mov	r1, r3
 8007fd2:	2208      	movs	r2, #8
 8007fd4:	305c      	adds	r0, #92	; 0x5c
 8007fd6:	f000 f9f7 	bl	80083c8 <memset>
 8007fda:	4b0d      	ldr	r3, [pc, #52]	; (8008010 <std+0x58>)
 8007fdc:	6263      	str	r3, [r4, #36]	; 0x24
 8007fde:	4b0d      	ldr	r3, [pc, #52]	; (8008014 <std+0x5c>)
 8007fe0:	62a3      	str	r3, [r4, #40]	; 0x28
 8007fe2:	4b0d      	ldr	r3, [pc, #52]	; (8008018 <std+0x60>)
 8007fe4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8007fe6:	4b0d      	ldr	r3, [pc, #52]	; (800801c <std+0x64>)
 8007fe8:	6323      	str	r3, [r4, #48]	; 0x30
 8007fea:	4b0d      	ldr	r3, [pc, #52]	; (8008020 <std+0x68>)
 8007fec:	6224      	str	r4, [r4, #32]
 8007fee:	429c      	cmp	r4, r3
 8007ff0:	d006      	beq.n	8008000 <std+0x48>
 8007ff2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8007ff6:	4294      	cmp	r4, r2
 8007ff8:	d002      	beq.n	8008000 <std+0x48>
 8007ffa:	33d0      	adds	r3, #208	; 0xd0
 8007ffc:	429c      	cmp	r4, r3
 8007ffe:	d105      	bne.n	800800c <std+0x54>
 8008000:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8008004:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008008:	f000 bab0 	b.w	800856c <__retarget_lock_init_recursive>
 800800c:	bd10      	pop	{r4, pc}
 800800e:	bf00      	nop
 8008010:	08008219 	.word	0x08008219
 8008014:	0800823b 	.word	0x0800823b
 8008018:	08008273 	.word	0x08008273
 800801c:	08008297 	.word	0x08008297
 8008020:	20004e30 	.word	0x20004e30

08008024 <stdio_exit_handler>:
 8008024:	4a02      	ldr	r2, [pc, #8]	; (8008030 <stdio_exit_handler+0xc>)
 8008026:	4903      	ldr	r1, [pc, #12]	; (8008034 <stdio_exit_handler+0x10>)
 8008028:	4803      	ldr	r0, [pc, #12]	; (8008038 <stdio_exit_handler+0x14>)
 800802a:	f000 b869 	b.w	8008100 <_fwalk_sglue>
 800802e:	bf00      	nop
 8008030:	20000010 	.word	0x20000010
 8008034:	08009f11 	.word	0x08009f11
 8008038:	2000001c 	.word	0x2000001c

0800803c <cleanup_stdio>:
 800803c:	6841      	ldr	r1, [r0, #4]
 800803e:	4b0c      	ldr	r3, [pc, #48]	; (8008070 <cleanup_stdio+0x34>)
 8008040:	4299      	cmp	r1, r3
 8008042:	b510      	push	{r4, lr}
 8008044:	4604      	mov	r4, r0
 8008046:	d001      	beq.n	800804c <cleanup_stdio+0x10>
 8008048:	f001 ff62 	bl	8009f10 <_fflush_r>
 800804c:	68a1      	ldr	r1, [r4, #8]
 800804e:	4b09      	ldr	r3, [pc, #36]	; (8008074 <cleanup_stdio+0x38>)
 8008050:	4299      	cmp	r1, r3
 8008052:	d002      	beq.n	800805a <cleanup_stdio+0x1e>
 8008054:	4620      	mov	r0, r4
 8008056:	f001 ff5b 	bl	8009f10 <_fflush_r>
 800805a:	68e1      	ldr	r1, [r4, #12]
 800805c:	4b06      	ldr	r3, [pc, #24]	; (8008078 <cleanup_stdio+0x3c>)
 800805e:	4299      	cmp	r1, r3
 8008060:	d004      	beq.n	800806c <cleanup_stdio+0x30>
 8008062:	4620      	mov	r0, r4
 8008064:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008068:	f001 bf52 	b.w	8009f10 <_fflush_r>
 800806c:	bd10      	pop	{r4, pc}
 800806e:	bf00      	nop
 8008070:	20004e30 	.word	0x20004e30
 8008074:	20004e98 	.word	0x20004e98
 8008078:	20004f00 	.word	0x20004f00

0800807c <global_stdio_init.part.0>:
 800807c:	b510      	push	{r4, lr}
 800807e:	4b0b      	ldr	r3, [pc, #44]	; (80080ac <global_stdio_init.part.0+0x30>)
 8008080:	4c0b      	ldr	r4, [pc, #44]	; (80080b0 <global_stdio_init.part.0+0x34>)
 8008082:	4a0c      	ldr	r2, [pc, #48]	; (80080b4 <global_stdio_init.part.0+0x38>)
 8008084:	601a      	str	r2, [r3, #0]
 8008086:	4620      	mov	r0, r4
 8008088:	2200      	movs	r2, #0
 800808a:	2104      	movs	r1, #4
 800808c:	f7ff ff94 	bl	8007fb8 <std>
 8008090:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8008094:	2201      	movs	r2, #1
 8008096:	2109      	movs	r1, #9
 8008098:	f7ff ff8e 	bl	8007fb8 <std>
 800809c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80080a0:	2202      	movs	r2, #2
 80080a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80080a6:	2112      	movs	r1, #18
 80080a8:	f7ff bf86 	b.w	8007fb8 <std>
 80080ac:	20004f68 	.word	0x20004f68
 80080b0:	20004e30 	.word	0x20004e30
 80080b4:	08008025 	.word	0x08008025

080080b8 <__sfp_lock_acquire>:
 80080b8:	4801      	ldr	r0, [pc, #4]	; (80080c0 <__sfp_lock_acquire+0x8>)
 80080ba:	f000 ba58 	b.w	800856e <__retarget_lock_acquire_recursive>
 80080be:	bf00      	nop
 80080c0:	20004f71 	.word	0x20004f71

080080c4 <__sfp_lock_release>:
 80080c4:	4801      	ldr	r0, [pc, #4]	; (80080cc <__sfp_lock_release+0x8>)
 80080c6:	f000 ba53 	b.w	8008570 <__retarget_lock_release_recursive>
 80080ca:	bf00      	nop
 80080cc:	20004f71 	.word	0x20004f71

080080d0 <__sinit>:
 80080d0:	b510      	push	{r4, lr}
 80080d2:	4604      	mov	r4, r0
 80080d4:	f7ff fff0 	bl	80080b8 <__sfp_lock_acquire>
 80080d8:	6a23      	ldr	r3, [r4, #32]
 80080da:	b11b      	cbz	r3, 80080e4 <__sinit+0x14>
 80080dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80080e0:	f7ff bff0 	b.w	80080c4 <__sfp_lock_release>
 80080e4:	4b04      	ldr	r3, [pc, #16]	; (80080f8 <__sinit+0x28>)
 80080e6:	6223      	str	r3, [r4, #32]
 80080e8:	4b04      	ldr	r3, [pc, #16]	; (80080fc <__sinit+0x2c>)
 80080ea:	681b      	ldr	r3, [r3, #0]
 80080ec:	2b00      	cmp	r3, #0
 80080ee:	d1f5      	bne.n	80080dc <__sinit+0xc>
 80080f0:	f7ff ffc4 	bl	800807c <global_stdio_init.part.0>
 80080f4:	e7f2      	b.n	80080dc <__sinit+0xc>
 80080f6:	bf00      	nop
 80080f8:	0800803d 	.word	0x0800803d
 80080fc:	20004f68 	.word	0x20004f68

08008100 <_fwalk_sglue>:
 8008100:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008104:	4607      	mov	r7, r0
 8008106:	4688      	mov	r8, r1
 8008108:	4614      	mov	r4, r2
 800810a:	2600      	movs	r6, #0
 800810c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8008110:	f1b9 0901 	subs.w	r9, r9, #1
 8008114:	d505      	bpl.n	8008122 <_fwalk_sglue+0x22>
 8008116:	6824      	ldr	r4, [r4, #0]
 8008118:	2c00      	cmp	r4, #0
 800811a:	d1f7      	bne.n	800810c <_fwalk_sglue+0xc>
 800811c:	4630      	mov	r0, r6
 800811e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008122:	89ab      	ldrh	r3, [r5, #12]
 8008124:	2b01      	cmp	r3, #1
 8008126:	d907      	bls.n	8008138 <_fwalk_sglue+0x38>
 8008128:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800812c:	3301      	adds	r3, #1
 800812e:	d003      	beq.n	8008138 <_fwalk_sglue+0x38>
 8008130:	4629      	mov	r1, r5
 8008132:	4638      	mov	r0, r7
 8008134:	47c0      	blx	r8
 8008136:	4306      	orrs	r6, r0
 8008138:	3568      	adds	r5, #104	; 0x68
 800813a:	e7e9      	b.n	8008110 <_fwalk_sglue+0x10>

0800813c <iprintf>:
 800813c:	b40f      	push	{r0, r1, r2, r3}
 800813e:	b507      	push	{r0, r1, r2, lr}
 8008140:	4906      	ldr	r1, [pc, #24]	; (800815c <iprintf+0x20>)
 8008142:	ab04      	add	r3, sp, #16
 8008144:	6808      	ldr	r0, [r1, #0]
 8008146:	f853 2b04 	ldr.w	r2, [r3], #4
 800814a:	6881      	ldr	r1, [r0, #8]
 800814c:	9301      	str	r3, [sp, #4]
 800814e:	f001 fd3f 	bl	8009bd0 <_vfiprintf_r>
 8008152:	b003      	add	sp, #12
 8008154:	f85d eb04 	ldr.w	lr, [sp], #4
 8008158:	b004      	add	sp, #16
 800815a:	4770      	bx	lr
 800815c:	20000068 	.word	0x20000068

08008160 <_puts_r>:
 8008160:	6a03      	ldr	r3, [r0, #32]
 8008162:	b570      	push	{r4, r5, r6, lr}
 8008164:	6884      	ldr	r4, [r0, #8]
 8008166:	4605      	mov	r5, r0
 8008168:	460e      	mov	r6, r1
 800816a:	b90b      	cbnz	r3, 8008170 <_puts_r+0x10>
 800816c:	f7ff ffb0 	bl	80080d0 <__sinit>
 8008170:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008172:	07db      	lsls	r3, r3, #31
 8008174:	d405      	bmi.n	8008182 <_puts_r+0x22>
 8008176:	89a3      	ldrh	r3, [r4, #12]
 8008178:	0598      	lsls	r0, r3, #22
 800817a:	d402      	bmi.n	8008182 <_puts_r+0x22>
 800817c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800817e:	f000 f9f6 	bl	800856e <__retarget_lock_acquire_recursive>
 8008182:	89a3      	ldrh	r3, [r4, #12]
 8008184:	0719      	lsls	r1, r3, #28
 8008186:	d513      	bpl.n	80081b0 <_puts_r+0x50>
 8008188:	6923      	ldr	r3, [r4, #16]
 800818a:	b18b      	cbz	r3, 80081b0 <_puts_r+0x50>
 800818c:	3e01      	subs	r6, #1
 800818e:	68a3      	ldr	r3, [r4, #8]
 8008190:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8008194:	3b01      	subs	r3, #1
 8008196:	60a3      	str	r3, [r4, #8]
 8008198:	b9e9      	cbnz	r1, 80081d6 <_puts_r+0x76>
 800819a:	2b00      	cmp	r3, #0
 800819c:	da2e      	bge.n	80081fc <_puts_r+0x9c>
 800819e:	4622      	mov	r2, r4
 80081a0:	210a      	movs	r1, #10
 80081a2:	4628      	mov	r0, r5
 80081a4:	f000 f87b 	bl	800829e <__swbuf_r>
 80081a8:	3001      	adds	r0, #1
 80081aa:	d007      	beq.n	80081bc <_puts_r+0x5c>
 80081ac:	250a      	movs	r5, #10
 80081ae:	e007      	b.n	80081c0 <_puts_r+0x60>
 80081b0:	4621      	mov	r1, r4
 80081b2:	4628      	mov	r0, r5
 80081b4:	f000 f8b0 	bl	8008318 <__swsetup_r>
 80081b8:	2800      	cmp	r0, #0
 80081ba:	d0e7      	beq.n	800818c <_puts_r+0x2c>
 80081bc:	f04f 35ff 	mov.w	r5, #4294967295
 80081c0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80081c2:	07da      	lsls	r2, r3, #31
 80081c4:	d405      	bmi.n	80081d2 <_puts_r+0x72>
 80081c6:	89a3      	ldrh	r3, [r4, #12]
 80081c8:	059b      	lsls	r3, r3, #22
 80081ca:	d402      	bmi.n	80081d2 <_puts_r+0x72>
 80081cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80081ce:	f000 f9cf 	bl	8008570 <__retarget_lock_release_recursive>
 80081d2:	4628      	mov	r0, r5
 80081d4:	bd70      	pop	{r4, r5, r6, pc}
 80081d6:	2b00      	cmp	r3, #0
 80081d8:	da04      	bge.n	80081e4 <_puts_r+0x84>
 80081da:	69a2      	ldr	r2, [r4, #24]
 80081dc:	429a      	cmp	r2, r3
 80081de:	dc06      	bgt.n	80081ee <_puts_r+0x8e>
 80081e0:	290a      	cmp	r1, #10
 80081e2:	d004      	beq.n	80081ee <_puts_r+0x8e>
 80081e4:	6823      	ldr	r3, [r4, #0]
 80081e6:	1c5a      	adds	r2, r3, #1
 80081e8:	6022      	str	r2, [r4, #0]
 80081ea:	7019      	strb	r1, [r3, #0]
 80081ec:	e7cf      	b.n	800818e <_puts_r+0x2e>
 80081ee:	4622      	mov	r2, r4
 80081f0:	4628      	mov	r0, r5
 80081f2:	f000 f854 	bl	800829e <__swbuf_r>
 80081f6:	3001      	adds	r0, #1
 80081f8:	d1c9      	bne.n	800818e <_puts_r+0x2e>
 80081fa:	e7df      	b.n	80081bc <_puts_r+0x5c>
 80081fc:	6823      	ldr	r3, [r4, #0]
 80081fe:	250a      	movs	r5, #10
 8008200:	1c5a      	adds	r2, r3, #1
 8008202:	6022      	str	r2, [r4, #0]
 8008204:	701d      	strb	r5, [r3, #0]
 8008206:	e7db      	b.n	80081c0 <_puts_r+0x60>

08008208 <puts>:
 8008208:	4b02      	ldr	r3, [pc, #8]	; (8008214 <puts+0xc>)
 800820a:	4601      	mov	r1, r0
 800820c:	6818      	ldr	r0, [r3, #0]
 800820e:	f7ff bfa7 	b.w	8008160 <_puts_r>
 8008212:	bf00      	nop
 8008214:	20000068 	.word	0x20000068

08008218 <__sread>:
 8008218:	b510      	push	{r4, lr}
 800821a:	460c      	mov	r4, r1
 800821c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008220:	f000 f956 	bl	80084d0 <_read_r>
 8008224:	2800      	cmp	r0, #0
 8008226:	bfab      	itete	ge
 8008228:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800822a:	89a3      	ldrhlt	r3, [r4, #12]
 800822c:	181b      	addge	r3, r3, r0
 800822e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8008232:	bfac      	ite	ge
 8008234:	6563      	strge	r3, [r4, #84]	; 0x54
 8008236:	81a3      	strhlt	r3, [r4, #12]
 8008238:	bd10      	pop	{r4, pc}

0800823a <__swrite>:
 800823a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800823e:	461f      	mov	r7, r3
 8008240:	898b      	ldrh	r3, [r1, #12]
 8008242:	05db      	lsls	r3, r3, #23
 8008244:	4605      	mov	r5, r0
 8008246:	460c      	mov	r4, r1
 8008248:	4616      	mov	r6, r2
 800824a:	d505      	bpl.n	8008258 <__swrite+0x1e>
 800824c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008250:	2302      	movs	r3, #2
 8008252:	2200      	movs	r2, #0
 8008254:	f000 f92a 	bl	80084ac <_lseek_r>
 8008258:	89a3      	ldrh	r3, [r4, #12]
 800825a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800825e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8008262:	81a3      	strh	r3, [r4, #12]
 8008264:	4632      	mov	r2, r6
 8008266:	463b      	mov	r3, r7
 8008268:	4628      	mov	r0, r5
 800826a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800826e:	f000 b941 	b.w	80084f4 <_write_r>

08008272 <__sseek>:
 8008272:	b510      	push	{r4, lr}
 8008274:	460c      	mov	r4, r1
 8008276:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800827a:	f000 f917 	bl	80084ac <_lseek_r>
 800827e:	1c43      	adds	r3, r0, #1
 8008280:	89a3      	ldrh	r3, [r4, #12]
 8008282:	bf15      	itete	ne
 8008284:	6560      	strne	r0, [r4, #84]	; 0x54
 8008286:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800828a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800828e:	81a3      	strheq	r3, [r4, #12]
 8008290:	bf18      	it	ne
 8008292:	81a3      	strhne	r3, [r4, #12]
 8008294:	bd10      	pop	{r4, pc}

08008296 <__sclose>:
 8008296:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800829a:	f000 b8a1 	b.w	80083e0 <_close_r>

0800829e <__swbuf_r>:
 800829e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80082a0:	460e      	mov	r6, r1
 80082a2:	4614      	mov	r4, r2
 80082a4:	4605      	mov	r5, r0
 80082a6:	b118      	cbz	r0, 80082b0 <__swbuf_r+0x12>
 80082a8:	6a03      	ldr	r3, [r0, #32]
 80082aa:	b90b      	cbnz	r3, 80082b0 <__swbuf_r+0x12>
 80082ac:	f7ff ff10 	bl	80080d0 <__sinit>
 80082b0:	69a3      	ldr	r3, [r4, #24]
 80082b2:	60a3      	str	r3, [r4, #8]
 80082b4:	89a3      	ldrh	r3, [r4, #12]
 80082b6:	071a      	lsls	r2, r3, #28
 80082b8:	d525      	bpl.n	8008306 <__swbuf_r+0x68>
 80082ba:	6923      	ldr	r3, [r4, #16]
 80082bc:	b31b      	cbz	r3, 8008306 <__swbuf_r+0x68>
 80082be:	6823      	ldr	r3, [r4, #0]
 80082c0:	6922      	ldr	r2, [r4, #16]
 80082c2:	1a98      	subs	r0, r3, r2
 80082c4:	6963      	ldr	r3, [r4, #20]
 80082c6:	b2f6      	uxtb	r6, r6
 80082c8:	4283      	cmp	r3, r0
 80082ca:	4637      	mov	r7, r6
 80082cc:	dc04      	bgt.n	80082d8 <__swbuf_r+0x3a>
 80082ce:	4621      	mov	r1, r4
 80082d0:	4628      	mov	r0, r5
 80082d2:	f001 fe1d 	bl	8009f10 <_fflush_r>
 80082d6:	b9e0      	cbnz	r0, 8008312 <__swbuf_r+0x74>
 80082d8:	68a3      	ldr	r3, [r4, #8]
 80082da:	3b01      	subs	r3, #1
 80082dc:	60a3      	str	r3, [r4, #8]
 80082de:	6823      	ldr	r3, [r4, #0]
 80082e0:	1c5a      	adds	r2, r3, #1
 80082e2:	6022      	str	r2, [r4, #0]
 80082e4:	701e      	strb	r6, [r3, #0]
 80082e6:	6962      	ldr	r2, [r4, #20]
 80082e8:	1c43      	adds	r3, r0, #1
 80082ea:	429a      	cmp	r2, r3
 80082ec:	d004      	beq.n	80082f8 <__swbuf_r+0x5a>
 80082ee:	89a3      	ldrh	r3, [r4, #12]
 80082f0:	07db      	lsls	r3, r3, #31
 80082f2:	d506      	bpl.n	8008302 <__swbuf_r+0x64>
 80082f4:	2e0a      	cmp	r6, #10
 80082f6:	d104      	bne.n	8008302 <__swbuf_r+0x64>
 80082f8:	4621      	mov	r1, r4
 80082fa:	4628      	mov	r0, r5
 80082fc:	f001 fe08 	bl	8009f10 <_fflush_r>
 8008300:	b938      	cbnz	r0, 8008312 <__swbuf_r+0x74>
 8008302:	4638      	mov	r0, r7
 8008304:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008306:	4621      	mov	r1, r4
 8008308:	4628      	mov	r0, r5
 800830a:	f000 f805 	bl	8008318 <__swsetup_r>
 800830e:	2800      	cmp	r0, #0
 8008310:	d0d5      	beq.n	80082be <__swbuf_r+0x20>
 8008312:	f04f 37ff 	mov.w	r7, #4294967295
 8008316:	e7f4      	b.n	8008302 <__swbuf_r+0x64>

08008318 <__swsetup_r>:
 8008318:	b538      	push	{r3, r4, r5, lr}
 800831a:	4b2a      	ldr	r3, [pc, #168]	; (80083c4 <__swsetup_r+0xac>)
 800831c:	4605      	mov	r5, r0
 800831e:	6818      	ldr	r0, [r3, #0]
 8008320:	460c      	mov	r4, r1
 8008322:	b118      	cbz	r0, 800832c <__swsetup_r+0x14>
 8008324:	6a03      	ldr	r3, [r0, #32]
 8008326:	b90b      	cbnz	r3, 800832c <__swsetup_r+0x14>
 8008328:	f7ff fed2 	bl	80080d0 <__sinit>
 800832c:	89a3      	ldrh	r3, [r4, #12]
 800832e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8008332:	0718      	lsls	r0, r3, #28
 8008334:	d422      	bmi.n	800837c <__swsetup_r+0x64>
 8008336:	06d9      	lsls	r1, r3, #27
 8008338:	d407      	bmi.n	800834a <__swsetup_r+0x32>
 800833a:	2309      	movs	r3, #9
 800833c:	602b      	str	r3, [r5, #0]
 800833e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8008342:	81a3      	strh	r3, [r4, #12]
 8008344:	f04f 30ff 	mov.w	r0, #4294967295
 8008348:	e034      	b.n	80083b4 <__swsetup_r+0x9c>
 800834a:	0758      	lsls	r0, r3, #29
 800834c:	d512      	bpl.n	8008374 <__swsetup_r+0x5c>
 800834e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8008350:	b141      	cbz	r1, 8008364 <__swsetup_r+0x4c>
 8008352:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8008356:	4299      	cmp	r1, r3
 8008358:	d002      	beq.n	8008360 <__swsetup_r+0x48>
 800835a:	4628      	mov	r0, r5
 800835c:	f000 ff92 	bl	8009284 <_free_r>
 8008360:	2300      	movs	r3, #0
 8008362:	6363      	str	r3, [r4, #52]	; 0x34
 8008364:	89a3      	ldrh	r3, [r4, #12]
 8008366:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800836a:	81a3      	strh	r3, [r4, #12]
 800836c:	2300      	movs	r3, #0
 800836e:	6063      	str	r3, [r4, #4]
 8008370:	6923      	ldr	r3, [r4, #16]
 8008372:	6023      	str	r3, [r4, #0]
 8008374:	89a3      	ldrh	r3, [r4, #12]
 8008376:	f043 0308 	orr.w	r3, r3, #8
 800837a:	81a3      	strh	r3, [r4, #12]
 800837c:	6923      	ldr	r3, [r4, #16]
 800837e:	b94b      	cbnz	r3, 8008394 <__swsetup_r+0x7c>
 8008380:	89a3      	ldrh	r3, [r4, #12]
 8008382:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8008386:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800838a:	d003      	beq.n	8008394 <__swsetup_r+0x7c>
 800838c:	4621      	mov	r1, r4
 800838e:	4628      	mov	r0, r5
 8008390:	f001 fe0c 	bl	8009fac <__smakebuf_r>
 8008394:	89a0      	ldrh	r0, [r4, #12]
 8008396:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800839a:	f010 0301 	ands.w	r3, r0, #1
 800839e:	d00a      	beq.n	80083b6 <__swsetup_r+0x9e>
 80083a0:	2300      	movs	r3, #0
 80083a2:	60a3      	str	r3, [r4, #8]
 80083a4:	6963      	ldr	r3, [r4, #20]
 80083a6:	425b      	negs	r3, r3
 80083a8:	61a3      	str	r3, [r4, #24]
 80083aa:	6923      	ldr	r3, [r4, #16]
 80083ac:	b943      	cbnz	r3, 80083c0 <__swsetup_r+0xa8>
 80083ae:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80083b2:	d1c4      	bne.n	800833e <__swsetup_r+0x26>
 80083b4:	bd38      	pop	{r3, r4, r5, pc}
 80083b6:	0781      	lsls	r1, r0, #30
 80083b8:	bf58      	it	pl
 80083ba:	6963      	ldrpl	r3, [r4, #20]
 80083bc:	60a3      	str	r3, [r4, #8]
 80083be:	e7f4      	b.n	80083aa <__swsetup_r+0x92>
 80083c0:	2000      	movs	r0, #0
 80083c2:	e7f7      	b.n	80083b4 <__swsetup_r+0x9c>
 80083c4:	20000068 	.word	0x20000068

080083c8 <memset>:
 80083c8:	4402      	add	r2, r0
 80083ca:	4603      	mov	r3, r0
 80083cc:	4293      	cmp	r3, r2
 80083ce:	d100      	bne.n	80083d2 <memset+0xa>
 80083d0:	4770      	bx	lr
 80083d2:	f803 1b01 	strb.w	r1, [r3], #1
 80083d6:	e7f9      	b.n	80083cc <memset+0x4>

080083d8 <_localeconv_r>:
 80083d8:	4800      	ldr	r0, [pc, #0]	; (80083dc <_localeconv_r+0x4>)
 80083da:	4770      	bx	lr
 80083dc:	2000015c 	.word	0x2000015c

080083e0 <_close_r>:
 80083e0:	b538      	push	{r3, r4, r5, lr}
 80083e2:	4d06      	ldr	r5, [pc, #24]	; (80083fc <_close_r+0x1c>)
 80083e4:	2300      	movs	r3, #0
 80083e6:	4604      	mov	r4, r0
 80083e8:	4608      	mov	r0, r1
 80083ea:	602b      	str	r3, [r5, #0]
 80083ec:	f7f9 fe5b 	bl	80020a6 <_close>
 80083f0:	1c43      	adds	r3, r0, #1
 80083f2:	d102      	bne.n	80083fa <_close_r+0x1a>
 80083f4:	682b      	ldr	r3, [r5, #0]
 80083f6:	b103      	cbz	r3, 80083fa <_close_r+0x1a>
 80083f8:	6023      	str	r3, [r4, #0]
 80083fa:	bd38      	pop	{r3, r4, r5, pc}
 80083fc:	20004f6c 	.word	0x20004f6c

08008400 <_reclaim_reent>:
 8008400:	4b29      	ldr	r3, [pc, #164]	; (80084a8 <_reclaim_reent+0xa8>)
 8008402:	681b      	ldr	r3, [r3, #0]
 8008404:	4283      	cmp	r3, r0
 8008406:	b570      	push	{r4, r5, r6, lr}
 8008408:	4604      	mov	r4, r0
 800840a:	d04b      	beq.n	80084a4 <_reclaim_reent+0xa4>
 800840c:	69c3      	ldr	r3, [r0, #28]
 800840e:	b143      	cbz	r3, 8008422 <_reclaim_reent+0x22>
 8008410:	68db      	ldr	r3, [r3, #12]
 8008412:	2b00      	cmp	r3, #0
 8008414:	d144      	bne.n	80084a0 <_reclaim_reent+0xa0>
 8008416:	69e3      	ldr	r3, [r4, #28]
 8008418:	6819      	ldr	r1, [r3, #0]
 800841a:	b111      	cbz	r1, 8008422 <_reclaim_reent+0x22>
 800841c:	4620      	mov	r0, r4
 800841e:	f000 ff31 	bl	8009284 <_free_r>
 8008422:	6961      	ldr	r1, [r4, #20]
 8008424:	b111      	cbz	r1, 800842c <_reclaim_reent+0x2c>
 8008426:	4620      	mov	r0, r4
 8008428:	f000 ff2c 	bl	8009284 <_free_r>
 800842c:	69e1      	ldr	r1, [r4, #28]
 800842e:	b111      	cbz	r1, 8008436 <_reclaim_reent+0x36>
 8008430:	4620      	mov	r0, r4
 8008432:	f000 ff27 	bl	8009284 <_free_r>
 8008436:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8008438:	b111      	cbz	r1, 8008440 <_reclaim_reent+0x40>
 800843a:	4620      	mov	r0, r4
 800843c:	f000 ff22 	bl	8009284 <_free_r>
 8008440:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8008442:	b111      	cbz	r1, 800844a <_reclaim_reent+0x4a>
 8008444:	4620      	mov	r0, r4
 8008446:	f000 ff1d 	bl	8009284 <_free_r>
 800844a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800844c:	b111      	cbz	r1, 8008454 <_reclaim_reent+0x54>
 800844e:	4620      	mov	r0, r4
 8008450:	f000 ff18 	bl	8009284 <_free_r>
 8008454:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8008456:	b111      	cbz	r1, 800845e <_reclaim_reent+0x5e>
 8008458:	4620      	mov	r0, r4
 800845a:	f000 ff13 	bl	8009284 <_free_r>
 800845e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8008460:	b111      	cbz	r1, 8008468 <_reclaim_reent+0x68>
 8008462:	4620      	mov	r0, r4
 8008464:	f000 ff0e 	bl	8009284 <_free_r>
 8008468:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800846a:	b111      	cbz	r1, 8008472 <_reclaim_reent+0x72>
 800846c:	4620      	mov	r0, r4
 800846e:	f000 ff09 	bl	8009284 <_free_r>
 8008472:	6a23      	ldr	r3, [r4, #32]
 8008474:	b1b3      	cbz	r3, 80084a4 <_reclaim_reent+0xa4>
 8008476:	4620      	mov	r0, r4
 8008478:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800847c:	4718      	bx	r3
 800847e:	5949      	ldr	r1, [r1, r5]
 8008480:	b941      	cbnz	r1, 8008494 <_reclaim_reent+0x94>
 8008482:	3504      	adds	r5, #4
 8008484:	69e3      	ldr	r3, [r4, #28]
 8008486:	2d80      	cmp	r5, #128	; 0x80
 8008488:	68d9      	ldr	r1, [r3, #12]
 800848a:	d1f8      	bne.n	800847e <_reclaim_reent+0x7e>
 800848c:	4620      	mov	r0, r4
 800848e:	f000 fef9 	bl	8009284 <_free_r>
 8008492:	e7c0      	b.n	8008416 <_reclaim_reent+0x16>
 8008494:	680e      	ldr	r6, [r1, #0]
 8008496:	4620      	mov	r0, r4
 8008498:	f000 fef4 	bl	8009284 <_free_r>
 800849c:	4631      	mov	r1, r6
 800849e:	e7ef      	b.n	8008480 <_reclaim_reent+0x80>
 80084a0:	2500      	movs	r5, #0
 80084a2:	e7ef      	b.n	8008484 <_reclaim_reent+0x84>
 80084a4:	bd70      	pop	{r4, r5, r6, pc}
 80084a6:	bf00      	nop
 80084a8:	20000068 	.word	0x20000068

080084ac <_lseek_r>:
 80084ac:	b538      	push	{r3, r4, r5, lr}
 80084ae:	4d07      	ldr	r5, [pc, #28]	; (80084cc <_lseek_r+0x20>)
 80084b0:	4604      	mov	r4, r0
 80084b2:	4608      	mov	r0, r1
 80084b4:	4611      	mov	r1, r2
 80084b6:	2200      	movs	r2, #0
 80084b8:	602a      	str	r2, [r5, #0]
 80084ba:	461a      	mov	r2, r3
 80084bc:	f7f9 fe1a 	bl	80020f4 <_lseek>
 80084c0:	1c43      	adds	r3, r0, #1
 80084c2:	d102      	bne.n	80084ca <_lseek_r+0x1e>
 80084c4:	682b      	ldr	r3, [r5, #0]
 80084c6:	b103      	cbz	r3, 80084ca <_lseek_r+0x1e>
 80084c8:	6023      	str	r3, [r4, #0]
 80084ca:	bd38      	pop	{r3, r4, r5, pc}
 80084cc:	20004f6c 	.word	0x20004f6c

080084d0 <_read_r>:
 80084d0:	b538      	push	{r3, r4, r5, lr}
 80084d2:	4d07      	ldr	r5, [pc, #28]	; (80084f0 <_read_r+0x20>)
 80084d4:	4604      	mov	r4, r0
 80084d6:	4608      	mov	r0, r1
 80084d8:	4611      	mov	r1, r2
 80084da:	2200      	movs	r2, #0
 80084dc:	602a      	str	r2, [r5, #0]
 80084de:	461a      	mov	r2, r3
 80084e0:	f7f9 fda8 	bl	8002034 <_read>
 80084e4:	1c43      	adds	r3, r0, #1
 80084e6:	d102      	bne.n	80084ee <_read_r+0x1e>
 80084e8:	682b      	ldr	r3, [r5, #0]
 80084ea:	b103      	cbz	r3, 80084ee <_read_r+0x1e>
 80084ec:	6023      	str	r3, [r4, #0]
 80084ee:	bd38      	pop	{r3, r4, r5, pc}
 80084f0:	20004f6c 	.word	0x20004f6c

080084f4 <_write_r>:
 80084f4:	b538      	push	{r3, r4, r5, lr}
 80084f6:	4d07      	ldr	r5, [pc, #28]	; (8008514 <_write_r+0x20>)
 80084f8:	4604      	mov	r4, r0
 80084fa:	4608      	mov	r0, r1
 80084fc:	4611      	mov	r1, r2
 80084fe:	2200      	movs	r2, #0
 8008500:	602a      	str	r2, [r5, #0]
 8008502:	461a      	mov	r2, r3
 8008504:	f7f9 fdb3 	bl	800206e <_write>
 8008508:	1c43      	adds	r3, r0, #1
 800850a:	d102      	bne.n	8008512 <_write_r+0x1e>
 800850c:	682b      	ldr	r3, [r5, #0]
 800850e:	b103      	cbz	r3, 8008512 <_write_r+0x1e>
 8008510:	6023      	str	r3, [r4, #0]
 8008512:	bd38      	pop	{r3, r4, r5, pc}
 8008514:	20004f6c 	.word	0x20004f6c

08008518 <__errno>:
 8008518:	4b01      	ldr	r3, [pc, #4]	; (8008520 <__errno+0x8>)
 800851a:	6818      	ldr	r0, [r3, #0]
 800851c:	4770      	bx	lr
 800851e:	bf00      	nop
 8008520:	20000068 	.word	0x20000068

08008524 <__libc_init_array>:
 8008524:	b570      	push	{r4, r5, r6, lr}
 8008526:	4d0d      	ldr	r5, [pc, #52]	; (800855c <__libc_init_array+0x38>)
 8008528:	4c0d      	ldr	r4, [pc, #52]	; (8008560 <__libc_init_array+0x3c>)
 800852a:	1b64      	subs	r4, r4, r5
 800852c:	10a4      	asrs	r4, r4, #2
 800852e:	2600      	movs	r6, #0
 8008530:	42a6      	cmp	r6, r4
 8008532:	d109      	bne.n	8008548 <__libc_init_array+0x24>
 8008534:	4d0b      	ldr	r5, [pc, #44]	; (8008564 <__libc_init_array+0x40>)
 8008536:	4c0c      	ldr	r4, [pc, #48]	; (8008568 <__libc_init_array+0x44>)
 8008538:	f001 fe58 	bl	800a1ec <_init>
 800853c:	1b64      	subs	r4, r4, r5
 800853e:	10a4      	asrs	r4, r4, #2
 8008540:	2600      	movs	r6, #0
 8008542:	42a6      	cmp	r6, r4
 8008544:	d105      	bne.n	8008552 <__libc_init_array+0x2e>
 8008546:	bd70      	pop	{r4, r5, r6, pc}
 8008548:	f855 3b04 	ldr.w	r3, [r5], #4
 800854c:	4798      	blx	r3
 800854e:	3601      	adds	r6, #1
 8008550:	e7ee      	b.n	8008530 <__libc_init_array+0xc>
 8008552:	f855 3b04 	ldr.w	r3, [r5], #4
 8008556:	4798      	blx	r3
 8008558:	3601      	adds	r6, #1
 800855a:	e7f2      	b.n	8008542 <__libc_init_array+0x1e>
 800855c:	0800a804 	.word	0x0800a804
 8008560:	0800a804 	.word	0x0800a804
 8008564:	0800a804 	.word	0x0800a804
 8008568:	0800a808 	.word	0x0800a808

0800856c <__retarget_lock_init_recursive>:
 800856c:	4770      	bx	lr

0800856e <__retarget_lock_acquire_recursive>:
 800856e:	4770      	bx	lr

08008570 <__retarget_lock_release_recursive>:
 8008570:	4770      	bx	lr

08008572 <memcpy>:
 8008572:	440a      	add	r2, r1
 8008574:	4291      	cmp	r1, r2
 8008576:	f100 33ff 	add.w	r3, r0, #4294967295
 800857a:	d100      	bne.n	800857e <memcpy+0xc>
 800857c:	4770      	bx	lr
 800857e:	b510      	push	{r4, lr}
 8008580:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008584:	f803 4f01 	strb.w	r4, [r3, #1]!
 8008588:	4291      	cmp	r1, r2
 800858a:	d1f9      	bne.n	8008580 <memcpy+0xe>
 800858c:	bd10      	pop	{r4, pc}

0800858e <quorem>:
 800858e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008592:	6903      	ldr	r3, [r0, #16]
 8008594:	690c      	ldr	r4, [r1, #16]
 8008596:	42a3      	cmp	r3, r4
 8008598:	4607      	mov	r7, r0
 800859a:	db7e      	blt.n	800869a <quorem+0x10c>
 800859c:	3c01      	subs	r4, #1
 800859e:	f101 0814 	add.w	r8, r1, #20
 80085a2:	f100 0514 	add.w	r5, r0, #20
 80085a6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80085aa:	9301      	str	r3, [sp, #4]
 80085ac:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80085b0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80085b4:	3301      	adds	r3, #1
 80085b6:	429a      	cmp	r2, r3
 80085b8:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 80085bc:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80085c0:	fbb2 f6f3 	udiv	r6, r2, r3
 80085c4:	d331      	bcc.n	800862a <quorem+0x9c>
 80085c6:	f04f 0e00 	mov.w	lr, #0
 80085ca:	4640      	mov	r0, r8
 80085cc:	46ac      	mov	ip, r5
 80085ce:	46f2      	mov	sl, lr
 80085d0:	f850 2b04 	ldr.w	r2, [r0], #4
 80085d4:	b293      	uxth	r3, r2
 80085d6:	fb06 e303 	mla	r3, r6, r3, lr
 80085da:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80085de:	0c1a      	lsrs	r2, r3, #16
 80085e0:	b29b      	uxth	r3, r3
 80085e2:	ebaa 0303 	sub.w	r3, sl, r3
 80085e6:	f8dc a000 	ldr.w	sl, [ip]
 80085ea:	fa13 f38a 	uxtah	r3, r3, sl
 80085ee:	fb06 220e 	mla	r2, r6, lr, r2
 80085f2:	9300      	str	r3, [sp, #0]
 80085f4:	9b00      	ldr	r3, [sp, #0]
 80085f6:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80085fa:	b292      	uxth	r2, r2
 80085fc:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8008600:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8008604:	f8bd 3000 	ldrh.w	r3, [sp]
 8008608:	4581      	cmp	r9, r0
 800860a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800860e:	f84c 3b04 	str.w	r3, [ip], #4
 8008612:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8008616:	d2db      	bcs.n	80085d0 <quorem+0x42>
 8008618:	f855 300b 	ldr.w	r3, [r5, fp]
 800861c:	b92b      	cbnz	r3, 800862a <quorem+0x9c>
 800861e:	9b01      	ldr	r3, [sp, #4]
 8008620:	3b04      	subs	r3, #4
 8008622:	429d      	cmp	r5, r3
 8008624:	461a      	mov	r2, r3
 8008626:	d32c      	bcc.n	8008682 <quorem+0xf4>
 8008628:	613c      	str	r4, [r7, #16]
 800862a:	4638      	mov	r0, r7
 800862c:	f001 f9a6 	bl	800997c <__mcmp>
 8008630:	2800      	cmp	r0, #0
 8008632:	db22      	blt.n	800867a <quorem+0xec>
 8008634:	3601      	adds	r6, #1
 8008636:	4629      	mov	r1, r5
 8008638:	2000      	movs	r0, #0
 800863a:	f858 2b04 	ldr.w	r2, [r8], #4
 800863e:	f8d1 c000 	ldr.w	ip, [r1]
 8008642:	b293      	uxth	r3, r2
 8008644:	1ac3      	subs	r3, r0, r3
 8008646:	0c12      	lsrs	r2, r2, #16
 8008648:	fa13 f38c 	uxtah	r3, r3, ip
 800864c:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8008650:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8008654:	b29b      	uxth	r3, r3
 8008656:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800865a:	45c1      	cmp	r9, r8
 800865c:	f841 3b04 	str.w	r3, [r1], #4
 8008660:	ea4f 4022 	mov.w	r0, r2, asr #16
 8008664:	d2e9      	bcs.n	800863a <quorem+0xac>
 8008666:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800866a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800866e:	b922      	cbnz	r2, 800867a <quorem+0xec>
 8008670:	3b04      	subs	r3, #4
 8008672:	429d      	cmp	r5, r3
 8008674:	461a      	mov	r2, r3
 8008676:	d30a      	bcc.n	800868e <quorem+0x100>
 8008678:	613c      	str	r4, [r7, #16]
 800867a:	4630      	mov	r0, r6
 800867c:	b003      	add	sp, #12
 800867e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008682:	6812      	ldr	r2, [r2, #0]
 8008684:	3b04      	subs	r3, #4
 8008686:	2a00      	cmp	r2, #0
 8008688:	d1ce      	bne.n	8008628 <quorem+0x9a>
 800868a:	3c01      	subs	r4, #1
 800868c:	e7c9      	b.n	8008622 <quorem+0x94>
 800868e:	6812      	ldr	r2, [r2, #0]
 8008690:	3b04      	subs	r3, #4
 8008692:	2a00      	cmp	r2, #0
 8008694:	d1f0      	bne.n	8008678 <quorem+0xea>
 8008696:	3c01      	subs	r4, #1
 8008698:	e7eb      	b.n	8008672 <quorem+0xe4>
 800869a:	2000      	movs	r0, #0
 800869c:	e7ee      	b.n	800867c <quorem+0xee>
	...

080086a0 <_dtoa_r>:
 80086a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086a4:	ed2d 8b04 	vpush	{d8-d9}
 80086a8:	69c5      	ldr	r5, [r0, #28]
 80086aa:	b093      	sub	sp, #76	; 0x4c
 80086ac:	ed8d 0b02 	vstr	d0, [sp, #8]
 80086b0:	ec57 6b10 	vmov	r6, r7, d0
 80086b4:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 80086b8:	9107      	str	r1, [sp, #28]
 80086ba:	4604      	mov	r4, r0
 80086bc:	920a      	str	r2, [sp, #40]	; 0x28
 80086be:	930d      	str	r3, [sp, #52]	; 0x34
 80086c0:	b975      	cbnz	r5, 80086e0 <_dtoa_r+0x40>
 80086c2:	2010      	movs	r0, #16
 80086c4:	f000 fe2a 	bl	800931c <malloc>
 80086c8:	4602      	mov	r2, r0
 80086ca:	61e0      	str	r0, [r4, #28]
 80086cc:	b920      	cbnz	r0, 80086d8 <_dtoa_r+0x38>
 80086ce:	4bae      	ldr	r3, [pc, #696]	; (8008988 <_dtoa_r+0x2e8>)
 80086d0:	21ef      	movs	r1, #239	; 0xef
 80086d2:	48ae      	ldr	r0, [pc, #696]	; (800898c <_dtoa_r+0x2ec>)
 80086d4:	f001 fcd8 	bl	800a088 <__assert_func>
 80086d8:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80086dc:	6005      	str	r5, [r0, #0]
 80086de:	60c5      	str	r5, [r0, #12]
 80086e0:	69e3      	ldr	r3, [r4, #28]
 80086e2:	6819      	ldr	r1, [r3, #0]
 80086e4:	b151      	cbz	r1, 80086fc <_dtoa_r+0x5c>
 80086e6:	685a      	ldr	r2, [r3, #4]
 80086e8:	604a      	str	r2, [r1, #4]
 80086ea:	2301      	movs	r3, #1
 80086ec:	4093      	lsls	r3, r2
 80086ee:	608b      	str	r3, [r1, #8]
 80086f0:	4620      	mov	r0, r4
 80086f2:	f000 ff07 	bl	8009504 <_Bfree>
 80086f6:	69e3      	ldr	r3, [r4, #28]
 80086f8:	2200      	movs	r2, #0
 80086fa:	601a      	str	r2, [r3, #0]
 80086fc:	1e3b      	subs	r3, r7, #0
 80086fe:	bfbb      	ittet	lt
 8008700:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8008704:	9303      	strlt	r3, [sp, #12]
 8008706:	2300      	movge	r3, #0
 8008708:	2201      	movlt	r2, #1
 800870a:	bfac      	ite	ge
 800870c:	f8c8 3000 	strge.w	r3, [r8]
 8008710:	f8c8 2000 	strlt.w	r2, [r8]
 8008714:	4b9e      	ldr	r3, [pc, #632]	; (8008990 <_dtoa_r+0x2f0>)
 8008716:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800871a:	ea33 0308 	bics.w	r3, r3, r8
 800871e:	d11b      	bne.n	8008758 <_dtoa_r+0xb8>
 8008720:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008722:	f242 730f 	movw	r3, #9999	; 0x270f
 8008726:	6013      	str	r3, [r2, #0]
 8008728:	f3c8 0313 	ubfx	r3, r8, #0, #20
 800872c:	4333      	orrs	r3, r6
 800872e:	f000 8593 	beq.w	8009258 <_dtoa_r+0xbb8>
 8008732:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8008734:	b963      	cbnz	r3, 8008750 <_dtoa_r+0xb0>
 8008736:	4b97      	ldr	r3, [pc, #604]	; (8008994 <_dtoa_r+0x2f4>)
 8008738:	e027      	b.n	800878a <_dtoa_r+0xea>
 800873a:	4b97      	ldr	r3, [pc, #604]	; (8008998 <_dtoa_r+0x2f8>)
 800873c:	9300      	str	r3, [sp, #0]
 800873e:	3308      	adds	r3, #8
 8008740:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8008742:	6013      	str	r3, [r2, #0]
 8008744:	9800      	ldr	r0, [sp, #0]
 8008746:	b013      	add	sp, #76	; 0x4c
 8008748:	ecbd 8b04 	vpop	{d8-d9}
 800874c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008750:	4b90      	ldr	r3, [pc, #576]	; (8008994 <_dtoa_r+0x2f4>)
 8008752:	9300      	str	r3, [sp, #0]
 8008754:	3303      	adds	r3, #3
 8008756:	e7f3      	b.n	8008740 <_dtoa_r+0xa0>
 8008758:	ed9d 7b02 	vldr	d7, [sp, #8]
 800875c:	2200      	movs	r2, #0
 800875e:	ec51 0b17 	vmov	r0, r1, d7
 8008762:	eeb0 8a47 	vmov.f32	s16, s14
 8008766:	eef0 8a67 	vmov.f32	s17, s15
 800876a:	2300      	movs	r3, #0
 800876c:	f7f8 f9b4 	bl	8000ad8 <__aeabi_dcmpeq>
 8008770:	4681      	mov	r9, r0
 8008772:	b160      	cbz	r0, 800878e <_dtoa_r+0xee>
 8008774:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008776:	2301      	movs	r3, #1
 8008778:	6013      	str	r3, [r2, #0]
 800877a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800877c:	2b00      	cmp	r3, #0
 800877e:	f000 8568 	beq.w	8009252 <_dtoa_r+0xbb2>
 8008782:	4b86      	ldr	r3, [pc, #536]	; (800899c <_dtoa_r+0x2fc>)
 8008784:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8008786:	6013      	str	r3, [r2, #0]
 8008788:	3b01      	subs	r3, #1
 800878a:	9300      	str	r3, [sp, #0]
 800878c:	e7da      	b.n	8008744 <_dtoa_r+0xa4>
 800878e:	aa10      	add	r2, sp, #64	; 0x40
 8008790:	a911      	add	r1, sp, #68	; 0x44
 8008792:	4620      	mov	r0, r4
 8008794:	eeb0 0a48 	vmov.f32	s0, s16
 8008798:	eef0 0a68 	vmov.f32	s1, s17
 800879c:	f001 f994 	bl	8009ac8 <__d2b>
 80087a0:	f3c8 550a 	ubfx	r5, r8, #20, #11
 80087a4:	4682      	mov	sl, r0
 80087a6:	2d00      	cmp	r5, #0
 80087a8:	d07f      	beq.n	80088aa <_dtoa_r+0x20a>
 80087aa:	ee18 3a90 	vmov	r3, s17
 80087ae:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80087b2:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 80087b6:	ec51 0b18 	vmov	r0, r1, d8
 80087ba:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80087be:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80087c2:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80087c6:	4619      	mov	r1, r3
 80087c8:	2200      	movs	r2, #0
 80087ca:	4b75      	ldr	r3, [pc, #468]	; (80089a0 <_dtoa_r+0x300>)
 80087cc:	f7f7 fd64 	bl	8000298 <__aeabi_dsub>
 80087d0:	a367      	add	r3, pc, #412	; (adr r3, 8008970 <_dtoa_r+0x2d0>)
 80087d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087d6:	f7f7 ff17 	bl	8000608 <__aeabi_dmul>
 80087da:	a367      	add	r3, pc, #412	; (adr r3, 8008978 <_dtoa_r+0x2d8>)
 80087dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087e0:	f7f7 fd5c 	bl	800029c <__adddf3>
 80087e4:	4606      	mov	r6, r0
 80087e6:	4628      	mov	r0, r5
 80087e8:	460f      	mov	r7, r1
 80087ea:	f7f7 fea3 	bl	8000534 <__aeabi_i2d>
 80087ee:	a364      	add	r3, pc, #400	; (adr r3, 8008980 <_dtoa_r+0x2e0>)
 80087f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087f4:	f7f7 ff08 	bl	8000608 <__aeabi_dmul>
 80087f8:	4602      	mov	r2, r0
 80087fa:	460b      	mov	r3, r1
 80087fc:	4630      	mov	r0, r6
 80087fe:	4639      	mov	r1, r7
 8008800:	f7f7 fd4c 	bl	800029c <__adddf3>
 8008804:	4606      	mov	r6, r0
 8008806:	460f      	mov	r7, r1
 8008808:	f7f8 f9ae 	bl	8000b68 <__aeabi_d2iz>
 800880c:	2200      	movs	r2, #0
 800880e:	4683      	mov	fp, r0
 8008810:	2300      	movs	r3, #0
 8008812:	4630      	mov	r0, r6
 8008814:	4639      	mov	r1, r7
 8008816:	f7f8 f969 	bl	8000aec <__aeabi_dcmplt>
 800881a:	b148      	cbz	r0, 8008830 <_dtoa_r+0x190>
 800881c:	4658      	mov	r0, fp
 800881e:	f7f7 fe89 	bl	8000534 <__aeabi_i2d>
 8008822:	4632      	mov	r2, r6
 8008824:	463b      	mov	r3, r7
 8008826:	f7f8 f957 	bl	8000ad8 <__aeabi_dcmpeq>
 800882a:	b908      	cbnz	r0, 8008830 <_dtoa_r+0x190>
 800882c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8008830:	f1bb 0f16 	cmp.w	fp, #22
 8008834:	d857      	bhi.n	80088e6 <_dtoa_r+0x246>
 8008836:	4b5b      	ldr	r3, [pc, #364]	; (80089a4 <_dtoa_r+0x304>)
 8008838:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800883c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008840:	ec51 0b18 	vmov	r0, r1, d8
 8008844:	f7f8 f952 	bl	8000aec <__aeabi_dcmplt>
 8008848:	2800      	cmp	r0, #0
 800884a:	d04e      	beq.n	80088ea <_dtoa_r+0x24a>
 800884c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8008850:	2300      	movs	r3, #0
 8008852:	930c      	str	r3, [sp, #48]	; 0x30
 8008854:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008856:	1b5b      	subs	r3, r3, r5
 8008858:	1e5a      	subs	r2, r3, #1
 800885a:	bf45      	ittet	mi
 800885c:	f1c3 0301 	rsbmi	r3, r3, #1
 8008860:	9305      	strmi	r3, [sp, #20]
 8008862:	2300      	movpl	r3, #0
 8008864:	2300      	movmi	r3, #0
 8008866:	9206      	str	r2, [sp, #24]
 8008868:	bf54      	ite	pl
 800886a:	9305      	strpl	r3, [sp, #20]
 800886c:	9306      	strmi	r3, [sp, #24]
 800886e:	f1bb 0f00 	cmp.w	fp, #0
 8008872:	db3c      	blt.n	80088ee <_dtoa_r+0x24e>
 8008874:	9b06      	ldr	r3, [sp, #24]
 8008876:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 800887a:	445b      	add	r3, fp
 800887c:	9306      	str	r3, [sp, #24]
 800887e:	2300      	movs	r3, #0
 8008880:	9308      	str	r3, [sp, #32]
 8008882:	9b07      	ldr	r3, [sp, #28]
 8008884:	2b09      	cmp	r3, #9
 8008886:	d868      	bhi.n	800895a <_dtoa_r+0x2ba>
 8008888:	2b05      	cmp	r3, #5
 800888a:	bfc4      	itt	gt
 800888c:	3b04      	subgt	r3, #4
 800888e:	9307      	strgt	r3, [sp, #28]
 8008890:	9b07      	ldr	r3, [sp, #28]
 8008892:	f1a3 0302 	sub.w	r3, r3, #2
 8008896:	bfcc      	ite	gt
 8008898:	2500      	movgt	r5, #0
 800889a:	2501      	movle	r5, #1
 800889c:	2b03      	cmp	r3, #3
 800889e:	f200 8085 	bhi.w	80089ac <_dtoa_r+0x30c>
 80088a2:	e8df f003 	tbb	[pc, r3]
 80088a6:	3b2e      	.short	0x3b2e
 80088a8:	5839      	.short	0x5839
 80088aa:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 80088ae:	441d      	add	r5, r3
 80088b0:	f205 4332 	addw	r3, r5, #1074	; 0x432
 80088b4:	2b20      	cmp	r3, #32
 80088b6:	bfc1      	itttt	gt
 80088b8:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80088bc:	fa08 f803 	lslgt.w	r8, r8, r3
 80088c0:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 80088c4:	fa26 f303 	lsrgt.w	r3, r6, r3
 80088c8:	bfd6      	itet	le
 80088ca:	f1c3 0320 	rsble	r3, r3, #32
 80088ce:	ea48 0003 	orrgt.w	r0, r8, r3
 80088d2:	fa06 f003 	lslle.w	r0, r6, r3
 80088d6:	f7f7 fe1d 	bl	8000514 <__aeabi_ui2d>
 80088da:	2201      	movs	r2, #1
 80088dc:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 80088e0:	3d01      	subs	r5, #1
 80088e2:	920e      	str	r2, [sp, #56]	; 0x38
 80088e4:	e76f      	b.n	80087c6 <_dtoa_r+0x126>
 80088e6:	2301      	movs	r3, #1
 80088e8:	e7b3      	b.n	8008852 <_dtoa_r+0x1b2>
 80088ea:	900c      	str	r0, [sp, #48]	; 0x30
 80088ec:	e7b2      	b.n	8008854 <_dtoa_r+0x1b4>
 80088ee:	9b05      	ldr	r3, [sp, #20]
 80088f0:	eba3 030b 	sub.w	r3, r3, fp
 80088f4:	9305      	str	r3, [sp, #20]
 80088f6:	f1cb 0300 	rsb	r3, fp, #0
 80088fa:	9308      	str	r3, [sp, #32]
 80088fc:	2300      	movs	r3, #0
 80088fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8008900:	e7bf      	b.n	8008882 <_dtoa_r+0x1e2>
 8008902:	2300      	movs	r3, #0
 8008904:	9309      	str	r3, [sp, #36]	; 0x24
 8008906:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008908:	2b00      	cmp	r3, #0
 800890a:	dc52      	bgt.n	80089b2 <_dtoa_r+0x312>
 800890c:	2301      	movs	r3, #1
 800890e:	9301      	str	r3, [sp, #4]
 8008910:	9304      	str	r3, [sp, #16]
 8008912:	461a      	mov	r2, r3
 8008914:	920a      	str	r2, [sp, #40]	; 0x28
 8008916:	e00b      	b.n	8008930 <_dtoa_r+0x290>
 8008918:	2301      	movs	r3, #1
 800891a:	e7f3      	b.n	8008904 <_dtoa_r+0x264>
 800891c:	2300      	movs	r3, #0
 800891e:	9309      	str	r3, [sp, #36]	; 0x24
 8008920:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008922:	445b      	add	r3, fp
 8008924:	9301      	str	r3, [sp, #4]
 8008926:	3301      	adds	r3, #1
 8008928:	2b01      	cmp	r3, #1
 800892a:	9304      	str	r3, [sp, #16]
 800892c:	bfb8      	it	lt
 800892e:	2301      	movlt	r3, #1
 8008930:	69e0      	ldr	r0, [r4, #28]
 8008932:	2100      	movs	r1, #0
 8008934:	2204      	movs	r2, #4
 8008936:	f102 0614 	add.w	r6, r2, #20
 800893a:	429e      	cmp	r6, r3
 800893c:	d93d      	bls.n	80089ba <_dtoa_r+0x31a>
 800893e:	6041      	str	r1, [r0, #4]
 8008940:	4620      	mov	r0, r4
 8008942:	f000 fd9f 	bl	8009484 <_Balloc>
 8008946:	9000      	str	r0, [sp, #0]
 8008948:	2800      	cmp	r0, #0
 800894a:	d139      	bne.n	80089c0 <_dtoa_r+0x320>
 800894c:	4b16      	ldr	r3, [pc, #88]	; (80089a8 <_dtoa_r+0x308>)
 800894e:	4602      	mov	r2, r0
 8008950:	f240 11af 	movw	r1, #431	; 0x1af
 8008954:	e6bd      	b.n	80086d2 <_dtoa_r+0x32>
 8008956:	2301      	movs	r3, #1
 8008958:	e7e1      	b.n	800891e <_dtoa_r+0x27e>
 800895a:	2501      	movs	r5, #1
 800895c:	2300      	movs	r3, #0
 800895e:	9307      	str	r3, [sp, #28]
 8008960:	9509      	str	r5, [sp, #36]	; 0x24
 8008962:	f04f 33ff 	mov.w	r3, #4294967295
 8008966:	9301      	str	r3, [sp, #4]
 8008968:	9304      	str	r3, [sp, #16]
 800896a:	2200      	movs	r2, #0
 800896c:	2312      	movs	r3, #18
 800896e:	e7d1      	b.n	8008914 <_dtoa_r+0x274>
 8008970:	636f4361 	.word	0x636f4361
 8008974:	3fd287a7 	.word	0x3fd287a7
 8008978:	8b60c8b3 	.word	0x8b60c8b3
 800897c:	3fc68a28 	.word	0x3fc68a28
 8008980:	509f79fb 	.word	0x509f79fb
 8008984:	3fd34413 	.word	0x3fd34413
 8008988:	0800a4c9 	.word	0x0800a4c9
 800898c:	0800a4e0 	.word	0x0800a4e0
 8008990:	7ff00000 	.word	0x7ff00000
 8008994:	0800a4c5 	.word	0x0800a4c5
 8008998:	0800a4bc 	.word	0x0800a4bc
 800899c:	0800a499 	.word	0x0800a499
 80089a0:	3ff80000 	.word	0x3ff80000
 80089a4:	0800a5d0 	.word	0x0800a5d0
 80089a8:	0800a538 	.word	0x0800a538
 80089ac:	2301      	movs	r3, #1
 80089ae:	9309      	str	r3, [sp, #36]	; 0x24
 80089b0:	e7d7      	b.n	8008962 <_dtoa_r+0x2c2>
 80089b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80089b4:	9301      	str	r3, [sp, #4]
 80089b6:	9304      	str	r3, [sp, #16]
 80089b8:	e7ba      	b.n	8008930 <_dtoa_r+0x290>
 80089ba:	3101      	adds	r1, #1
 80089bc:	0052      	lsls	r2, r2, #1
 80089be:	e7ba      	b.n	8008936 <_dtoa_r+0x296>
 80089c0:	69e3      	ldr	r3, [r4, #28]
 80089c2:	9a00      	ldr	r2, [sp, #0]
 80089c4:	601a      	str	r2, [r3, #0]
 80089c6:	9b04      	ldr	r3, [sp, #16]
 80089c8:	2b0e      	cmp	r3, #14
 80089ca:	f200 80a8 	bhi.w	8008b1e <_dtoa_r+0x47e>
 80089ce:	2d00      	cmp	r5, #0
 80089d0:	f000 80a5 	beq.w	8008b1e <_dtoa_r+0x47e>
 80089d4:	f1bb 0f00 	cmp.w	fp, #0
 80089d8:	dd38      	ble.n	8008a4c <_dtoa_r+0x3ac>
 80089da:	4bc0      	ldr	r3, [pc, #768]	; (8008cdc <_dtoa_r+0x63c>)
 80089dc:	f00b 020f 	and.w	r2, fp, #15
 80089e0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80089e4:	f41b 7f80 	tst.w	fp, #256	; 0x100
 80089e8:	e9d3 6700 	ldrd	r6, r7, [r3]
 80089ec:	ea4f 182b 	mov.w	r8, fp, asr #4
 80089f0:	d019      	beq.n	8008a26 <_dtoa_r+0x386>
 80089f2:	4bbb      	ldr	r3, [pc, #748]	; (8008ce0 <_dtoa_r+0x640>)
 80089f4:	ec51 0b18 	vmov	r0, r1, d8
 80089f8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80089fc:	f7f7 ff2e 	bl	800085c <__aeabi_ddiv>
 8008a00:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008a04:	f008 080f 	and.w	r8, r8, #15
 8008a08:	2503      	movs	r5, #3
 8008a0a:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8008ce0 <_dtoa_r+0x640>
 8008a0e:	f1b8 0f00 	cmp.w	r8, #0
 8008a12:	d10a      	bne.n	8008a2a <_dtoa_r+0x38a>
 8008a14:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8008a18:	4632      	mov	r2, r6
 8008a1a:	463b      	mov	r3, r7
 8008a1c:	f7f7 ff1e 	bl	800085c <__aeabi_ddiv>
 8008a20:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008a24:	e02b      	b.n	8008a7e <_dtoa_r+0x3de>
 8008a26:	2502      	movs	r5, #2
 8008a28:	e7ef      	b.n	8008a0a <_dtoa_r+0x36a>
 8008a2a:	f018 0f01 	tst.w	r8, #1
 8008a2e:	d008      	beq.n	8008a42 <_dtoa_r+0x3a2>
 8008a30:	4630      	mov	r0, r6
 8008a32:	4639      	mov	r1, r7
 8008a34:	e9d9 2300 	ldrd	r2, r3, [r9]
 8008a38:	f7f7 fde6 	bl	8000608 <__aeabi_dmul>
 8008a3c:	3501      	adds	r5, #1
 8008a3e:	4606      	mov	r6, r0
 8008a40:	460f      	mov	r7, r1
 8008a42:	ea4f 0868 	mov.w	r8, r8, asr #1
 8008a46:	f109 0908 	add.w	r9, r9, #8
 8008a4a:	e7e0      	b.n	8008a0e <_dtoa_r+0x36e>
 8008a4c:	f000 809f 	beq.w	8008b8e <_dtoa_r+0x4ee>
 8008a50:	f1cb 0600 	rsb	r6, fp, #0
 8008a54:	4ba1      	ldr	r3, [pc, #644]	; (8008cdc <_dtoa_r+0x63c>)
 8008a56:	4fa2      	ldr	r7, [pc, #648]	; (8008ce0 <_dtoa_r+0x640>)
 8008a58:	f006 020f 	and.w	r2, r6, #15
 8008a5c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8008a60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a64:	ec51 0b18 	vmov	r0, r1, d8
 8008a68:	f7f7 fdce 	bl	8000608 <__aeabi_dmul>
 8008a6c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008a70:	1136      	asrs	r6, r6, #4
 8008a72:	2300      	movs	r3, #0
 8008a74:	2502      	movs	r5, #2
 8008a76:	2e00      	cmp	r6, #0
 8008a78:	d17e      	bne.n	8008b78 <_dtoa_r+0x4d8>
 8008a7a:	2b00      	cmp	r3, #0
 8008a7c:	d1d0      	bne.n	8008a20 <_dtoa_r+0x380>
 8008a7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008a80:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8008a84:	2b00      	cmp	r3, #0
 8008a86:	f000 8084 	beq.w	8008b92 <_dtoa_r+0x4f2>
 8008a8a:	4b96      	ldr	r3, [pc, #600]	; (8008ce4 <_dtoa_r+0x644>)
 8008a8c:	2200      	movs	r2, #0
 8008a8e:	4640      	mov	r0, r8
 8008a90:	4649      	mov	r1, r9
 8008a92:	f7f8 f82b 	bl	8000aec <__aeabi_dcmplt>
 8008a96:	2800      	cmp	r0, #0
 8008a98:	d07b      	beq.n	8008b92 <_dtoa_r+0x4f2>
 8008a9a:	9b04      	ldr	r3, [sp, #16]
 8008a9c:	2b00      	cmp	r3, #0
 8008a9e:	d078      	beq.n	8008b92 <_dtoa_r+0x4f2>
 8008aa0:	9b01      	ldr	r3, [sp, #4]
 8008aa2:	2b00      	cmp	r3, #0
 8008aa4:	dd39      	ble.n	8008b1a <_dtoa_r+0x47a>
 8008aa6:	4b90      	ldr	r3, [pc, #576]	; (8008ce8 <_dtoa_r+0x648>)
 8008aa8:	2200      	movs	r2, #0
 8008aaa:	4640      	mov	r0, r8
 8008aac:	4649      	mov	r1, r9
 8008aae:	f7f7 fdab 	bl	8000608 <__aeabi_dmul>
 8008ab2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008ab6:	9e01      	ldr	r6, [sp, #4]
 8008ab8:	f10b 37ff 	add.w	r7, fp, #4294967295
 8008abc:	3501      	adds	r5, #1
 8008abe:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8008ac2:	4628      	mov	r0, r5
 8008ac4:	f7f7 fd36 	bl	8000534 <__aeabi_i2d>
 8008ac8:	4642      	mov	r2, r8
 8008aca:	464b      	mov	r3, r9
 8008acc:	f7f7 fd9c 	bl	8000608 <__aeabi_dmul>
 8008ad0:	4b86      	ldr	r3, [pc, #536]	; (8008cec <_dtoa_r+0x64c>)
 8008ad2:	2200      	movs	r2, #0
 8008ad4:	f7f7 fbe2 	bl	800029c <__adddf3>
 8008ad8:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8008adc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008ae0:	9303      	str	r3, [sp, #12]
 8008ae2:	2e00      	cmp	r6, #0
 8008ae4:	d158      	bne.n	8008b98 <_dtoa_r+0x4f8>
 8008ae6:	4b82      	ldr	r3, [pc, #520]	; (8008cf0 <_dtoa_r+0x650>)
 8008ae8:	2200      	movs	r2, #0
 8008aea:	4640      	mov	r0, r8
 8008aec:	4649      	mov	r1, r9
 8008aee:	f7f7 fbd3 	bl	8000298 <__aeabi_dsub>
 8008af2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008af6:	4680      	mov	r8, r0
 8008af8:	4689      	mov	r9, r1
 8008afa:	f7f8 f815 	bl	8000b28 <__aeabi_dcmpgt>
 8008afe:	2800      	cmp	r0, #0
 8008b00:	f040 8296 	bne.w	8009030 <_dtoa_r+0x990>
 8008b04:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8008b08:	4640      	mov	r0, r8
 8008b0a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8008b0e:	4649      	mov	r1, r9
 8008b10:	f7f7 ffec 	bl	8000aec <__aeabi_dcmplt>
 8008b14:	2800      	cmp	r0, #0
 8008b16:	f040 8289 	bne.w	800902c <_dtoa_r+0x98c>
 8008b1a:	ed8d 8b02 	vstr	d8, [sp, #8]
 8008b1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8008b20:	2b00      	cmp	r3, #0
 8008b22:	f2c0 814e 	blt.w	8008dc2 <_dtoa_r+0x722>
 8008b26:	f1bb 0f0e 	cmp.w	fp, #14
 8008b2a:	f300 814a 	bgt.w	8008dc2 <_dtoa_r+0x722>
 8008b2e:	4b6b      	ldr	r3, [pc, #428]	; (8008cdc <_dtoa_r+0x63c>)
 8008b30:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8008b34:	e9d3 8900 	ldrd	r8, r9, [r3]
 8008b38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008b3a:	2b00      	cmp	r3, #0
 8008b3c:	f280 80dc 	bge.w	8008cf8 <_dtoa_r+0x658>
 8008b40:	9b04      	ldr	r3, [sp, #16]
 8008b42:	2b00      	cmp	r3, #0
 8008b44:	f300 80d8 	bgt.w	8008cf8 <_dtoa_r+0x658>
 8008b48:	f040 826f 	bne.w	800902a <_dtoa_r+0x98a>
 8008b4c:	4b68      	ldr	r3, [pc, #416]	; (8008cf0 <_dtoa_r+0x650>)
 8008b4e:	2200      	movs	r2, #0
 8008b50:	4640      	mov	r0, r8
 8008b52:	4649      	mov	r1, r9
 8008b54:	f7f7 fd58 	bl	8000608 <__aeabi_dmul>
 8008b58:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008b5c:	f7f7 ffda 	bl	8000b14 <__aeabi_dcmpge>
 8008b60:	9e04      	ldr	r6, [sp, #16]
 8008b62:	4637      	mov	r7, r6
 8008b64:	2800      	cmp	r0, #0
 8008b66:	f040 8245 	bne.w	8008ff4 <_dtoa_r+0x954>
 8008b6a:	9d00      	ldr	r5, [sp, #0]
 8008b6c:	2331      	movs	r3, #49	; 0x31
 8008b6e:	f805 3b01 	strb.w	r3, [r5], #1
 8008b72:	f10b 0b01 	add.w	fp, fp, #1
 8008b76:	e241      	b.n	8008ffc <_dtoa_r+0x95c>
 8008b78:	07f2      	lsls	r2, r6, #31
 8008b7a:	d505      	bpl.n	8008b88 <_dtoa_r+0x4e8>
 8008b7c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008b80:	f7f7 fd42 	bl	8000608 <__aeabi_dmul>
 8008b84:	3501      	adds	r5, #1
 8008b86:	2301      	movs	r3, #1
 8008b88:	1076      	asrs	r6, r6, #1
 8008b8a:	3708      	adds	r7, #8
 8008b8c:	e773      	b.n	8008a76 <_dtoa_r+0x3d6>
 8008b8e:	2502      	movs	r5, #2
 8008b90:	e775      	b.n	8008a7e <_dtoa_r+0x3de>
 8008b92:	9e04      	ldr	r6, [sp, #16]
 8008b94:	465f      	mov	r7, fp
 8008b96:	e792      	b.n	8008abe <_dtoa_r+0x41e>
 8008b98:	9900      	ldr	r1, [sp, #0]
 8008b9a:	4b50      	ldr	r3, [pc, #320]	; (8008cdc <_dtoa_r+0x63c>)
 8008b9c:	ed9d 7b02 	vldr	d7, [sp, #8]
 8008ba0:	4431      	add	r1, r6
 8008ba2:	9102      	str	r1, [sp, #8]
 8008ba4:	9909      	ldr	r1, [sp, #36]	; 0x24
 8008ba6:	eeb0 9a47 	vmov.f32	s18, s14
 8008baa:	eef0 9a67 	vmov.f32	s19, s15
 8008bae:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8008bb2:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8008bb6:	2900      	cmp	r1, #0
 8008bb8:	d044      	beq.n	8008c44 <_dtoa_r+0x5a4>
 8008bba:	494e      	ldr	r1, [pc, #312]	; (8008cf4 <_dtoa_r+0x654>)
 8008bbc:	2000      	movs	r0, #0
 8008bbe:	f7f7 fe4d 	bl	800085c <__aeabi_ddiv>
 8008bc2:	ec53 2b19 	vmov	r2, r3, d9
 8008bc6:	f7f7 fb67 	bl	8000298 <__aeabi_dsub>
 8008bca:	9d00      	ldr	r5, [sp, #0]
 8008bcc:	ec41 0b19 	vmov	d9, r0, r1
 8008bd0:	4649      	mov	r1, r9
 8008bd2:	4640      	mov	r0, r8
 8008bd4:	f7f7 ffc8 	bl	8000b68 <__aeabi_d2iz>
 8008bd8:	4606      	mov	r6, r0
 8008bda:	f7f7 fcab 	bl	8000534 <__aeabi_i2d>
 8008bde:	4602      	mov	r2, r0
 8008be0:	460b      	mov	r3, r1
 8008be2:	4640      	mov	r0, r8
 8008be4:	4649      	mov	r1, r9
 8008be6:	f7f7 fb57 	bl	8000298 <__aeabi_dsub>
 8008bea:	3630      	adds	r6, #48	; 0x30
 8008bec:	f805 6b01 	strb.w	r6, [r5], #1
 8008bf0:	ec53 2b19 	vmov	r2, r3, d9
 8008bf4:	4680      	mov	r8, r0
 8008bf6:	4689      	mov	r9, r1
 8008bf8:	f7f7 ff78 	bl	8000aec <__aeabi_dcmplt>
 8008bfc:	2800      	cmp	r0, #0
 8008bfe:	d164      	bne.n	8008cca <_dtoa_r+0x62a>
 8008c00:	4642      	mov	r2, r8
 8008c02:	464b      	mov	r3, r9
 8008c04:	4937      	ldr	r1, [pc, #220]	; (8008ce4 <_dtoa_r+0x644>)
 8008c06:	2000      	movs	r0, #0
 8008c08:	f7f7 fb46 	bl	8000298 <__aeabi_dsub>
 8008c0c:	ec53 2b19 	vmov	r2, r3, d9
 8008c10:	f7f7 ff6c 	bl	8000aec <__aeabi_dcmplt>
 8008c14:	2800      	cmp	r0, #0
 8008c16:	f040 80b6 	bne.w	8008d86 <_dtoa_r+0x6e6>
 8008c1a:	9b02      	ldr	r3, [sp, #8]
 8008c1c:	429d      	cmp	r5, r3
 8008c1e:	f43f af7c 	beq.w	8008b1a <_dtoa_r+0x47a>
 8008c22:	4b31      	ldr	r3, [pc, #196]	; (8008ce8 <_dtoa_r+0x648>)
 8008c24:	ec51 0b19 	vmov	r0, r1, d9
 8008c28:	2200      	movs	r2, #0
 8008c2a:	f7f7 fced 	bl	8000608 <__aeabi_dmul>
 8008c2e:	4b2e      	ldr	r3, [pc, #184]	; (8008ce8 <_dtoa_r+0x648>)
 8008c30:	ec41 0b19 	vmov	d9, r0, r1
 8008c34:	2200      	movs	r2, #0
 8008c36:	4640      	mov	r0, r8
 8008c38:	4649      	mov	r1, r9
 8008c3a:	f7f7 fce5 	bl	8000608 <__aeabi_dmul>
 8008c3e:	4680      	mov	r8, r0
 8008c40:	4689      	mov	r9, r1
 8008c42:	e7c5      	b.n	8008bd0 <_dtoa_r+0x530>
 8008c44:	ec51 0b17 	vmov	r0, r1, d7
 8008c48:	f7f7 fcde 	bl	8000608 <__aeabi_dmul>
 8008c4c:	9b02      	ldr	r3, [sp, #8]
 8008c4e:	9d00      	ldr	r5, [sp, #0]
 8008c50:	930f      	str	r3, [sp, #60]	; 0x3c
 8008c52:	ec41 0b19 	vmov	d9, r0, r1
 8008c56:	4649      	mov	r1, r9
 8008c58:	4640      	mov	r0, r8
 8008c5a:	f7f7 ff85 	bl	8000b68 <__aeabi_d2iz>
 8008c5e:	4606      	mov	r6, r0
 8008c60:	f7f7 fc68 	bl	8000534 <__aeabi_i2d>
 8008c64:	3630      	adds	r6, #48	; 0x30
 8008c66:	4602      	mov	r2, r0
 8008c68:	460b      	mov	r3, r1
 8008c6a:	4640      	mov	r0, r8
 8008c6c:	4649      	mov	r1, r9
 8008c6e:	f7f7 fb13 	bl	8000298 <__aeabi_dsub>
 8008c72:	f805 6b01 	strb.w	r6, [r5], #1
 8008c76:	9b02      	ldr	r3, [sp, #8]
 8008c78:	429d      	cmp	r5, r3
 8008c7a:	4680      	mov	r8, r0
 8008c7c:	4689      	mov	r9, r1
 8008c7e:	f04f 0200 	mov.w	r2, #0
 8008c82:	d124      	bne.n	8008cce <_dtoa_r+0x62e>
 8008c84:	4b1b      	ldr	r3, [pc, #108]	; (8008cf4 <_dtoa_r+0x654>)
 8008c86:	ec51 0b19 	vmov	r0, r1, d9
 8008c8a:	f7f7 fb07 	bl	800029c <__adddf3>
 8008c8e:	4602      	mov	r2, r0
 8008c90:	460b      	mov	r3, r1
 8008c92:	4640      	mov	r0, r8
 8008c94:	4649      	mov	r1, r9
 8008c96:	f7f7 ff47 	bl	8000b28 <__aeabi_dcmpgt>
 8008c9a:	2800      	cmp	r0, #0
 8008c9c:	d173      	bne.n	8008d86 <_dtoa_r+0x6e6>
 8008c9e:	ec53 2b19 	vmov	r2, r3, d9
 8008ca2:	4914      	ldr	r1, [pc, #80]	; (8008cf4 <_dtoa_r+0x654>)
 8008ca4:	2000      	movs	r0, #0
 8008ca6:	f7f7 faf7 	bl	8000298 <__aeabi_dsub>
 8008caa:	4602      	mov	r2, r0
 8008cac:	460b      	mov	r3, r1
 8008cae:	4640      	mov	r0, r8
 8008cb0:	4649      	mov	r1, r9
 8008cb2:	f7f7 ff1b 	bl	8000aec <__aeabi_dcmplt>
 8008cb6:	2800      	cmp	r0, #0
 8008cb8:	f43f af2f 	beq.w	8008b1a <_dtoa_r+0x47a>
 8008cbc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8008cbe:	1e6b      	subs	r3, r5, #1
 8008cc0:	930f      	str	r3, [sp, #60]	; 0x3c
 8008cc2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8008cc6:	2b30      	cmp	r3, #48	; 0x30
 8008cc8:	d0f8      	beq.n	8008cbc <_dtoa_r+0x61c>
 8008cca:	46bb      	mov	fp, r7
 8008ccc:	e04a      	b.n	8008d64 <_dtoa_r+0x6c4>
 8008cce:	4b06      	ldr	r3, [pc, #24]	; (8008ce8 <_dtoa_r+0x648>)
 8008cd0:	f7f7 fc9a 	bl	8000608 <__aeabi_dmul>
 8008cd4:	4680      	mov	r8, r0
 8008cd6:	4689      	mov	r9, r1
 8008cd8:	e7bd      	b.n	8008c56 <_dtoa_r+0x5b6>
 8008cda:	bf00      	nop
 8008cdc:	0800a5d0 	.word	0x0800a5d0
 8008ce0:	0800a5a8 	.word	0x0800a5a8
 8008ce4:	3ff00000 	.word	0x3ff00000
 8008ce8:	40240000 	.word	0x40240000
 8008cec:	401c0000 	.word	0x401c0000
 8008cf0:	40140000 	.word	0x40140000
 8008cf4:	3fe00000 	.word	0x3fe00000
 8008cf8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8008cfc:	9d00      	ldr	r5, [sp, #0]
 8008cfe:	4642      	mov	r2, r8
 8008d00:	464b      	mov	r3, r9
 8008d02:	4630      	mov	r0, r6
 8008d04:	4639      	mov	r1, r7
 8008d06:	f7f7 fda9 	bl	800085c <__aeabi_ddiv>
 8008d0a:	f7f7 ff2d 	bl	8000b68 <__aeabi_d2iz>
 8008d0e:	9001      	str	r0, [sp, #4]
 8008d10:	f7f7 fc10 	bl	8000534 <__aeabi_i2d>
 8008d14:	4642      	mov	r2, r8
 8008d16:	464b      	mov	r3, r9
 8008d18:	f7f7 fc76 	bl	8000608 <__aeabi_dmul>
 8008d1c:	4602      	mov	r2, r0
 8008d1e:	460b      	mov	r3, r1
 8008d20:	4630      	mov	r0, r6
 8008d22:	4639      	mov	r1, r7
 8008d24:	f7f7 fab8 	bl	8000298 <__aeabi_dsub>
 8008d28:	9e01      	ldr	r6, [sp, #4]
 8008d2a:	9f04      	ldr	r7, [sp, #16]
 8008d2c:	3630      	adds	r6, #48	; 0x30
 8008d2e:	f805 6b01 	strb.w	r6, [r5], #1
 8008d32:	9e00      	ldr	r6, [sp, #0]
 8008d34:	1bae      	subs	r6, r5, r6
 8008d36:	42b7      	cmp	r7, r6
 8008d38:	4602      	mov	r2, r0
 8008d3a:	460b      	mov	r3, r1
 8008d3c:	d134      	bne.n	8008da8 <_dtoa_r+0x708>
 8008d3e:	f7f7 faad 	bl	800029c <__adddf3>
 8008d42:	4642      	mov	r2, r8
 8008d44:	464b      	mov	r3, r9
 8008d46:	4606      	mov	r6, r0
 8008d48:	460f      	mov	r7, r1
 8008d4a:	f7f7 feed 	bl	8000b28 <__aeabi_dcmpgt>
 8008d4e:	b9c8      	cbnz	r0, 8008d84 <_dtoa_r+0x6e4>
 8008d50:	4642      	mov	r2, r8
 8008d52:	464b      	mov	r3, r9
 8008d54:	4630      	mov	r0, r6
 8008d56:	4639      	mov	r1, r7
 8008d58:	f7f7 febe 	bl	8000ad8 <__aeabi_dcmpeq>
 8008d5c:	b110      	cbz	r0, 8008d64 <_dtoa_r+0x6c4>
 8008d5e:	9b01      	ldr	r3, [sp, #4]
 8008d60:	07db      	lsls	r3, r3, #31
 8008d62:	d40f      	bmi.n	8008d84 <_dtoa_r+0x6e4>
 8008d64:	4651      	mov	r1, sl
 8008d66:	4620      	mov	r0, r4
 8008d68:	f000 fbcc 	bl	8009504 <_Bfree>
 8008d6c:	2300      	movs	r3, #0
 8008d6e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008d70:	702b      	strb	r3, [r5, #0]
 8008d72:	f10b 0301 	add.w	r3, fp, #1
 8008d76:	6013      	str	r3, [r2, #0]
 8008d78:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8008d7a:	2b00      	cmp	r3, #0
 8008d7c:	f43f ace2 	beq.w	8008744 <_dtoa_r+0xa4>
 8008d80:	601d      	str	r5, [r3, #0]
 8008d82:	e4df      	b.n	8008744 <_dtoa_r+0xa4>
 8008d84:	465f      	mov	r7, fp
 8008d86:	462b      	mov	r3, r5
 8008d88:	461d      	mov	r5, r3
 8008d8a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8008d8e:	2a39      	cmp	r2, #57	; 0x39
 8008d90:	d106      	bne.n	8008da0 <_dtoa_r+0x700>
 8008d92:	9a00      	ldr	r2, [sp, #0]
 8008d94:	429a      	cmp	r2, r3
 8008d96:	d1f7      	bne.n	8008d88 <_dtoa_r+0x6e8>
 8008d98:	9900      	ldr	r1, [sp, #0]
 8008d9a:	2230      	movs	r2, #48	; 0x30
 8008d9c:	3701      	adds	r7, #1
 8008d9e:	700a      	strb	r2, [r1, #0]
 8008da0:	781a      	ldrb	r2, [r3, #0]
 8008da2:	3201      	adds	r2, #1
 8008da4:	701a      	strb	r2, [r3, #0]
 8008da6:	e790      	b.n	8008cca <_dtoa_r+0x62a>
 8008da8:	4ba3      	ldr	r3, [pc, #652]	; (8009038 <_dtoa_r+0x998>)
 8008daa:	2200      	movs	r2, #0
 8008dac:	f7f7 fc2c 	bl	8000608 <__aeabi_dmul>
 8008db0:	2200      	movs	r2, #0
 8008db2:	2300      	movs	r3, #0
 8008db4:	4606      	mov	r6, r0
 8008db6:	460f      	mov	r7, r1
 8008db8:	f7f7 fe8e 	bl	8000ad8 <__aeabi_dcmpeq>
 8008dbc:	2800      	cmp	r0, #0
 8008dbe:	d09e      	beq.n	8008cfe <_dtoa_r+0x65e>
 8008dc0:	e7d0      	b.n	8008d64 <_dtoa_r+0x6c4>
 8008dc2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008dc4:	2a00      	cmp	r2, #0
 8008dc6:	f000 80ca 	beq.w	8008f5e <_dtoa_r+0x8be>
 8008dca:	9a07      	ldr	r2, [sp, #28]
 8008dcc:	2a01      	cmp	r2, #1
 8008dce:	f300 80ad 	bgt.w	8008f2c <_dtoa_r+0x88c>
 8008dd2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008dd4:	2a00      	cmp	r2, #0
 8008dd6:	f000 80a5 	beq.w	8008f24 <_dtoa_r+0x884>
 8008dda:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8008dde:	9e08      	ldr	r6, [sp, #32]
 8008de0:	9d05      	ldr	r5, [sp, #20]
 8008de2:	9a05      	ldr	r2, [sp, #20]
 8008de4:	441a      	add	r2, r3
 8008de6:	9205      	str	r2, [sp, #20]
 8008de8:	9a06      	ldr	r2, [sp, #24]
 8008dea:	2101      	movs	r1, #1
 8008dec:	441a      	add	r2, r3
 8008dee:	4620      	mov	r0, r4
 8008df0:	9206      	str	r2, [sp, #24]
 8008df2:	f000 fc3d 	bl	8009670 <__i2b>
 8008df6:	4607      	mov	r7, r0
 8008df8:	b165      	cbz	r5, 8008e14 <_dtoa_r+0x774>
 8008dfa:	9b06      	ldr	r3, [sp, #24]
 8008dfc:	2b00      	cmp	r3, #0
 8008dfe:	dd09      	ble.n	8008e14 <_dtoa_r+0x774>
 8008e00:	42ab      	cmp	r3, r5
 8008e02:	9a05      	ldr	r2, [sp, #20]
 8008e04:	bfa8      	it	ge
 8008e06:	462b      	movge	r3, r5
 8008e08:	1ad2      	subs	r2, r2, r3
 8008e0a:	9205      	str	r2, [sp, #20]
 8008e0c:	9a06      	ldr	r2, [sp, #24]
 8008e0e:	1aed      	subs	r5, r5, r3
 8008e10:	1ad3      	subs	r3, r2, r3
 8008e12:	9306      	str	r3, [sp, #24]
 8008e14:	9b08      	ldr	r3, [sp, #32]
 8008e16:	b1f3      	cbz	r3, 8008e56 <_dtoa_r+0x7b6>
 8008e18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008e1a:	2b00      	cmp	r3, #0
 8008e1c:	f000 80a3 	beq.w	8008f66 <_dtoa_r+0x8c6>
 8008e20:	2e00      	cmp	r6, #0
 8008e22:	dd10      	ble.n	8008e46 <_dtoa_r+0x7a6>
 8008e24:	4639      	mov	r1, r7
 8008e26:	4632      	mov	r2, r6
 8008e28:	4620      	mov	r0, r4
 8008e2a:	f000 fce1 	bl	80097f0 <__pow5mult>
 8008e2e:	4652      	mov	r2, sl
 8008e30:	4601      	mov	r1, r0
 8008e32:	4607      	mov	r7, r0
 8008e34:	4620      	mov	r0, r4
 8008e36:	f000 fc31 	bl	800969c <__multiply>
 8008e3a:	4651      	mov	r1, sl
 8008e3c:	4680      	mov	r8, r0
 8008e3e:	4620      	mov	r0, r4
 8008e40:	f000 fb60 	bl	8009504 <_Bfree>
 8008e44:	46c2      	mov	sl, r8
 8008e46:	9b08      	ldr	r3, [sp, #32]
 8008e48:	1b9a      	subs	r2, r3, r6
 8008e4a:	d004      	beq.n	8008e56 <_dtoa_r+0x7b6>
 8008e4c:	4651      	mov	r1, sl
 8008e4e:	4620      	mov	r0, r4
 8008e50:	f000 fcce 	bl	80097f0 <__pow5mult>
 8008e54:	4682      	mov	sl, r0
 8008e56:	2101      	movs	r1, #1
 8008e58:	4620      	mov	r0, r4
 8008e5a:	f000 fc09 	bl	8009670 <__i2b>
 8008e5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008e60:	2b00      	cmp	r3, #0
 8008e62:	4606      	mov	r6, r0
 8008e64:	f340 8081 	ble.w	8008f6a <_dtoa_r+0x8ca>
 8008e68:	461a      	mov	r2, r3
 8008e6a:	4601      	mov	r1, r0
 8008e6c:	4620      	mov	r0, r4
 8008e6e:	f000 fcbf 	bl	80097f0 <__pow5mult>
 8008e72:	9b07      	ldr	r3, [sp, #28]
 8008e74:	2b01      	cmp	r3, #1
 8008e76:	4606      	mov	r6, r0
 8008e78:	dd7a      	ble.n	8008f70 <_dtoa_r+0x8d0>
 8008e7a:	f04f 0800 	mov.w	r8, #0
 8008e7e:	6933      	ldr	r3, [r6, #16]
 8008e80:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8008e84:	6918      	ldr	r0, [r3, #16]
 8008e86:	f000 fba5 	bl	80095d4 <__hi0bits>
 8008e8a:	f1c0 0020 	rsb	r0, r0, #32
 8008e8e:	9b06      	ldr	r3, [sp, #24]
 8008e90:	4418      	add	r0, r3
 8008e92:	f010 001f 	ands.w	r0, r0, #31
 8008e96:	f000 8094 	beq.w	8008fc2 <_dtoa_r+0x922>
 8008e9a:	f1c0 0320 	rsb	r3, r0, #32
 8008e9e:	2b04      	cmp	r3, #4
 8008ea0:	f340 8085 	ble.w	8008fae <_dtoa_r+0x90e>
 8008ea4:	9b05      	ldr	r3, [sp, #20]
 8008ea6:	f1c0 001c 	rsb	r0, r0, #28
 8008eaa:	4403      	add	r3, r0
 8008eac:	9305      	str	r3, [sp, #20]
 8008eae:	9b06      	ldr	r3, [sp, #24]
 8008eb0:	4403      	add	r3, r0
 8008eb2:	4405      	add	r5, r0
 8008eb4:	9306      	str	r3, [sp, #24]
 8008eb6:	9b05      	ldr	r3, [sp, #20]
 8008eb8:	2b00      	cmp	r3, #0
 8008eba:	dd05      	ble.n	8008ec8 <_dtoa_r+0x828>
 8008ebc:	4651      	mov	r1, sl
 8008ebe:	461a      	mov	r2, r3
 8008ec0:	4620      	mov	r0, r4
 8008ec2:	f000 fcef 	bl	80098a4 <__lshift>
 8008ec6:	4682      	mov	sl, r0
 8008ec8:	9b06      	ldr	r3, [sp, #24]
 8008eca:	2b00      	cmp	r3, #0
 8008ecc:	dd05      	ble.n	8008eda <_dtoa_r+0x83a>
 8008ece:	4631      	mov	r1, r6
 8008ed0:	461a      	mov	r2, r3
 8008ed2:	4620      	mov	r0, r4
 8008ed4:	f000 fce6 	bl	80098a4 <__lshift>
 8008ed8:	4606      	mov	r6, r0
 8008eda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008edc:	2b00      	cmp	r3, #0
 8008ede:	d072      	beq.n	8008fc6 <_dtoa_r+0x926>
 8008ee0:	4631      	mov	r1, r6
 8008ee2:	4650      	mov	r0, sl
 8008ee4:	f000 fd4a 	bl	800997c <__mcmp>
 8008ee8:	2800      	cmp	r0, #0
 8008eea:	da6c      	bge.n	8008fc6 <_dtoa_r+0x926>
 8008eec:	2300      	movs	r3, #0
 8008eee:	4651      	mov	r1, sl
 8008ef0:	220a      	movs	r2, #10
 8008ef2:	4620      	mov	r0, r4
 8008ef4:	f000 fb28 	bl	8009548 <__multadd>
 8008ef8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008efa:	f10b 3bff 	add.w	fp, fp, #4294967295
 8008efe:	4682      	mov	sl, r0
 8008f00:	2b00      	cmp	r3, #0
 8008f02:	f000 81b0 	beq.w	8009266 <_dtoa_r+0xbc6>
 8008f06:	2300      	movs	r3, #0
 8008f08:	4639      	mov	r1, r7
 8008f0a:	220a      	movs	r2, #10
 8008f0c:	4620      	mov	r0, r4
 8008f0e:	f000 fb1b 	bl	8009548 <__multadd>
 8008f12:	9b01      	ldr	r3, [sp, #4]
 8008f14:	2b00      	cmp	r3, #0
 8008f16:	4607      	mov	r7, r0
 8008f18:	f300 8096 	bgt.w	8009048 <_dtoa_r+0x9a8>
 8008f1c:	9b07      	ldr	r3, [sp, #28]
 8008f1e:	2b02      	cmp	r3, #2
 8008f20:	dc59      	bgt.n	8008fd6 <_dtoa_r+0x936>
 8008f22:	e091      	b.n	8009048 <_dtoa_r+0x9a8>
 8008f24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008f26:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8008f2a:	e758      	b.n	8008dde <_dtoa_r+0x73e>
 8008f2c:	9b04      	ldr	r3, [sp, #16]
 8008f2e:	1e5e      	subs	r6, r3, #1
 8008f30:	9b08      	ldr	r3, [sp, #32]
 8008f32:	42b3      	cmp	r3, r6
 8008f34:	bfbf      	itttt	lt
 8008f36:	9b08      	ldrlt	r3, [sp, #32]
 8008f38:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 8008f3a:	9608      	strlt	r6, [sp, #32]
 8008f3c:	1af3      	sublt	r3, r6, r3
 8008f3e:	bfb4      	ite	lt
 8008f40:	18d2      	addlt	r2, r2, r3
 8008f42:	1b9e      	subge	r6, r3, r6
 8008f44:	9b04      	ldr	r3, [sp, #16]
 8008f46:	bfbc      	itt	lt
 8008f48:	920b      	strlt	r2, [sp, #44]	; 0x2c
 8008f4a:	2600      	movlt	r6, #0
 8008f4c:	2b00      	cmp	r3, #0
 8008f4e:	bfb7      	itett	lt
 8008f50:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 8008f54:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 8008f58:	1a9d      	sublt	r5, r3, r2
 8008f5a:	2300      	movlt	r3, #0
 8008f5c:	e741      	b.n	8008de2 <_dtoa_r+0x742>
 8008f5e:	9e08      	ldr	r6, [sp, #32]
 8008f60:	9d05      	ldr	r5, [sp, #20]
 8008f62:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8008f64:	e748      	b.n	8008df8 <_dtoa_r+0x758>
 8008f66:	9a08      	ldr	r2, [sp, #32]
 8008f68:	e770      	b.n	8008e4c <_dtoa_r+0x7ac>
 8008f6a:	9b07      	ldr	r3, [sp, #28]
 8008f6c:	2b01      	cmp	r3, #1
 8008f6e:	dc19      	bgt.n	8008fa4 <_dtoa_r+0x904>
 8008f70:	9b02      	ldr	r3, [sp, #8]
 8008f72:	b9bb      	cbnz	r3, 8008fa4 <_dtoa_r+0x904>
 8008f74:	9b03      	ldr	r3, [sp, #12]
 8008f76:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8008f7a:	b99b      	cbnz	r3, 8008fa4 <_dtoa_r+0x904>
 8008f7c:	9b03      	ldr	r3, [sp, #12]
 8008f7e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8008f82:	0d1b      	lsrs	r3, r3, #20
 8008f84:	051b      	lsls	r3, r3, #20
 8008f86:	b183      	cbz	r3, 8008faa <_dtoa_r+0x90a>
 8008f88:	9b05      	ldr	r3, [sp, #20]
 8008f8a:	3301      	adds	r3, #1
 8008f8c:	9305      	str	r3, [sp, #20]
 8008f8e:	9b06      	ldr	r3, [sp, #24]
 8008f90:	3301      	adds	r3, #1
 8008f92:	9306      	str	r3, [sp, #24]
 8008f94:	f04f 0801 	mov.w	r8, #1
 8008f98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008f9a:	2b00      	cmp	r3, #0
 8008f9c:	f47f af6f 	bne.w	8008e7e <_dtoa_r+0x7de>
 8008fa0:	2001      	movs	r0, #1
 8008fa2:	e774      	b.n	8008e8e <_dtoa_r+0x7ee>
 8008fa4:	f04f 0800 	mov.w	r8, #0
 8008fa8:	e7f6      	b.n	8008f98 <_dtoa_r+0x8f8>
 8008faa:	4698      	mov	r8, r3
 8008fac:	e7f4      	b.n	8008f98 <_dtoa_r+0x8f8>
 8008fae:	d082      	beq.n	8008eb6 <_dtoa_r+0x816>
 8008fb0:	9a05      	ldr	r2, [sp, #20]
 8008fb2:	331c      	adds	r3, #28
 8008fb4:	441a      	add	r2, r3
 8008fb6:	9205      	str	r2, [sp, #20]
 8008fb8:	9a06      	ldr	r2, [sp, #24]
 8008fba:	441a      	add	r2, r3
 8008fbc:	441d      	add	r5, r3
 8008fbe:	9206      	str	r2, [sp, #24]
 8008fc0:	e779      	b.n	8008eb6 <_dtoa_r+0x816>
 8008fc2:	4603      	mov	r3, r0
 8008fc4:	e7f4      	b.n	8008fb0 <_dtoa_r+0x910>
 8008fc6:	9b04      	ldr	r3, [sp, #16]
 8008fc8:	2b00      	cmp	r3, #0
 8008fca:	dc37      	bgt.n	800903c <_dtoa_r+0x99c>
 8008fcc:	9b07      	ldr	r3, [sp, #28]
 8008fce:	2b02      	cmp	r3, #2
 8008fd0:	dd34      	ble.n	800903c <_dtoa_r+0x99c>
 8008fd2:	9b04      	ldr	r3, [sp, #16]
 8008fd4:	9301      	str	r3, [sp, #4]
 8008fd6:	9b01      	ldr	r3, [sp, #4]
 8008fd8:	b963      	cbnz	r3, 8008ff4 <_dtoa_r+0x954>
 8008fda:	4631      	mov	r1, r6
 8008fdc:	2205      	movs	r2, #5
 8008fde:	4620      	mov	r0, r4
 8008fe0:	f000 fab2 	bl	8009548 <__multadd>
 8008fe4:	4601      	mov	r1, r0
 8008fe6:	4606      	mov	r6, r0
 8008fe8:	4650      	mov	r0, sl
 8008fea:	f000 fcc7 	bl	800997c <__mcmp>
 8008fee:	2800      	cmp	r0, #0
 8008ff0:	f73f adbb 	bgt.w	8008b6a <_dtoa_r+0x4ca>
 8008ff4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008ff6:	9d00      	ldr	r5, [sp, #0]
 8008ff8:	ea6f 0b03 	mvn.w	fp, r3
 8008ffc:	f04f 0800 	mov.w	r8, #0
 8009000:	4631      	mov	r1, r6
 8009002:	4620      	mov	r0, r4
 8009004:	f000 fa7e 	bl	8009504 <_Bfree>
 8009008:	2f00      	cmp	r7, #0
 800900a:	f43f aeab 	beq.w	8008d64 <_dtoa_r+0x6c4>
 800900e:	f1b8 0f00 	cmp.w	r8, #0
 8009012:	d005      	beq.n	8009020 <_dtoa_r+0x980>
 8009014:	45b8      	cmp	r8, r7
 8009016:	d003      	beq.n	8009020 <_dtoa_r+0x980>
 8009018:	4641      	mov	r1, r8
 800901a:	4620      	mov	r0, r4
 800901c:	f000 fa72 	bl	8009504 <_Bfree>
 8009020:	4639      	mov	r1, r7
 8009022:	4620      	mov	r0, r4
 8009024:	f000 fa6e 	bl	8009504 <_Bfree>
 8009028:	e69c      	b.n	8008d64 <_dtoa_r+0x6c4>
 800902a:	2600      	movs	r6, #0
 800902c:	4637      	mov	r7, r6
 800902e:	e7e1      	b.n	8008ff4 <_dtoa_r+0x954>
 8009030:	46bb      	mov	fp, r7
 8009032:	4637      	mov	r7, r6
 8009034:	e599      	b.n	8008b6a <_dtoa_r+0x4ca>
 8009036:	bf00      	nop
 8009038:	40240000 	.word	0x40240000
 800903c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800903e:	2b00      	cmp	r3, #0
 8009040:	f000 80c8 	beq.w	80091d4 <_dtoa_r+0xb34>
 8009044:	9b04      	ldr	r3, [sp, #16]
 8009046:	9301      	str	r3, [sp, #4]
 8009048:	2d00      	cmp	r5, #0
 800904a:	dd05      	ble.n	8009058 <_dtoa_r+0x9b8>
 800904c:	4639      	mov	r1, r7
 800904e:	462a      	mov	r2, r5
 8009050:	4620      	mov	r0, r4
 8009052:	f000 fc27 	bl	80098a4 <__lshift>
 8009056:	4607      	mov	r7, r0
 8009058:	f1b8 0f00 	cmp.w	r8, #0
 800905c:	d05b      	beq.n	8009116 <_dtoa_r+0xa76>
 800905e:	6879      	ldr	r1, [r7, #4]
 8009060:	4620      	mov	r0, r4
 8009062:	f000 fa0f 	bl	8009484 <_Balloc>
 8009066:	4605      	mov	r5, r0
 8009068:	b928      	cbnz	r0, 8009076 <_dtoa_r+0x9d6>
 800906a:	4b83      	ldr	r3, [pc, #524]	; (8009278 <_dtoa_r+0xbd8>)
 800906c:	4602      	mov	r2, r0
 800906e:	f240 21ef 	movw	r1, #751	; 0x2ef
 8009072:	f7ff bb2e 	b.w	80086d2 <_dtoa_r+0x32>
 8009076:	693a      	ldr	r2, [r7, #16]
 8009078:	3202      	adds	r2, #2
 800907a:	0092      	lsls	r2, r2, #2
 800907c:	f107 010c 	add.w	r1, r7, #12
 8009080:	300c      	adds	r0, #12
 8009082:	f7ff fa76 	bl	8008572 <memcpy>
 8009086:	2201      	movs	r2, #1
 8009088:	4629      	mov	r1, r5
 800908a:	4620      	mov	r0, r4
 800908c:	f000 fc0a 	bl	80098a4 <__lshift>
 8009090:	9b00      	ldr	r3, [sp, #0]
 8009092:	3301      	adds	r3, #1
 8009094:	9304      	str	r3, [sp, #16]
 8009096:	e9dd 2300 	ldrd	r2, r3, [sp]
 800909a:	4413      	add	r3, r2
 800909c:	9308      	str	r3, [sp, #32]
 800909e:	9b02      	ldr	r3, [sp, #8]
 80090a0:	f003 0301 	and.w	r3, r3, #1
 80090a4:	46b8      	mov	r8, r7
 80090a6:	9306      	str	r3, [sp, #24]
 80090a8:	4607      	mov	r7, r0
 80090aa:	9b04      	ldr	r3, [sp, #16]
 80090ac:	4631      	mov	r1, r6
 80090ae:	3b01      	subs	r3, #1
 80090b0:	4650      	mov	r0, sl
 80090b2:	9301      	str	r3, [sp, #4]
 80090b4:	f7ff fa6b 	bl	800858e <quorem>
 80090b8:	4641      	mov	r1, r8
 80090ba:	9002      	str	r0, [sp, #8]
 80090bc:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80090c0:	4650      	mov	r0, sl
 80090c2:	f000 fc5b 	bl	800997c <__mcmp>
 80090c6:	463a      	mov	r2, r7
 80090c8:	9005      	str	r0, [sp, #20]
 80090ca:	4631      	mov	r1, r6
 80090cc:	4620      	mov	r0, r4
 80090ce:	f000 fc71 	bl	80099b4 <__mdiff>
 80090d2:	68c2      	ldr	r2, [r0, #12]
 80090d4:	4605      	mov	r5, r0
 80090d6:	bb02      	cbnz	r2, 800911a <_dtoa_r+0xa7a>
 80090d8:	4601      	mov	r1, r0
 80090da:	4650      	mov	r0, sl
 80090dc:	f000 fc4e 	bl	800997c <__mcmp>
 80090e0:	4602      	mov	r2, r0
 80090e2:	4629      	mov	r1, r5
 80090e4:	4620      	mov	r0, r4
 80090e6:	9209      	str	r2, [sp, #36]	; 0x24
 80090e8:	f000 fa0c 	bl	8009504 <_Bfree>
 80090ec:	9b07      	ldr	r3, [sp, #28]
 80090ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80090f0:	9d04      	ldr	r5, [sp, #16]
 80090f2:	ea43 0102 	orr.w	r1, r3, r2
 80090f6:	9b06      	ldr	r3, [sp, #24]
 80090f8:	4319      	orrs	r1, r3
 80090fa:	d110      	bne.n	800911e <_dtoa_r+0xa7e>
 80090fc:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8009100:	d029      	beq.n	8009156 <_dtoa_r+0xab6>
 8009102:	9b05      	ldr	r3, [sp, #20]
 8009104:	2b00      	cmp	r3, #0
 8009106:	dd02      	ble.n	800910e <_dtoa_r+0xa6e>
 8009108:	9b02      	ldr	r3, [sp, #8]
 800910a:	f103 0931 	add.w	r9, r3, #49	; 0x31
 800910e:	9b01      	ldr	r3, [sp, #4]
 8009110:	f883 9000 	strb.w	r9, [r3]
 8009114:	e774      	b.n	8009000 <_dtoa_r+0x960>
 8009116:	4638      	mov	r0, r7
 8009118:	e7ba      	b.n	8009090 <_dtoa_r+0x9f0>
 800911a:	2201      	movs	r2, #1
 800911c:	e7e1      	b.n	80090e2 <_dtoa_r+0xa42>
 800911e:	9b05      	ldr	r3, [sp, #20]
 8009120:	2b00      	cmp	r3, #0
 8009122:	db04      	blt.n	800912e <_dtoa_r+0xa8e>
 8009124:	9907      	ldr	r1, [sp, #28]
 8009126:	430b      	orrs	r3, r1
 8009128:	9906      	ldr	r1, [sp, #24]
 800912a:	430b      	orrs	r3, r1
 800912c:	d120      	bne.n	8009170 <_dtoa_r+0xad0>
 800912e:	2a00      	cmp	r2, #0
 8009130:	dded      	ble.n	800910e <_dtoa_r+0xa6e>
 8009132:	4651      	mov	r1, sl
 8009134:	2201      	movs	r2, #1
 8009136:	4620      	mov	r0, r4
 8009138:	f000 fbb4 	bl	80098a4 <__lshift>
 800913c:	4631      	mov	r1, r6
 800913e:	4682      	mov	sl, r0
 8009140:	f000 fc1c 	bl	800997c <__mcmp>
 8009144:	2800      	cmp	r0, #0
 8009146:	dc03      	bgt.n	8009150 <_dtoa_r+0xab0>
 8009148:	d1e1      	bne.n	800910e <_dtoa_r+0xa6e>
 800914a:	f019 0f01 	tst.w	r9, #1
 800914e:	d0de      	beq.n	800910e <_dtoa_r+0xa6e>
 8009150:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8009154:	d1d8      	bne.n	8009108 <_dtoa_r+0xa68>
 8009156:	9a01      	ldr	r2, [sp, #4]
 8009158:	2339      	movs	r3, #57	; 0x39
 800915a:	7013      	strb	r3, [r2, #0]
 800915c:	462b      	mov	r3, r5
 800915e:	461d      	mov	r5, r3
 8009160:	3b01      	subs	r3, #1
 8009162:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8009166:	2a39      	cmp	r2, #57	; 0x39
 8009168:	d06c      	beq.n	8009244 <_dtoa_r+0xba4>
 800916a:	3201      	adds	r2, #1
 800916c:	701a      	strb	r2, [r3, #0]
 800916e:	e747      	b.n	8009000 <_dtoa_r+0x960>
 8009170:	2a00      	cmp	r2, #0
 8009172:	dd07      	ble.n	8009184 <_dtoa_r+0xae4>
 8009174:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8009178:	d0ed      	beq.n	8009156 <_dtoa_r+0xab6>
 800917a:	9a01      	ldr	r2, [sp, #4]
 800917c:	f109 0301 	add.w	r3, r9, #1
 8009180:	7013      	strb	r3, [r2, #0]
 8009182:	e73d      	b.n	8009000 <_dtoa_r+0x960>
 8009184:	9b04      	ldr	r3, [sp, #16]
 8009186:	9a08      	ldr	r2, [sp, #32]
 8009188:	f803 9c01 	strb.w	r9, [r3, #-1]
 800918c:	4293      	cmp	r3, r2
 800918e:	d043      	beq.n	8009218 <_dtoa_r+0xb78>
 8009190:	4651      	mov	r1, sl
 8009192:	2300      	movs	r3, #0
 8009194:	220a      	movs	r2, #10
 8009196:	4620      	mov	r0, r4
 8009198:	f000 f9d6 	bl	8009548 <__multadd>
 800919c:	45b8      	cmp	r8, r7
 800919e:	4682      	mov	sl, r0
 80091a0:	f04f 0300 	mov.w	r3, #0
 80091a4:	f04f 020a 	mov.w	r2, #10
 80091a8:	4641      	mov	r1, r8
 80091aa:	4620      	mov	r0, r4
 80091ac:	d107      	bne.n	80091be <_dtoa_r+0xb1e>
 80091ae:	f000 f9cb 	bl	8009548 <__multadd>
 80091b2:	4680      	mov	r8, r0
 80091b4:	4607      	mov	r7, r0
 80091b6:	9b04      	ldr	r3, [sp, #16]
 80091b8:	3301      	adds	r3, #1
 80091ba:	9304      	str	r3, [sp, #16]
 80091bc:	e775      	b.n	80090aa <_dtoa_r+0xa0a>
 80091be:	f000 f9c3 	bl	8009548 <__multadd>
 80091c2:	4639      	mov	r1, r7
 80091c4:	4680      	mov	r8, r0
 80091c6:	2300      	movs	r3, #0
 80091c8:	220a      	movs	r2, #10
 80091ca:	4620      	mov	r0, r4
 80091cc:	f000 f9bc 	bl	8009548 <__multadd>
 80091d0:	4607      	mov	r7, r0
 80091d2:	e7f0      	b.n	80091b6 <_dtoa_r+0xb16>
 80091d4:	9b04      	ldr	r3, [sp, #16]
 80091d6:	9301      	str	r3, [sp, #4]
 80091d8:	9d00      	ldr	r5, [sp, #0]
 80091da:	4631      	mov	r1, r6
 80091dc:	4650      	mov	r0, sl
 80091de:	f7ff f9d6 	bl	800858e <quorem>
 80091e2:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80091e6:	9b00      	ldr	r3, [sp, #0]
 80091e8:	f805 9b01 	strb.w	r9, [r5], #1
 80091ec:	1aea      	subs	r2, r5, r3
 80091ee:	9b01      	ldr	r3, [sp, #4]
 80091f0:	4293      	cmp	r3, r2
 80091f2:	dd07      	ble.n	8009204 <_dtoa_r+0xb64>
 80091f4:	4651      	mov	r1, sl
 80091f6:	2300      	movs	r3, #0
 80091f8:	220a      	movs	r2, #10
 80091fa:	4620      	mov	r0, r4
 80091fc:	f000 f9a4 	bl	8009548 <__multadd>
 8009200:	4682      	mov	sl, r0
 8009202:	e7ea      	b.n	80091da <_dtoa_r+0xb3a>
 8009204:	9b01      	ldr	r3, [sp, #4]
 8009206:	2b00      	cmp	r3, #0
 8009208:	bfc8      	it	gt
 800920a:	461d      	movgt	r5, r3
 800920c:	9b00      	ldr	r3, [sp, #0]
 800920e:	bfd8      	it	le
 8009210:	2501      	movle	r5, #1
 8009212:	441d      	add	r5, r3
 8009214:	f04f 0800 	mov.w	r8, #0
 8009218:	4651      	mov	r1, sl
 800921a:	2201      	movs	r2, #1
 800921c:	4620      	mov	r0, r4
 800921e:	f000 fb41 	bl	80098a4 <__lshift>
 8009222:	4631      	mov	r1, r6
 8009224:	4682      	mov	sl, r0
 8009226:	f000 fba9 	bl	800997c <__mcmp>
 800922a:	2800      	cmp	r0, #0
 800922c:	dc96      	bgt.n	800915c <_dtoa_r+0xabc>
 800922e:	d102      	bne.n	8009236 <_dtoa_r+0xb96>
 8009230:	f019 0f01 	tst.w	r9, #1
 8009234:	d192      	bne.n	800915c <_dtoa_r+0xabc>
 8009236:	462b      	mov	r3, r5
 8009238:	461d      	mov	r5, r3
 800923a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800923e:	2a30      	cmp	r2, #48	; 0x30
 8009240:	d0fa      	beq.n	8009238 <_dtoa_r+0xb98>
 8009242:	e6dd      	b.n	8009000 <_dtoa_r+0x960>
 8009244:	9a00      	ldr	r2, [sp, #0]
 8009246:	429a      	cmp	r2, r3
 8009248:	d189      	bne.n	800915e <_dtoa_r+0xabe>
 800924a:	f10b 0b01 	add.w	fp, fp, #1
 800924e:	2331      	movs	r3, #49	; 0x31
 8009250:	e796      	b.n	8009180 <_dtoa_r+0xae0>
 8009252:	4b0a      	ldr	r3, [pc, #40]	; (800927c <_dtoa_r+0xbdc>)
 8009254:	f7ff ba99 	b.w	800878a <_dtoa_r+0xea>
 8009258:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800925a:	2b00      	cmp	r3, #0
 800925c:	f47f aa6d 	bne.w	800873a <_dtoa_r+0x9a>
 8009260:	4b07      	ldr	r3, [pc, #28]	; (8009280 <_dtoa_r+0xbe0>)
 8009262:	f7ff ba92 	b.w	800878a <_dtoa_r+0xea>
 8009266:	9b01      	ldr	r3, [sp, #4]
 8009268:	2b00      	cmp	r3, #0
 800926a:	dcb5      	bgt.n	80091d8 <_dtoa_r+0xb38>
 800926c:	9b07      	ldr	r3, [sp, #28]
 800926e:	2b02      	cmp	r3, #2
 8009270:	f73f aeb1 	bgt.w	8008fd6 <_dtoa_r+0x936>
 8009274:	e7b0      	b.n	80091d8 <_dtoa_r+0xb38>
 8009276:	bf00      	nop
 8009278:	0800a538 	.word	0x0800a538
 800927c:	0800a498 	.word	0x0800a498
 8009280:	0800a4bc 	.word	0x0800a4bc

08009284 <_free_r>:
 8009284:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009286:	2900      	cmp	r1, #0
 8009288:	d044      	beq.n	8009314 <_free_r+0x90>
 800928a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800928e:	9001      	str	r0, [sp, #4]
 8009290:	2b00      	cmp	r3, #0
 8009292:	f1a1 0404 	sub.w	r4, r1, #4
 8009296:	bfb8      	it	lt
 8009298:	18e4      	addlt	r4, r4, r3
 800929a:	f000 f8e7 	bl	800946c <__malloc_lock>
 800929e:	4a1e      	ldr	r2, [pc, #120]	; (8009318 <_free_r+0x94>)
 80092a0:	9801      	ldr	r0, [sp, #4]
 80092a2:	6813      	ldr	r3, [r2, #0]
 80092a4:	b933      	cbnz	r3, 80092b4 <_free_r+0x30>
 80092a6:	6063      	str	r3, [r4, #4]
 80092a8:	6014      	str	r4, [r2, #0]
 80092aa:	b003      	add	sp, #12
 80092ac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80092b0:	f000 b8e2 	b.w	8009478 <__malloc_unlock>
 80092b4:	42a3      	cmp	r3, r4
 80092b6:	d908      	bls.n	80092ca <_free_r+0x46>
 80092b8:	6825      	ldr	r5, [r4, #0]
 80092ba:	1961      	adds	r1, r4, r5
 80092bc:	428b      	cmp	r3, r1
 80092be:	bf01      	itttt	eq
 80092c0:	6819      	ldreq	r1, [r3, #0]
 80092c2:	685b      	ldreq	r3, [r3, #4]
 80092c4:	1949      	addeq	r1, r1, r5
 80092c6:	6021      	streq	r1, [r4, #0]
 80092c8:	e7ed      	b.n	80092a6 <_free_r+0x22>
 80092ca:	461a      	mov	r2, r3
 80092cc:	685b      	ldr	r3, [r3, #4]
 80092ce:	b10b      	cbz	r3, 80092d4 <_free_r+0x50>
 80092d0:	42a3      	cmp	r3, r4
 80092d2:	d9fa      	bls.n	80092ca <_free_r+0x46>
 80092d4:	6811      	ldr	r1, [r2, #0]
 80092d6:	1855      	adds	r5, r2, r1
 80092d8:	42a5      	cmp	r5, r4
 80092da:	d10b      	bne.n	80092f4 <_free_r+0x70>
 80092dc:	6824      	ldr	r4, [r4, #0]
 80092de:	4421      	add	r1, r4
 80092e0:	1854      	adds	r4, r2, r1
 80092e2:	42a3      	cmp	r3, r4
 80092e4:	6011      	str	r1, [r2, #0]
 80092e6:	d1e0      	bne.n	80092aa <_free_r+0x26>
 80092e8:	681c      	ldr	r4, [r3, #0]
 80092ea:	685b      	ldr	r3, [r3, #4]
 80092ec:	6053      	str	r3, [r2, #4]
 80092ee:	440c      	add	r4, r1
 80092f0:	6014      	str	r4, [r2, #0]
 80092f2:	e7da      	b.n	80092aa <_free_r+0x26>
 80092f4:	d902      	bls.n	80092fc <_free_r+0x78>
 80092f6:	230c      	movs	r3, #12
 80092f8:	6003      	str	r3, [r0, #0]
 80092fa:	e7d6      	b.n	80092aa <_free_r+0x26>
 80092fc:	6825      	ldr	r5, [r4, #0]
 80092fe:	1961      	adds	r1, r4, r5
 8009300:	428b      	cmp	r3, r1
 8009302:	bf04      	itt	eq
 8009304:	6819      	ldreq	r1, [r3, #0]
 8009306:	685b      	ldreq	r3, [r3, #4]
 8009308:	6063      	str	r3, [r4, #4]
 800930a:	bf04      	itt	eq
 800930c:	1949      	addeq	r1, r1, r5
 800930e:	6021      	streq	r1, [r4, #0]
 8009310:	6054      	str	r4, [r2, #4]
 8009312:	e7ca      	b.n	80092aa <_free_r+0x26>
 8009314:	b003      	add	sp, #12
 8009316:	bd30      	pop	{r4, r5, pc}
 8009318:	20004f74 	.word	0x20004f74

0800931c <malloc>:
 800931c:	4b02      	ldr	r3, [pc, #8]	; (8009328 <malloc+0xc>)
 800931e:	4601      	mov	r1, r0
 8009320:	6818      	ldr	r0, [r3, #0]
 8009322:	f000 b823 	b.w	800936c <_malloc_r>
 8009326:	bf00      	nop
 8009328:	20000068 	.word	0x20000068

0800932c <sbrk_aligned>:
 800932c:	b570      	push	{r4, r5, r6, lr}
 800932e:	4e0e      	ldr	r6, [pc, #56]	; (8009368 <sbrk_aligned+0x3c>)
 8009330:	460c      	mov	r4, r1
 8009332:	6831      	ldr	r1, [r6, #0]
 8009334:	4605      	mov	r5, r0
 8009336:	b911      	cbnz	r1, 800933e <sbrk_aligned+0x12>
 8009338:	f000 fe96 	bl	800a068 <_sbrk_r>
 800933c:	6030      	str	r0, [r6, #0]
 800933e:	4621      	mov	r1, r4
 8009340:	4628      	mov	r0, r5
 8009342:	f000 fe91 	bl	800a068 <_sbrk_r>
 8009346:	1c43      	adds	r3, r0, #1
 8009348:	d00a      	beq.n	8009360 <sbrk_aligned+0x34>
 800934a:	1cc4      	adds	r4, r0, #3
 800934c:	f024 0403 	bic.w	r4, r4, #3
 8009350:	42a0      	cmp	r0, r4
 8009352:	d007      	beq.n	8009364 <sbrk_aligned+0x38>
 8009354:	1a21      	subs	r1, r4, r0
 8009356:	4628      	mov	r0, r5
 8009358:	f000 fe86 	bl	800a068 <_sbrk_r>
 800935c:	3001      	adds	r0, #1
 800935e:	d101      	bne.n	8009364 <sbrk_aligned+0x38>
 8009360:	f04f 34ff 	mov.w	r4, #4294967295
 8009364:	4620      	mov	r0, r4
 8009366:	bd70      	pop	{r4, r5, r6, pc}
 8009368:	20004f78 	.word	0x20004f78

0800936c <_malloc_r>:
 800936c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009370:	1ccd      	adds	r5, r1, #3
 8009372:	f025 0503 	bic.w	r5, r5, #3
 8009376:	3508      	adds	r5, #8
 8009378:	2d0c      	cmp	r5, #12
 800937a:	bf38      	it	cc
 800937c:	250c      	movcc	r5, #12
 800937e:	2d00      	cmp	r5, #0
 8009380:	4607      	mov	r7, r0
 8009382:	db01      	blt.n	8009388 <_malloc_r+0x1c>
 8009384:	42a9      	cmp	r1, r5
 8009386:	d905      	bls.n	8009394 <_malloc_r+0x28>
 8009388:	230c      	movs	r3, #12
 800938a:	603b      	str	r3, [r7, #0]
 800938c:	2600      	movs	r6, #0
 800938e:	4630      	mov	r0, r6
 8009390:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009394:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8009468 <_malloc_r+0xfc>
 8009398:	f000 f868 	bl	800946c <__malloc_lock>
 800939c:	f8d8 3000 	ldr.w	r3, [r8]
 80093a0:	461c      	mov	r4, r3
 80093a2:	bb5c      	cbnz	r4, 80093fc <_malloc_r+0x90>
 80093a4:	4629      	mov	r1, r5
 80093a6:	4638      	mov	r0, r7
 80093a8:	f7ff ffc0 	bl	800932c <sbrk_aligned>
 80093ac:	1c43      	adds	r3, r0, #1
 80093ae:	4604      	mov	r4, r0
 80093b0:	d155      	bne.n	800945e <_malloc_r+0xf2>
 80093b2:	f8d8 4000 	ldr.w	r4, [r8]
 80093b6:	4626      	mov	r6, r4
 80093b8:	2e00      	cmp	r6, #0
 80093ba:	d145      	bne.n	8009448 <_malloc_r+0xdc>
 80093bc:	2c00      	cmp	r4, #0
 80093be:	d048      	beq.n	8009452 <_malloc_r+0xe6>
 80093c0:	6823      	ldr	r3, [r4, #0]
 80093c2:	4631      	mov	r1, r6
 80093c4:	4638      	mov	r0, r7
 80093c6:	eb04 0903 	add.w	r9, r4, r3
 80093ca:	f000 fe4d 	bl	800a068 <_sbrk_r>
 80093ce:	4581      	cmp	r9, r0
 80093d0:	d13f      	bne.n	8009452 <_malloc_r+0xe6>
 80093d2:	6821      	ldr	r1, [r4, #0]
 80093d4:	1a6d      	subs	r5, r5, r1
 80093d6:	4629      	mov	r1, r5
 80093d8:	4638      	mov	r0, r7
 80093da:	f7ff ffa7 	bl	800932c <sbrk_aligned>
 80093de:	3001      	adds	r0, #1
 80093e0:	d037      	beq.n	8009452 <_malloc_r+0xe6>
 80093e2:	6823      	ldr	r3, [r4, #0]
 80093e4:	442b      	add	r3, r5
 80093e6:	6023      	str	r3, [r4, #0]
 80093e8:	f8d8 3000 	ldr.w	r3, [r8]
 80093ec:	2b00      	cmp	r3, #0
 80093ee:	d038      	beq.n	8009462 <_malloc_r+0xf6>
 80093f0:	685a      	ldr	r2, [r3, #4]
 80093f2:	42a2      	cmp	r2, r4
 80093f4:	d12b      	bne.n	800944e <_malloc_r+0xe2>
 80093f6:	2200      	movs	r2, #0
 80093f8:	605a      	str	r2, [r3, #4]
 80093fa:	e00f      	b.n	800941c <_malloc_r+0xb0>
 80093fc:	6822      	ldr	r2, [r4, #0]
 80093fe:	1b52      	subs	r2, r2, r5
 8009400:	d41f      	bmi.n	8009442 <_malloc_r+0xd6>
 8009402:	2a0b      	cmp	r2, #11
 8009404:	d917      	bls.n	8009436 <_malloc_r+0xca>
 8009406:	1961      	adds	r1, r4, r5
 8009408:	42a3      	cmp	r3, r4
 800940a:	6025      	str	r5, [r4, #0]
 800940c:	bf18      	it	ne
 800940e:	6059      	strne	r1, [r3, #4]
 8009410:	6863      	ldr	r3, [r4, #4]
 8009412:	bf08      	it	eq
 8009414:	f8c8 1000 	streq.w	r1, [r8]
 8009418:	5162      	str	r2, [r4, r5]
 800941a:	604b      	str	r3, [r1, #4]
 800941c:	4638      	mov	r0, r7
 800941e:	f104 060b 	add.w	r6, r4, #11
 8009422:	f000 f829 	bl	8009478 <__malloc_unlock>
 8009426:	f026 0607 	bic.w	r6, r6, #7
 800942a:	1d23      	adds	r3, r4, #4
 800942c:	1af2      	subs	r2, r6, r3
 800942e:	d0ae      	beq.n	800938e <_malloc_r+0x22>
 8009430:	1b9b      	subs	r3, r3, r6
 8009432:	50a3      	str	r3, [r4, r2]
 8009434:	e7ab      	b.n	800938e <_malloc_r+0x22>
 8009436:	42a3      	cmp	r3, r4
 8009438:	6862      	ldr	r2, [r4, #4]
 800943a:	d1dd      	bne.n	80093f8 <_malloc_r+0x8c>
 800943c:	f8c8 2000 	str.w	r2, [r8]
 8009440:	e7ec      	b.n	800941c <_malloc_r+0xb0>
 8009442:	4623      	mov	r3, r4
 8009444:	6864      	ldr	r4, [r4, #4]
 8009446:	e7ac      	b.n	80093a2 <_malloc_r+0x36>
 8009448:	4634      	mov	r4, r6
 800944a:	6876      	ldr	r6, [r6, #4]
 800944c:	e7b4      	b.n	80093b8 <_malloc_r+0x4c>
 800944e:	4613      	mov	r3, r2
 8009450:	e7cc      	b.n	80093ec <_malloc_r+0x80>
 8009452:	230c      	movs	r3, #12
 8009454:	603b      	str	r3, [r7, #0]
 8009456:	4638      	mov	r0, r7
 8009458:	f000 f80e 	bl	8009478 <__malloc_unlock>
 800945c:	e797      	b.n	800938e <_malloc_r+0x22>
 800945e:	6025      	str	r5, [r4, #0]
 8009460:	e7dc      	b.n	800941c <_malloc_r+0xb0>
 8009462:	605b      	str	r3, [r3, #4]
 8009464:	deff      	udf	#255	; 0xff
 8009466:	bf00      	nop
 8009468:	20004f74 	.word	0x20004f74

0800946c <__malloc_lock>:
 800946c:	4801      	ldr	r0, [pc, #4]	; (8009474 <__malloc_lock+0x8>)
 800946e:	f7ff b87e 	b.w	800856e <__retarget_lock_acquire_recursive>
 8009472:	bf00      	nop
 8009474:	20004f70 	.word	0x20004f70

08009478 <__malloc_unlock>:
 8009478:	4801      	ldr	r0, [pc, #4]	; (8009480 <__malloc_unlock+0x8>)
 800947a:	f7ff b879 	b.w	8008570 <__retarget_lock_release_recursive>
 800947e:	bf00      	nop
 8009480:	20004f70 	.word	0x20004f70

08009484 <_Balloc>:
 8009484:	b570      	push	{r4, r5, r6, lr}
 8009486:	69c6      	ldr	r6, [r0, #28]
 8009488:	4604      	mov	r4, r0
 800948a:	460d      	mov	r5, r1
 800948c:	b976      	cbnz	r6, 80094ac <_Balloc+0x28>
 800948e:	2010      	movs	r0, #16
 8009490:	f7ff ff44 	bl	800931c <malloc>
 8009494:	4602      	mov	r2, r0
 8009496:	61e0      	str	r0, [r4, #28]
 8009498:	b920      	cbnz	r0, 80094a4 <_Balloc+0x20>
 800949a:	4b18      	ldr	r3, [pc, #96]	; (80094fc <_Balloc+0x78>)
 800949c:	4818      	ldr	r0, [pc, #96]	; (8009500 <_Balloc+0x7c>)
 800949e:	216b      	movs	r1, #107	; 0x6b
 80094a0:	f000 fdf2 	bl	800a088 <__assert_func>
 80094a4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80094a8:	6006      	str	r6, [r0, #0]
 80094aa:	60c6      	str	r6, [r0, #12]
 80094ac:	69e6      	ldr	r6, [r4, #28]
 80094ae:	68f3      	ldr	r3, [r6, #12]
 80094b0:	b183      	cbz	r3, 80094d4 <_Balloc+0x50>
 80094b2:	69e3      	ldr	r3, [r4, #28]
 80094b4:	68db      	ldr	r3, [r3, #12]
 80094b6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80094ba:	b9b8      	cbnz	r0, 80094ec <_Balloc+0x68>
 80094bc:	2101      	movs	r1, #1
 80094be:	fa01 f605 	lsl.w	r6, r1, r5
 80094c2:	1d72      	adds	r2, r6, #5
 80094c4:	0092      	lsls	r2, r2, #2
 80094c6:	4620      	mov	r0, r4
 80094c8:	f000 fdfc 	bl	800a0c4 <_calloc_r>
 80094cc:	b160      	cbz	r0, 80094e8 <_Balloc+0x64>
 80094ce:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80094d2:	e00e      	b.n	80094f2 <_Balloc+0x6e>
 80094d4:	2221      	movs	r2, #33	; 0x21
 80094d6:	2104      	movs	r1, #4
 80094d8:	4620      	mov	r0, r4
 80094da:	f000 fdf3 	bl	800a0c4 <_calloc_r>
 80094de:	69e3      	ldr	r3, [r4, #28]
 80094e0:	60f0      	str	r0, [r6, #12]
 80094e2:	68db      	ldr	r3, [r3, #12]
 80094e4:	2b00      	cmp	r3, #0
 80094e6:	d1e4      	bne.n	80094b2 <_Balloc+0x2e>
 80094e8:	2000      	movs	r0, #0
 80094ea:	bd70      	pop	{r4, r5, r6, pc}
 80094ec:	6802      	ldr	r2, [r0, #0]
 80094ee:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80094f2:	2300      	movs	r3, #0
 80094f4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80094f8:	e7f7      	b.n	80094ea <_Balloc+0x66>
 80094fa:	bf00      	nop
 80094fc:	0800a4c9 	.word	0x0800a4c9
 8009500:	0800a549 	.word	0x0800a549

08009504 <_Bfree>:
 8009504:	b570      	push	{r4, r5, r6, lr}
 8009506:	69c6      	ldr	r6, [r0, #28]
 8009508:	4605      	mov	r5, r0
 800950a:	460c      	mov	r4, r1
 800950c:	b976      	cbnz	r6, 800952c <_Bfree+0x28>
 800950e:	2010      	movs	r0, #16
 8009510:	f7ff ff04 	bl	800931c <malloc>
 8009514:	4602      	mov	r2, r0
 8009516:	61e8      	str	r0, [r5, #28]
 8009518:	b920      	cbnz	r0, 8009524 <_Bfree+0x20>
 800951a:	4b09      	ldr	r3, [pc, #36]	; (8009540 <_Bfree+0x3c>)
 800951c:	4809      	ldr	r0, [pc, #36]	; (8009544 <_Bfree+0x40>)
 800951e:	218f      	movs	r1, #143	; 0x8f
 8009520:	f000 fdb2 	bl	800a088 <__assert_func>
 8009524:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8009528:	6006      	str	r6, [r0, #0]
 800952a:	60c6      	str	r6, [r0, #12]
 800952c:	b13c      	cbz	r4, 800953e <_Bfree+0x3a>
 800952e:	69eb      	ldr	r3, [r5, #28]
 8009530:	6862      	ldr	r2, [r4, #4]
 8009532:	68db      	ldr	r3, [r3, #12]
 8009534:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8009538:	6021      	str	r1, [r4, #0]
 800953a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800953e:	bd70      	pop	{r4, r5, r6, pc}
 8009540:	0800a4c9 	.word	0x0800a4c9
 8009544:	0800a549 	.word	0x0800a549

08009548 <__multadd>:
 8009548:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800954c:	690d      	ldr	r5, [r1, #16]
 800954e:	4607      	mov	r7, r0
 8009550:	460c      	mov	r4, r1
 8009552:	461e      	mov	r6, r3
 8009554:	f101 0c14 	add.w	ip, r1, #20
 8009558:	2000      	movs	r0, #0
 800955a:	f8dc 3000 	ldr.w	r3, [ip]
 800955e:	b299      	uxth	r1, r3
 8009560:	fb02 6101 	mla	r1, r2, r1, r6
 8009564:	0c1e      	lsrs	r6, r3, #16
 8009566:	0c0b      	lsrs	r3, r1, #16
 8009568:	fb02 3306 	mla	r3, r2, r6, r3
 800956c:	b289      	uxth	r1, r1
 800956e:	3001      	adds	r0, #1
 8009570:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8009574:	4285      	cmp	r5, r0
 8009576:	f84c 1b04 	str.w	r1, [ip], #4
 800957a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800957e:	dcec      	bgt.n	800955a <__multadd+0x12>
 8009580:	b30e      	cbz	r6, 80095c6 <__multadd+0x7e>
 8009582:	68a3      	ldr	r3, [r4, #8]
 8009584:	42ab      	cmp	r3, r5
 8009586:	dc19      	bgt.n	80095bc <__multadd+0x74>
 8009588:	6861      	ldr	r1, [r4, #4]
 800958a:	4638      	mov	r0, r7
 800958c:	3101      	adds	r1, #1
 800958e:	f7ff ff79 	bl	8009484 <_Balloc>
 8009592:	4680      	mov	r8, r0
 8009594:	b928      	cbnz	r0, 80095a2 <__multadd+0x5a>
 8009596:	4602      	mov	r2, r0
 8009598:	4b0c      	ldr	r3, [pc, #48]	; (80095cc <__multadd+0x84>)
 800959a:	480d      	ldr	r0, [pc, #52]	; (80095d0 <__multadd+0x88>)
 800959c:	21ba      	movs	r1, #186	; 0xba
 800959e:	f000 fd73 	bl	800a088 <__assert_func>
 80095a2:	6922      	ldr	r2, [r4, #16]
 80095a4:	3202      	adds	r2, #2
 80095a6:	f104 010c 	add.w	r1, r4, #12
 80095aa:	0092      	lsls	r2, r2, #2
 80095ac:	300c      	adds	r0, #12
 80095ae:	f7fe ffe0 	bl	8008572 <memcpy>
 80095b2:	4621      	mov	r1, r4
 80095b4:	4638      	mov	r0, r7
 80095b6:	f7ff ffa5 	bl	8009504 <_Bfree>
 80095ba:	4644      	mov	r4, r8
 80095bc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80095c0:	3501      	adds	r5, #1
 80095c2:	615e      	str	r6, [r3, #20]
 80095c4:	6125      	str	r5, [r4, #16]
 80095c6:	4620      	mov	r0, r4
 80095c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80095cc:	0800a538 	.word	0x0800a538
 80095d0:	0800a549 	.word	0x0800a549

080095d4 <__hi0bits>:
 80095d4:	0c03      	lsrs	r3, r0, #16
 80095d6:	041b      	lsls	r3, r3, #16
 80095d8:	b9d3      	cbnz	r3, 8009610 <__hi0bits+0x3c>
 80095da:	0400      	lsls	r0, r0, #16
 80095dc:	2310      	movs	r3, #16
 80095de:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 80095e2:	bf04      	itt	eq
 80095e4:	0200      	lsleq	r0, r0, #8
 80095e6:	3308      	addeq	r3, #8
 80095e8:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 80095ec:	bf04      	itt	eq
 80095ee:	0100      	lsleq	r0, r0, #4
 80095f0:	3304      	addeq	r3, #4
 80095f2:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 80095f6:	bf04      	itt	eq
 80095f8:	0080      	lsleq	r0, r0, #2
 80095fa:	3302      	addeq	r3, #2
 80095fc:	2800      	cmp	r0, #0
 80095fe:	db05      	blt.n	800960c <__hi0bits+0x38>
 8009600:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8009604:	f103 0301 	add.w	r3, r3, #1
 8009608:	bf08      	it	eq
 800960a:	2320      	moveq	r3, #32
 800960c:	4618      	mov	r0, r3
 800960e:	4770      	bx	lr
 8009610:	2300      	movs	r3, #0
 8009612:	e7e4      	b.n	80095de <__hi0bits+0xa>

08009614 <__lo0bits>:
 8009614:	6803      	ldr	r3, [r0, #0]
 8009616:	f013 0207 	ands.w	r2, r3, #7
 800961a:	d00c      	beq.n	8009636 <__lo0bits+0x22>
 800961c:	07d9      	lsls	r1, r3, #31
 800961e:	d422      	bmi.n	8009666 <__lo0bits+0x52>
 8009620:	079a      	lsls	r2, r3, #30
 8009622:	bf49      	itett	mi
 8009624:	085b      	lsrmi	r3, r3, #1
 8009626:	089b      	lsrpl	r3, r3, #2
 8009628:	6003      	strmi	r3, [r0, #0]
 800962a:	2201      	movmi	r2, #1
 800962c:	bf5c      	itt	pl
 800962e:	6003      	strpl	r3, [r0, #0]
 8009630:	2202      	movpl	r2, #2
 8009632:	4610      	mov	r0, r2
 8009634:	4770      	bx	lr
 8009636:	b299      	uxth	r1, r3
 8009638:	b909      	cbnz	r1, 800963e <__lo0bits+0x2a>
 800963a:	0c1b      	lsrs	r3, r3, #16
 800963c:	2210      	movs	r2, #16
 800963e:	b2d9      	uxtb	r1, r3
 8009640:	b909      	cbnz	r1, 8009646 <__lo0bits+0x32>
 8009642:	3208      	adds	r2, #8
 8009644:	0a1b      	lsrs	r3, r3, #8
 8009646:	0719      	lsls	r1, r3, #28
 8009648:	bf04      	itt	eq
 800964a:	091b      	lsreq	r3, r3, #4
 800964c:	3204      	addeq	r2, #4
 800964e:	0799      	lsls	r1, r3, #30
 8009650:	bf04      	itt	eq
 8009652:	089b      	lsreq	r3, r3, #2
 8009654:	3202      	addeq	r2, #2
 8009656:	07d9      	lsls	r1, r3, #31
 8009658:	d403      	bmi.n	8009662 <__lo0bits+0x4e>
 800965a:	085b      	lsrs	r3, r3, #1
 800965c:	f102 0201 	add.w	r2, r2, #1
 8009660:	d003      	beq.n	800966a <__lo0bits+0x56>
 8009662:	6003      	str	r3, [r0, #0]
 8009664:	e7e5      	b.n	8009632 <__lo0bits+0x1e>
 8009666:	2200      	movs	r2, #0
 8009668:	e7e3      	b.n	8009632 <__lo0bits+0x1e>
 800966a:	2220      	movs	r2, #32
 800966c:	e7e1      	b.n	8009632 <__lo0bits+0x1e>
	...

08009670 <__i2b>:
 8009670:	b510      	push	{r4, lr}
 8009672:	460c      	mov	r4, r1
 8009674:	2101      	movs	r1, #1
 8009676:	f7ff ff05 	bl	8009484 <_Balloc>
 800967a:	4602      	mov	r2, r0
 800967c:	b928      	cbnz	r0, 800968a <__i2b+0x1a>
 800967e:	4b05      	ldr	r3, [pc, #20]	; (8009694 <__i2b+0x24>)
 8009680:	4805      	ldr	r0, [pc, #20]	; (8009698 <__i2b+0x28>)
 8009682:	f240 1145 	movw	r1, #325	; 0x145
 8009686:	f000 fcff 	bl	800a088 <__assert_func>
 800968a:	2301      	movs	r3, #1
 800968c:	6144      	str	r4, [r0, #20]
 800968e:	6103      	str	r3, [r0, #16]
 8009690:	bd10      	pop	{r4, pc}
 8009692:	bf00      	nop
 8009694:	0800a538 	.word	0x0800a538
 8009698:	0800a549 	.word	0x0800a549

0800969c <__multiply>:
 800969c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80096a0:	4691      	mov	r9, r2
 80096a2:	690a      	ldr	r2, [r1, #16]
 80096a4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80096a8:	429a      	cmp	r2, r3
 80096aa:	bfb8      	it	lt
 80096ac:	460b      	movlt	r3, r1
 80096ae:	460c      	mov	r4, r1
 80096b0:	bfbc      	itt	lt
 80096b2:	464c      	movlt	r4, r9
 80096b4:	4699      	movlt	r9, r3
 80096b6:	6927      	ldr	r7, [r4, #16]
 80096b8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80096bc:	68a3      	ldr	r3, [r4, #8]
 80096be:	6861      	ldr	r1, [r4, #4]
 80096c0:	eb07 060a 	add.w	r6, r7, sl
 80096c4:	42b3      	cmp	r3, r6
 80096c6:	b085      	sub	sp, #20
 80096c8:	bfb8      	it	lt
 80096ca:	3101      	addlt	r1, #1
 80096cc:	f7ff feda 	bl	8009484 <_Balloc>
 80096d0:	b930      	cbnz	r0, 80096e0 <__multiply+0x44>
 80096d2:	4602      	mov	r2, r0
 80096d4:	4b44      	ldr	r3, [pc, #272]	; (80097e8 <__multiply+0x14c>)
 80096d6:	4845      	ldr	r0, [pc, #276]	; (80097ec <__multiply+0x150>)
 80096d8:	f44f 71b1 	mov.w	r1, #354	; 0x162
 80096dc:	f000 fcd4 	bl	800a088 <__assert_func>
 80096e0:	f100 0514 	add.w	r5, r0, #20
 80096e4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80096e8:	462b      	mov	r3, r5
 80096ea:	2200      	movs	r2, #0
 80096ec:	4543      	cmp	r3, r8
 80096ee:	d321      	bcc.n	8009734 <__multiply+0x98>
 80096f0:	f104 0314 	add.w	r3, r4, #20
 80096f4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80096f8:	f109 0314 	add.w	r3, r9, #20
 80096fc:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8009700:	9202      	str	r2, [sp, #8]
 8009702:	1b3a      	subs	r2, r7, r4
 8009704:	3a15      	subs	r2, #21
 8009706:	f022 0203 	bic.w	r2, r2, #3
 800970a:	3204      	adds	r2, #4
 800970c:	f104 0115 	add.w	r1, r4, #21
 8009710:	428f      	cmp	r7, r1
 8009712:	bf38      	it	cc
 8009714:	2204      	movcc	r2, #4
 8009716:	9201      	str	r2, [sp, #4]
 8009718:	9a02      	ldr	r2, [sp, #8]
 800971a:	9303      	str	r3, [sp, #12]
 800971c:	429a      	cmp	r2, r3
 800971e:	d80c      	bhi.n	800973a <__multiply+0x9e>
 8009720:	2e00      	cmp	r6, #0
 8009722:	dd03      	ble.n	800972c <__multiply+0x90>
 8009724:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8009728:	2b00      	cmp	r3, #0
 800972a:	d05b      	beq.n	80097e4 <__multiply+0x148>
 800972c:	6106      	str	r6, [r0, #16]
 800972e:	b005      	add	sp, #20
 8009730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009734:	f843 2b04 	str.w	r2, [r3], #4
 8009738:	e7d8      	b.n	80096ec <__multiply+0x50>
 800973a:	f8b3 a000 	ldrh.w	sl, [r3]
 800973e:	f1ba 0f00 	cmp.w	sl, #0
 8009742:	d024      	beq.n	800978e <__multiply+0xf2>
 8009744:	f104 0e14 	add.w	lr, r4, #20
 8009748:	46a9      	mov	r9, r5
 800974a:	f04f 0c00 	mov.w	ip, #0
 800974e:	f85e 2b04 	ldr.w	r2, [lr], #4
 8009752:	f8d9 1000 	ldr.w	r1, [r9]
 8009756:	fa1f fb82 	uxth.w	fp, r2
 800975a:	b289      	uxth	r1, r1
 800975c:	fb0a 110b 	mla	r1, sl, fp, r1
 8009760:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8009764:	f8d9 2000 	ldr.w	r2, [r9]
 8009768:	4461      	add	r1, ip
 800976a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800976e:	fb0a c20b 	mla	r2, sl, fp, ip
 8009772:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8009776:	b289      	uxth	r1, r1
 8009778:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800977c:	4577      	cmp	r7, lr
 800977e:	f849 1b04 	str.w	r1, [r9], #4
 8009782:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8009786:	d8e2      	bhi.n	800974e <__multiply+0xb2>
 8009788:	9a01      	ldr	r2, [sp, #4]
 800978a:	f845 c002 	str.w	ip, [r5, r2]
 800978e:	9a03      	ldr	r2, [sp, #12]
 8009790:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8009794:	3304      	adds	r3, #4
 8009796:	f1b9 0f00 	cmp.w	r9, #0
 800979a:	d021      	beq.n	80097e0 <__multiply+0x144>
 800979c:	6829      	ldr	r1, [r5, #0]
 800979e:	f104 0c14 	add.w	ip, r4, #20
 80097a2:	46ae      	mov	lr, r5
 80097a4:	f04f 0a00 	mov.w	sl, #0
 80097a8:	f8bc b000 	ldrh.w	fp, [ip]
 80097ac:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80097b0:	fb09 220b 	mla	r2, r9, fp, r2
 80097b4:	4452      	add	r2, sl
 80097b6:	b289      	uxth	r1, r1
 80097b8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80097bc:	f84e 1b04 	str.w	r1, [lr], #4
 80097c0:	f85c 1b04 	ldr.w	r1, [ip], #4
 80097c4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80097c8:	f8be 1000 	ldrh.w	r1, [lr]
 80097cc:	fb09 110a 	mla	r1, r9, sl, r1
 80097d0:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 80097d4:	4567      	cmp	r7, ip
 80097d6:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80097da:	d8e5      	bhi.n	80097a8 <__multiply+0x10c>
 80097dc:	9a01      	ldr	r2, [sp, #4]
 80097de:	50a9      	str	r1, [r5, r2]
 80097e0:	3504      	adds	r5, #4
 80097e2:	e799      	b.n	8009718 <__multiply+0x7c>
 80097e4:	3e01      	subs	r6, #1
 80097e6:	e79b      	b.n	8009720 <__multiply+0x84>
 80097e8:	0800a538 	.word	0x0800a538
 80097ec:	0800a549 	.word	0x0800a549

080097f0 <__pow5mult>:
 80097f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80097f4:	4615      	mov	r5, r2
 80097f6:	f012 0203 	ands.w	r2, r2, #3
 80097fa:	4606      	mov	r6, r0
 80097fc:	460f      	mov	r7, r1
 80097fe:	d007      	beq.n	8009810 <__pow5mult+0x20>
 8009800:	4c25      	ldr	r4, [pc, #148]	; (8009898 <__pow5mult+0xa8>)
 8009802:	3a01      	subs	r2, #1
 8009804:	2300      	movs	r3, #0
 8009806:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800980a:	f7ff fe9d 	bl	8009548 <__multadd>
 800980e:	4607      	mov	r7, r0
 8009810:	10ad      	asrs	r5, r5, #2
 8009812:	d03d      	beq.n	8009890 <__pow5mult+0xa0>
 8009814:	69f4      	ldr	r4, [r6, #28]
 8009816:	b97c      	cbnz	r4, 8009838 <__pow5mult+0x48>
 8009818:	2010      	movs	r0, #16
 800981a:	f7ff fd7f 	bl	800931c <malloc>
 800981e:	4602      	mov	r2, r0
 8009820:	61f0      	str	r0, [r6, #28]
 8009822:	b928      	cbnz	r0, 8009830 <__pow5mult+0x40>
 8009824:	4b1d      	ldr	r3, [pc, #116]	; (800989c <__pow5mult+0xac>)
 8009826:	481e      	ldr	r0, [pc, #120]	; (80098a0 <__pow5mult+0xb0>)
 8009828:	f240 11b3 	movw	r1, #435	; 0x1b3
 800982c:	f000 fc2c 	bl	800a088 <__assert_func>
 8009830:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8009834:	6004      	str	r4, [r0, #0]
 8009836:	60c4      	str	r4, [r0, #12]
 8009838:	f8d6 801c 	ldr.w	r8, [r6, #28]
 800983c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8009840:	b94c      	cbnz	r4, 8009856 <__pow5mult+0x66>
 8009842:	f240 2171 	movw	r1, #625	; 0x271
 8009846:	4630      	mov	r0, r6
 8009848:	f7ff ff12 	bl	8009670 <__i2b>
 800984c:	2300      	movs	r3, #0
 800984e:	f8c8 0008 	str.w	r0, [r8, #8]
 8009852:	4604      	mov	r4, r0
 8009854:	6003      	str	r3, [r0, #0]
 8009856:	f04f 0900 	mov.w	r9, #0
 800985a:	07eb      	lsls	r3, r5, #31
 800985c:	d50a      	bpl.n	8009874 <__pow5mult+0x84>
 800985e:	4639      	mov	r1, r7
 8009860:	4622      	mov	r2, r4
 8009862:	4630      	mov	r0, r6
 8009864:	f7ff ff1a 	bl	800969c <__multiply>
 8009868:	4639      	mov	r1, r7
 800986a:	4680      	mov	r8, r0
 800986c:	4630      	mov	r0, r6
 800986e:	f7ff fe49 	bl	8009504 <_Bfree>
 8009872:	4647      	mov	r7, r8
 8009874:	106d      	asrs	r5, r5, #1
 8009876:	d00b      	beq.n	8009890 <__pow5mult+0xa0>
 8009878:	6820      	ldr	r0, [r4, #0]
 800987a:	b938      	cbnz	r0, 800988c <__pow5mult+0x9c>
 800987c:	4622      	mov	r2, r4
 800987e:	4621      	mov	r1, r4
 8009880:	4630      	mov	r0, r6
 8009882:	f7ff ff0b 	bl	800969c <__multiply>
 8009886:	6020      	str	r0, [r4, #0]
 8009888:	f8c0 9000 	str.w	r9, [r0]
 800988c:	4604      	mov	r4, r0
 800988e:	e7e4      	b.n	800985a <__pow5mult+0x6a>
 8009890:	4638      	mov	r0, r7
 8009892:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009896:	bf00      	nop
 8009898:	0800a698 	.word	0x0800a698
 800989c:	0800a4c9 	.word	0x0800a4c9
 80098a0:	0800a549 	.word	0x0800a549

080098a4 <__lshift>:
 80098a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80098a8:	460c      	mov	r4, r1
 80098aa:	6849      	ldr	r1, [r1, #4]
 80098ac:	6923      	ldr	r3, [r4, #16]
 80098ae:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80098b2:	68a3      	ldr	r3, [r4, #8]
 80098b4:	4607      	mov	r7, r0
 80098b6:	4691      	mov	r9, r2
 80098b8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80098bc:	f108 0601 	add.w	r6, r8, #1
 80098c0:	42b3      	cmp	r3, r6
 80098c2:	db0b      	blt.n	80098dc <__lshift+0x38>
 80098c4:	4638      	mov	r0, r7
 80098c6:	f7ff fddd 	bl	8009484 <_Balloc>
 80098ca:	4605      	mov	r5, r0
 80098cc:	b948      	cbnz	r0, 80098e2 <__lshift+0x3e>
 80098ce:	4602      	mov	r2, r0
 80098d0:	4b28      	ldr	r3, [pc, #160]	; (8009974 <__lshift+0xd0>)
 80098d2:	4829      	ldr	r0, [pc, #164]	; (8009978 <__lshift+0xd4>)
 80098d4:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 80098d8:	f000 fbd6 	bl	800a088 <__assert_func>
 80098dc:	3101      	adds	r1, #1
 80098de:	005b      	lsls	r3, r3, #1
 80098e0:	e7ee      	b.n	80098c0 <__lshift+0x1c>
 80098e2:	2300      	movs	r3, #0
 80098e4:	f100 0114 	add.w	r1, r0, #20
 80098e8:	f100 0210 	add.w	r2, r0, #16
 80098ec:	4618      	mov	r0, r3
 80098ee:	4553      	cmp	r3, sl
 80098f0:	db33      	blt.n	800995a <__lshift+0xb6>
 80098f2:	6920      	ldr	r0, [r4, #16]
 80098f4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80098f8:	f104 0314 	add.w	r3, r4, #20
 80098fc:	f019 091f 	ands.w	r9, r9, #31
 8009900:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8009904:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8009908:	d02b      	beq.n	8009962 <__lshift+0xbe>
 800990a:	f1c9 0e20 	rsb	lr, r9, #32
 800990e:	468a      	mov	sl, r1
 8009910:	2200      	movs	r2, #0
 8009912:	6818      	ldr	r0, [r3, #0]
 8009914:	fa00 f009 	lsl.w	r0, r0, r9
 8009918:	4310      	orrs	r0, r2
 800991a:	f84a 0b04 	str.w	r0, [sl], #4
 800991e:	f853 2b04 	ldr.w	r2, [r3], #4
 8009922:	459c      	cmp	ip, r3
 8009924:	fa22 f20e 	lsr.w	r2, r2, lr
 8009928:	d8f3      	bhi.n	8009912 <__lshift+0x6e>
 800992a:	ebac 0304 	sub.w	r3, ip, r4
 800992e:	3b15      	subs	r3, #21
 8009930:	f023 0303 	bic.w	r3, r3, #3
 8009934:	3304      	adds	r3, #4
 8009936:	f104 0015 	add.w	r0, r4, #21
 800993a:	4584      	cmp	ip, r0
 800993c:	bf38      	it	cc
 800993e:	2304      	movcc	r3, #4
 8009940:	50ca      	str	r2, [r1, r3]
 8009942:	b10a      	cbz	r2, 8009948 <__lshift+0xa4>
 8009944:	f108 0602 	add.w	r6, r8, #2
 8009948:	3e01      	subs	r6, #1
 800994a:	4638      	mov	r0, r7
 800994c:	612e      	str	r6, [r5, #16]
 800994e:	4621      	mov	r1, r4
 8009950:	f7ff fdd8 	bl	8009504 <_Bfree>
 8009954:	4628      	mov	r0, r5
 8009956:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800995a:	f842 0f04 	str.w	r0, [r2, #4]!
 800995e:	3301      	adds	r3, #1
 8009960:	e7c5      	b.n	80098ee <__lshift+0x4a>
 8009962:	3904      	subs	r1, #4
 8009964:	f853 2b04 	ldr.w	r2, [r3], #4
 8009968:	f841 2f04 	str.w	r2, [r1, #4]!
 800996c:	459c      	cmp	ip, r3
 800996e:	d8f9      	bhi.n	8009964 <__lshift+0xc0>
 8009970:	e7ea      	b.n	8009948 <__lshift+0xa4>
 8009972:	bf00      	nop
 8009974:	0800a538 	.word	0x0800a538
 8009978:	0800a549 	.word	0x0800a549

0800997c <__mcmp>:
 800997c:	b530      	push	{r4, r5, lr}
 800997e:	6902      	ldr	r2, [r0, #16]
 8009980:	690c      	ldr	r4, [r1, #16]
 8009982:	1b12      	subs	r2, r2, r4
 8009984:	d10e      	bne.n	80099a4 <__mcmp+0x28>
 8009986:	f100 0314 	add.w	r3, r0, #20
 800998a:	3114      	adds	r1, #20
 800998c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8009990:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8009994:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8009998:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800999c:	42a5      	cmp	r5, r4
 800999e:	d003      	beq.n	80099a8 <__mcmp+0x2c>
 80099a0:	d305      	bcc.n	80099ae <__mcmp+0x32>
 80099a2:	2201      	movs	r2, #1
 80099a4:	4610      	mov	r0, r2
 80099a6:	bd30      	pop	{r4, r5, pc}
 80099a8:	4283      	cmp	r3, r0
 80099aa:	d3f3      	bcc.n	8009994 <__mcmp+0x18>
 80099ac:	e7fa      	b.n	80099a4 <__mcmp+0x28>
 80099ae:	f04f 32ff 	mov.w	r2, #4294967295
 80099b2:	e7f7      	b.n	80099a4 <__mcmp+0x28>

080099b4 <__mdiff>:
 80099b4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80099b8:	460c      	mov	r4, r1
 80099ba:	4606      	mov	r6, r0
 80099bc:	4611      	mov	r1, r2
 80099be:	4620      	mov	r0, r4
 80099c0:	4690      	mov	r8, r2
 80099c2:	f7ff ffdb 	bl	800997c <__mcmp>
 80099c6:	1e05      	subs	r5, r0, #0
 80099c8:	d110      	bne.n	80099ec <__mdiff+0x38>
 80099ca:	4629      	mov	r1, r5
 80099cc:	4630      	mov	r0, r6
 80099ce:	f7ff fd59 	bl	8009484 <_Balloc>
 80099d2:	b930      	cbnz	r0, 80099e2 <__mdiff+0x2e>
 80099d4:	4b3a      	ldr	r3, [pc, #232]	; (8009ac0 <__mdiff+0x10c>)
 80099d6:	4602      	mov	r2, r0
 80099d8:	f240 2137 	movw	r1, #567	; 0x237
 80099dc:	4839      	ldr	r0, [pc, #228]	; (8009ac4 <__mdiff+0x110>)
 80099de:	f000 fb53 	bl	800a088 <__assert_func>
 80099e2:	2301      	movs	r3, #1
 80099e4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80099e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80099ec:	bfa4      	itt	ge
 80099ee:	4643      	movge	r3, r8
 80099f0:	46a0      	movge	r8, r4
 80099f2:	4630      	mov	r0, r6
 80099f4:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80099f8:	bfa6      	itte	ge
 80099fa:	461c      	movge	r4, r3
 80099fc:	2500      	movge	r5, #0
 80099fe:	2501      	movlt	r5, #1
 8009a00:	f7ff fd40 	bl	8009484 <_Balloc>
 8009a04:	b920      	cbnz	r0, 8009a10 <__mdiff+0x5c>
 8009a06:	4b2e      	ldr	r3, [pc, #184]	; (8009ac0 <__mdiff+0x10c>)
 8009a08:	4602      	mov	r2, r0
 8009a0a:	f240 2145 	movw	r1, #581	; 0x245
 8009a0e:	e7e5      	b.n	80099dc <__mdiff+0x28>
 8009a10:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8009a14:	6926      	ldr	r6, [r4, #16]
 8009a16:	60c5      	str	r5, [r0, #12]
 8009a18:	f104 0914 	add.w	r9, r4, #20
 8009a1c:	f108 0514 	add.w	r5, r8, #20
 8009a20:	f100 0e14 	add.w	lr, r0, #20
 8009a24:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8009a28:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8009a2c:	f108 0210 	add.w	r2, r8, #16
 8009a30:	46f2      	mov	sl, lr
 8009a32:	2100      	movs	r1, #0
 8009a34:	f859 3b04 	ldr.w	r3, [r9], #4
 8009a38:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8009a3c:	fa11 f88b 	uxtah	r8, r1, fp
 8009a40:	b299      	uxth	r1, r3
 8009a42:	0c1b      	lsrs	r3, r3, #16
 8009a44:	eba8 0801 	sub.w	r8, r8, r1
 8009a48:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8009a4c:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8009a50:	fa1f f888 	uxth.w	r8, r8
 8009a54:	1419      	asrs	r1, r3, #16
 8009a56:	454e      	cmp	r6, r9
 8009a58:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8009a5c:	f84a 3b04 	str.w	r3, [sl], #4
 8009a60:	d8e8      	bhi.n	8009a34 <__mdiff+0x80>
 8009a62:	1b33      	subs	r3, r6, r4
 8009a64:	3b15      	subs	r3, #21
 8009a66:	f023 0303 	bic.w	r3, r3, #3
 8009a6a:	3304      	adds	r3, #4
 8009a6c:	3415      	adds	r4, #21
 8009a6e:	42a6      	cmp	r6, r4
 8009a70:	bf38      	it	cc
 8009a72:	2304      	movcc	r3, #4
 8009a74:	441d      	add	r5, r3
 8009a76:	4473      	add	r3, lr
 8009a78:	469e      	mov	lr, r3
 8009a7a:	462e      	mov	r6, r5
 8009a7c:	4566      	cmp	r6, ip
 8009a7e:	d30e      	bcc.n	8009a9e <__mdiff+0xea>
 8009a80:	f10c 0203 	add.w	r2, ip, #3
 8009a84:	1b52      	subs	r2, r2, r5
 8009a86:	f022 0203 	bic.w	r2, r2, #3
 8009a8a:	3d03      	subs	r5, #3
 8009a8c:	45ac      	cmp	ip, r5
 8009a8e:	bf38      	it	cc
 8009a90:	2200      	movcc	r2, #0
 8009a92:	4413      	add	r3, r2
 8009a94:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8009a98:	b17a      	cbz	r2, 8009aba <__mdiff+0x106>
 8009a9a:	6107      	str	r7, [r0, #16]
 8009a9c:	e7a4      	b.n	80099e8 <__mdiff+0x34>
 8009a9e:	f856 8b04 	ldr.w	r8, [r6], #4
 8009aa2:	fa11 f288 	uxtah	r2, r1, r8
 8009aa6:	1414      	asrs	r4, r2, #16
 8009aa8:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8009aac:	b292      	uxth	r2, r2
 8009aae:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8009ab2:	f84e 2b04 	str.w	r2, [lr], #4
 8009ab6:	1421      	asrs	r1, r4, #16
 8009ab8:	e7e0      	b.n	8009a7c <__mdiff+0xc8>
 8009aba:	3f01      	subs	r7, #1
 8009abc:	e7ea      	b.n	8009a94 <__mdiff+0xe0>
 8009abe:	bf00      	nop
 8009ac0:	0800a538 	.word	0x0800a538
 8009ac4:	0800a549 	.word	0x0800a549

08009ac8 <__d2b>:
 8009ac8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009acc:	460f      	mov	r7, r1
 8009ace:	2101      	movs	r1, #1
 8009ad0:	ec59 8b10 	vmov	r8, r9, d0
 8009ad4:	4616      	mov	r6, r2
 8009ad6:	f7ff fcd5 	bl	8009484 <_Balloc>
 8009ada:	4604      	mov	r4, r0
 8009adc:	b930      	cbnz	r0, 8009aec <__d2b+0x24>
 8009ade:	4602      	mov	r2, r0
 8009ae0:	4b24      	ldr	r3, [pc, #144]	; (8009b74 <__d2b+0xac>)
 8009ae2:	4825      	ldr	r0, [pc, #148]	; (8009b78 <__d2b+0xb0>)
 8009ae4:	f240 310f 	movw	r1, #783	; 0x30f
 8009ae8:	f000 face 	bl	800a088 <__assert_func>
 8009aec:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8009af0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8009af4:	bb2d      	cbnz	r5, 8009b42 <__d2b+0x7a>
 8009af6:	9301      	str	r3, [sp, #4]
 8009af8:	f1b8 0300 	subs.w	r3, r8, #0
 8009afc:	d026      	beq.n	8009b4c <__d2b+0x84>
 8009afe:	4668      	mov	r0, sp
 8009b00:	9300      	str	r3, [sp, #0]
 8009b02:	f7ff fd87 	bl	8009614 <__lo0bits>
 8009b06:	e9dd 1200 	ldrd	r1, r2, [sp]
 8009b0a:	b1e8      	cbz	r0, 8009b48 <__d2b+0x80>
 8009b0c:	f1c0 0320 	rsb	r3, r0, #32
 8009b10:	fa02 f303 	lsl.w	r3, r2, r3
 8009b14:	430b      	orrs	r3, r1
 8009b16:	40c2      	lsrs	r2, r0
 8009b18:	6163      	str	r3, [r4, #20]
 8009b1a:	9201      	str	r2, [sp, #4]
 8009b1c:	9b01      	ldr	r3, [sp, #4]
 8009b1e:	61a3      	str	r3, [r4, #24]
 8009b20:	2b00      	cmp	r3, #0
 8009b22:	bf14      	ite	ne
 8009b24:	2202      	movne	r2, #2
 8009b26:	2201      	moveq	r2, #1
 8009b28:	6122      	str	r2, [r4, #16]
 8009b2a:	b1bd      	cbz	r5, 8009b5c <__d2b+0x94>
 8009b2c:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8009b30:	4405      	add	r5, r0
 8009b32:	603d      	str	r5, [r7, #0]
 8009b34:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8009b38:	6030      	str	r0, [r6, #0]
 8009b3a:	4620      	mov	r0, r4
 8009b3c:	b003      	add	sp, #12
 8009b3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009b42:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8009b46:	e7d6      	b.n	8009af6 <__d2b+0x2e>
 8009b48:	6161      	str	r1, [r4, #20]
 8009b4a:	e7e7      	b.n	8009b1c <__d2b+0x54>
 8009b4c:	a801      	add	r0, sp, #4
 8009b4e:	f7ff fd61 	bl	8009614 <__lo0bits>
 8009b52:	9b01      	ldr	r3, [sp, #4]
 8009b54:	6163      	str	r3, [r4, #20]
 8009b56:	3020      	adds	r0, #32
 8009b58:	2201      	movs	r2, #1
 8009b5a:	e7e5      	b.n	8009b28 <__d2b+0x60>
 8009b5c:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8009b60:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8009b64:	6038      	str	r0, [r7, #0]
 8009b66:	6918      	ldr	r0, [r3, #16]
 8009b68:	f7ff fd34 	bl	80095d4 <__hi0bits>
 8009b6c:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8009b70:	e7e2      	b.n	8009b38 <__d2b+0x70>
 8009b72:	bf00      	nop
 8009b74:	0800a538 	.word	0x0800a538
 8009b78:	0800a549 	.word	0x0800a549

08009b7c <__sfputc_r>:
 8009b7c:	6893      	ldr	r3, [r2, #8]
 8009b7e:	3b01      	subs	r3, #1
 8009b80:	2b00      	cmp	r3, #0
 8009b82:	b410      	push	{r4}
 8009b84:	6093      	str	r3, [r2, #8]
 8009b86:	da08      	bge.n	8009b9a <__sfputc_r+0x1e>
 8009b88:	6994      	ldr	r4, [r2, #24]
 8009b8a:	42a3      	cmp	r3, r4
 8009b8c:	db01      	blt.n	8009b92 <__sfputc_r+0x16>
 8009b8e:	290a      	cmp	r1, #10
 8009b90:	d103      	bne.n	8009b9a <__sfputc_r+0x1e>
 8009b92:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009b96:	f7fe bb82 	b.w	800829e <__swbuf_r>
 8009b9a:	6813      	ldr	r3, [r2, #0]
 8009b9c:	1c58      	adds	r0, r3, #1
 8009b9e:	6010      	str	r0, [r2, #0]
 8009ba0:	7019      	strb	r1, [r3, #0]
 8009ba2:	4608      	mov	r0, r1
 8009ba4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009ba8:	4770      	bx	lr

08009baa <__sfputs_r>:
 8009baa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009bac:	4606      	mov	r6, r0
 8009bae:	460f      	mov	r7, r1
 8009bb0:	4614      	mov	r4, r2
 8009bb2:	18d5      	adds	r5, r2, r3
 8009bb4:	42ac      	cmp	r4, r5
 8009bb6:	d101      	bne.n	8009bbc <__sfputs_r+0x12>
 8009bb8:	2000      	movs	r0, #0
 8009bba:	e007      	b.n	8009bcc <__sfputs_r+0x22>
 8009bbc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009bc0:	463a      	mov	r2, r7
 8009bc2:	4630      	mov	r0, r6
 8009bc4:	f7ff ffda 	bl	8009b7c <__sfputc_r>
 8009bc8:	1c43      	adds	r3, r0, #1
 8009bca:	d1f3      	bne.n	8009bb4 <__sfputs_r+0xa>
 8009bcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08009bd0 <_vfiprintf_r>:
 8009bd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009bd4:	460d      	mov	r5, r1
 8009bd6:	b09d      	sub	sp, #116	; 0x74
 8009bd8:	4614      	mov	r4, r2
 8009bda:	4698      	mov	r8, r3
 8009bdc:	4606      	mov	r6, r0
 8009bde:	b118      	cbz	r0, 8009be8 <_vfiprintf_r+0x18>
 8009be0:	6a03      	ldr	r3, [r0, #32]
 8009be2:	b90b      	cbnz	r3, 8009be8 <_vfiprintf_r+0x18>
 8009be4:	f7fe fa74 	bl	80080d0 <__sinit>
 8009be8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8009bea:	07d9      	lsls	r1, r3, #31
 8009bec:	d405      	bmi.n	8009bfa <_vfiprintf_r+0x2a>
 8009bee:	89ab      	ldrh	r3, [r5, #12]
 8009bf0:	059a      	lsls	r2, r3, #22
 8009bf2:	d402      	bmi.n	8009bfa <_vfiprintf_r+0x2a>
 8009bf4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8009bf6:	f7fe fcba 	bl	800856e <__retarget_lock_acquire_recursive>
 8009bfa:	89ab      	ldrh	r3, [r5, #12]
 8009bfc:	071b      	lsls	r3, r3, #28
 8009bfe:	d501      	bpl.n	8009c04 <_vfiprintf_r+0x34>
 8009c00:	692b      	ldr	r3, [r5, #16]
 8009c02:	b99b      	cbnz	r3, 8009c2c <_vfiprintf_r+0x5c>
 8009c04:	4629      	mov	r1, r5
 8009c06:	4630      	mov	r0, r6
 8009c08:	f7fe fb86 	bl	8008318 <__swsetup_r>
 8009c0c:	b170      	cbz	r0, 8009c2c <_vfiprintf_r+0x5c>
 8009c0e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8009c10:	07dc      	lsls	r4, r3, #31
 8009c12:	d504      	bpl.n	8009c1e <_vfiprintf_r+0x4e>
 8009c14:	f04f 30ff 	mov.w	r0, #4294967295
 8009c18:	b01d      	add	sp, #116	; 0x74
 8009c1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c1e:	89ab      	ldrh	r3, [r5, #12]
 8009c20:	0598      	lsls	r0, r3, #22
 8009c22:	d4f7      	bmi.n	8009c14 <_vfiprintf_r+0x44>
 8009c24:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8009c26:	f7fe fca3 	bl	8008570 <__retarget_lock_release_recursive>
 8009c2a:	e7f3      	b.n	8009c14 <_vfiprintf_r+0x44>
 8009c2c:	2300      	movs	r3, #0
 8009c2e:	9309      	str	r3, [sp, #36]	; 0x24
 8009c30:	2320      	movs	r3, #32
 8009c32:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8009c36:	f8cd 800c 	str.w	r8, [sp, #12]
 8009c3a:	2330      	movs	r3, #48	; 0x30
 8009c3c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8009df0 <_vfiprintf_r+0x220>
 8009c40:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8009c44:	f04f 0901 	mov.w	r9, #1
 8009c48:	4623      	mov	r3, r4
 8009c4a:	469a      	mov	sl, r3
 8009c4c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009c50:	b10a      	cbz	r2, 8009c56 <_vfiprintf_r+0x86>
 8009c52:	2a25      	cmp	r2, #37	; 0x25
 8009c54:	d1f9      	bne.n	8009c4a <_vfiprintf_r+0x7a>
 8009c56:	ebba 0b04 	subs.w	fp, sl, r4
 8009c5a:	d00b      	beq.n	8009c74 <_vfiprintf_r+0xa4>
 8009c5c:	465b      	mov	r3, fp
 8009c5e:	4622      	mov	r2, r4
 8009c60:	4629      	mov	r1, r5
 8009c62:	4630      	mov	r0, r6
 8009c64:	f7ff ffa1 	bl	8009baa <__sfputs_r>
 8009c68:	3001      	adds	r0, #1
 8009c6a:	f000 80a9 	beq.w	8009dc0 <_vfiprintf_r+0x1f0>
 8009c6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009c70:	445a      	add	r2, fp
 8009c72:	9209      	str	r2, [sp, #36]	; 0x24
 8009c74:	f89a 3000 	ldrb.w	r3, [sl]
 8009c78:	2b00      	cmp	r3, #0
 8009c7a:	f000 80a1 	beq.w	8009dc0 <_vfiprintf_r+0x1f0>
 8009c7e:	2300      	movs	r3, #0
 8009c80:	f04f 32ff 	mov.w	r2, #4294967295
 8009c84:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8009c88:	f10a 0a01 	add.w	sl, sl, #1
 8009c8c:	9304      	str	r3, [sp, #16]
 8009c8e:	9307      	str	r3, [sp, #28]
 8009c90:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8009c94:	931a      	str	r3, [sp, #104]	; 0x68
 8009c96:	4654      	mov	r4, sl
 8009c98:	2205      	movs	r2, #5
 8009c9a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009c9e:	4854      	ldr	r0, [pc, #336]	; (8009df0 <_vfiprintf_r+0x220>)
 8009ca0:	f7f6 fa9e 	bl	80001e0 <memchr>
 8009ca4:	9a04      	ldr	r2, [sp, #16]
 8009ca6:	b9d8      	cbnz	r0, 8009ce0 <_vfiprintf_r+0x110>
 8009ca8:	06d1      	lsls	r1, r2, #27
 8009caa:	bf44      	itt	mi
 8009cac:	2320      	movmi	r3, #32
 8009cae:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8009cb2:	0713      	lsls	r3, r2, #28
 8009cb4:	bf44      	itt	mi
 8009cb6:	232b      	movmi	r3, #43	; 0x2b
 8009cb8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8009cbc:	f89a 3000 	ldrb.w	r3, [sl]
 8009cc0:	2b2a      	cmp	r3, #42	; 0x2a
 8009cc2:	d015      	beq.n	8009cf0 <_vfiprintf_r+0x120>
 8009cc4:	9a07      	ldr	r2, [sp, #28]
 8009cc6:	4654      	mov	r4, sl
 8009cc8:	2000      	movs	r0, #0
 8009cca:	f04f 0c0a 	mov.w	ip, #10
 8009cce:	4621      	mov	r1, r4
 8009cd0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009cd4:	3b30      	subs	r3, #48	; 0x30
 8009cd6:	2b09      	cmp	r3, #9
 8009cd8:	d94d      	bls.n	8009d76 <_vfiprintf_r+0x1a6>
 8009cda:	b1b0      	cbz	r0, 8009d0a <_vfiprintf_r+0x13a>
 8009cdc:	9207      	str	r2, [sp, #28]
 8009cde:	e014      	b.n	8009d0a <_vfiprintf_r+0x13a>
 8009ce0:	eba0 0308 	sub.w	r3, r0, r8
 8009ce4:	fa09 f303 	lsl.w	r3, r9, r3
 8009ce8:	4313      	orrs	r3, r2
 8009cea:	9304      	str	r3, [sp, #16]
 8009cec:	46a2      	mov	sl, r4
 8009cee:	e7d2      	b.n	8009c96 <_vfiprintf_r+0xc6>
 8009cf0:	9b03      	ldr	r3, [sp, #12]
 8009cf2:	1d19      	adds	r1, r3, #4
 8009cf4:	681b      	ldr	r3, [r3, #0]
 8009cf6:	9103      	str	r1, [sp, #12]
 8009cf8:	2b00      	cmp	r3, #0
 8009cfa:	bfbb      	ittet	lt
 8009cfc:	425b      	neglt	r3, r3
 8009cfe:	f042 0202 	orrlt.w	r2, r2, #2
 8009d02:	9307      	strge	r3, [sp, #28]
 8009d04:	9307      	strlt	r3, [sp, #28]
 8009d06:	bfb8      	it	lt
 8009d08:	9204      	strlt	r2, [sp, #16]
 8009d0a:	7823      	ldrb	r3, [r4, #0]
 8009d0c:	2b2e      	cmp	r3, #46	; 0x2e
 8009d0e:	d10c      	bne.n	8009d2a <_vfiprintf_r+0x15a>
 8009d10:	7863      	ldrb	r3, [r4, #1]
 8009d12:	2b2a      	cmp	r3, #42	; 0x2a
 8009d14:	d134      	bne.n	8009d80 <_vfiprintf_r+0x1b0>
 8009d16:	9b03      	ldr	r3, [sp, #12]
 8009d18:	1d1a      	adds	r2, r3, #4
 8009d1a:	681b      	ldr	r3, [r3, #0]
 8009d1c:	9203      	str	r2, [sp, #12]
 8009d1e:	2b00      	cmp	r3, #0
 8009d20:	bfb8      	it	lt
 8009d22:	f04f 33ff 	movlt.w	r3, #4294967295
 8009d26:	3402      	adds	r4, #2
 8009d28:	9305      	str	r3, [sp, #20]
 8009d2a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8009e00 <_vfiprintf_r+0x230>
 8009d2e:	7821      	ldrb	r1, [r4, #0]
 8009d30:	2203      	movs	r2, #3
 8009d32:	4650      	mov	r0, sl
 8009d34:	f7f6 fa54 	bl	80001e0 <memchr>
 8009d38:	b138      	cbz	r0, 8009d4a <_vfiprintf_r+0x17a>
 8009d3a:	9b04      	ldr	r3, [sp, #16]
 8009d3c:	eba0 000a 	sub.w	r0, r0, sl
 8009d40:	2240      	movs	r2, #64	; 0x40
 8009d42:	4082      	lsls	r2, r0
 8009d44:	4313      	orrs	r3, r2
 8009d46:	3401      	adds	r4, #1
 8009d48:	9304      	str	r3, [sp, #16]
 8009d4a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009d4e:	4829      	ldr	r0, [pc, #164]	; (8009df4 <_vfiprintf_r+0x224>)
 8009d50:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8009d54:	2206      	movs	r2, #6
 8009d56:	f7f6 fa43 	bl	80001e0 <memchr>
 8009d5a:	2800      	cmp	r0, #0
 8009d5c:	d03f      	beq.n	8009dde <_vfiprintf_r+0x20e>
 8009d5e:	4b26      	ldr	r3, [pc, #152]	; (8009df8 <_vfiprintf_r+0x228>)
 8009d60:	bb1b      	cbnz	r3, 8009daa <_vfiprintf_r+0x1da>
 8009d62:	9b03      	ldr	r3, [sp, #12]
 8009d64:	3307      	adds	r3, #7
 8009d66:	f023 0307 	bic.w	r3, r3, #7
 8009d6a:	3308      	adds	r3, #8
 8009d6c:	9303      	str	r3, [sp, #12]
 8009d6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009d70:	443b      	add	r3, r7
 8009d72:	9309      	str	r3, [sp, #36]	; 0x24
 8009d74:	e768      	b.n	8009c48 <_vfiprintf_r+0x78>
 8009d76:	fb0c 3202 	mla	r2, ip, r2, r3
 8009d7a:	460c      	mov	r4, r1
 8009d7c:	2001      	movs	r0, #1
 8009d7e:	e7a6      	b.n	8009cce <_vfiprintf_r+0xfe>
 8009d80:	2300      	movs	r3, #0
 8009d82:	3401      	adds	r4, #1
 8009d84:	9305      	str	r3, [sp, #20]
 8009d86:	4619      	mov	r1, r3
 8009d88:	f04f 0c0a 	mov.w	ip, #10
 8009d8c:	4620      	mov	r0, r4
 8009d8e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8009d92:	3a30      	subs	r2, #48	; 0x30
 8009d94:	2a09      	cmp	r2, #9
 8009d96:	d903      	bls.n	8009da0 <_vfiprintf_r+0x1d0>
 8009d98:	2b00      	cmp	r3, #0
 8009d9a:	d0c6      	beq.n	8009d2a <_vfiprintf_r+0x15a>
 8009d9c:	9105      	str	r1, [sp, #20]
 8009d9e:	e7c4      	b.n	8009d2a <_vfiprintf_r+0x15a>
 8009da0:	fb0c 2101 	mla	r1, ip, r1, r2
 8009da4:	4604      	mov	r4, r0
 8009da6:	2301      	movs	r3, #1
 8009da8:	e7f0      	b.n	8009d8c <_vfiprintf_r+0x1bc>
 8009daa:	ab03      	add	r3, sp, #12
 8009dac:	9300      	str	r3, [sp, #0]
 8009dae:	462a      	mov	r2, r5
 8009db0:	4b12      	ldr	r3, [pc, #72]	; (8009dfc <_vfiprintf_r+0x22c>)
 8009db2:	a904      	add	r1, sp, #16
 8009db4:	4630      	mov	r0, r6
 8009db6:	f7fd fd39 	bl	800782c <_printf_float>
 8009dba:	4607      	mov	r7, r0
 8009dbc:	1c78      	adds	r0, r7, #1
 8009dbe:	d1d6      	bne.n	8009d6e <_vfiprintf_r+0x19e>
 8009dc0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8009dc2:	07d9      	lsls	r1, r3, #31
 8009dc4:	d405      	bmi.n	8009dd2 <_vfiprintf_r+0x202>
 8009dc6:	89ab      	ldrh	r3, [r5, #12]
 8009dc8:	059a      	lsls	r2, r3, #22
 8009dca:	d402      	bmi.n	8009dd2 <_vfiprintf_r+0x202>
 8009dcc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8009dce:	f7fe fbcf 	bl	8008570 <__retarget_lock_release_recursive>
 8009dd2:	89ab      	ldrh	r3, [r5, #12]
 8009dd4:	065b      	lsls	r3, r3, #25
 8009dd6:	f53f af1d 	bmi.w	8009c14 <_vfiprintf_r+0x44>
 8009dda:	9809      	ldr	r0, [sp, #36]	; 0x24
 8009ddc:	e71c      	b.n	8009c18 <_vfiprintf_r+0x48>
 8009dde:	ab03      	add	r3, sp, #12
 8009de0:	9300      	str	r3, [sp, #0]
 8009de2:	462a      	mov	r2, r5
 8009de4:	4b05      	ldr	r3, [pc, #20]	; (8009dfc <_vfiprintf_r+0x22c>)
 8009de6:	a904      	add	r1, sp, #16
 8009de8:	4630      	mov	r0, r6
 8009dea:	f7fd ffc3 	bl	8007d74 <_printf_i>
 8009dee:	e7e4      	b.n	8009dba <_vfiprintf_r+0x1ea>
 8009df0:	0800a6a4 	.word	0x0800a6a4
 8009df4:	0800a6ae 	.word	0x0800a6ae
 8009df8:	0800782d 	.word	0x0800782d
 8009dfc:	08009bab 	.word	0x08009bab
 8009e00:	0800a6aa 	.word	0x0800a6aa

08009e04 <__sflush_r>:
 8009e04:	898a      	ldrh	r2, [r1, #12]
 8009e06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009e0a:	4605      	mov	r5, r0
 8009e0c:	0710      	lsls	r0, r2, #28
 8009e0e:	460c      	mov	r4, r1
 8009e10:	d458      	bmi.n	8009ec4 <__sflush_r+0xc0>
 8009e12:	684b      	ldr	r3, [r1, #4]
 8009e14:	2b00      	cmp	r3, #0
 8009e16:	dc05      	bgt.n	8009e24 <__sflush_r+0x20>
 8009e18:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8009e1a:	2b00      	cmp	r3, #0
 8009e1c:	dc02      	bgt.n	8009e24 <__sflush_r+0x20>
 8009e1e:	2000      	movs	r0, #0
 8009e20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009e24:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8009e26:	2e00      	cmp	r6, #0
 8009e28:	d0f9      	beq.n	8009e1e <__sflush_r+0x1a>
 8009e2a:	2300      	movs	r3, #0
 8009e2c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8009e30:	682f      	ldr	r7, [r5, #0]
 8009e32:	6a21      	ldr	r1, [r4, #32]
 8009e34:	602b      	str	r3, [r5, #0]
 8009e36:	d032      	beq.n	8009e9e <__sflush_r+0x9a>
 8009e38:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8009e3a:	89a3      	ldrh	r3, [r4, #12]
 8009e3c:	075a      	lsls	r2, r3, #29
 8009e3e:	d505      	bpl.n	8009e4c <__sflush_r+0x48>
 8009e40:	6863      	ldr	r3, [r4, #4]
 8009e42:	1ac0      	subs	r0, r0, r3
 8009e44:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8009e46:	b10b      	cbz	r3, 8009e4c <__sflush_r+0x48>
 8009e48:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009e4a:	1ac0      	subs	r0, r0, r3
 8009e4c:	2300      	movs	r3, #0
 8009e4e:	4602      	mov	r2, r0
 8009e50:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8009e52:	6a21      	ldr	r1, [r4, #32]
 8009e54:	4628      	mov	r0, r5
 8009e56:	47b0      	blx	r6
 8009e58:	1c43      	adds	r3, r0, #1
 8009e5a:	89a3      	ldrh	r3, [r4, #12]
 8009e5c:	d106      	bne.n	8009e6c <__sflush_r+0x68>
 8009e5e:	6829      	ldr	r1, [r5, #0]
 8009e60:	291d      	cmp	r1, #29
 8009e62:	d82b      	bhi.n	8009ebc <__sflush_r+0xb8>
 8009e64:	4a29      	ldr	r2, [pc, #164]	; (8009f0c <__sflush_r+0x108>)
 8009e66:	410a      	asrs	r2, r1
 8009e68:	07d6      	lsls	r6, r2, #31
 8009e6a:	d427      	bmi.n	8009ebc <__sflush_r+0xb8>
 8009e6c:	2200      	movs	r2, #0
 8009e6e:	6062      	str	r2, [r4, #4]
 8009e70:	04d9      	lsls	r1, r3, #19
 8009e72:	6922      	ldr	r2, [r4, #16]
 8009e74:	6022      	str	r2, [r4, #0]
 8009e76:	d504      	bpl.n	8009e82 <__sflush_r+0x7e>
 8009e78:	1c42      	adds	r2, r0, #1
 8009e7a:	d101      	bne.n	8009e80 <__sflush_r+0x7c>
 8009e7c:	682b      	ldr	r3, [r5, #0]
 8009e7e:	b903      	cbnz	r3, 8009e82 <__sflush_r+0x7e>
 8009e80:	6560      	str	r0, [r4, #84]	; 0x54
 8009e82:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8009e84:	602f      	str	r7, [r5, #0]
 8009e86:	2900      	cmp	r1, #0
 8009e88:	d0c9      	beq.n	8009e1e <__sflush_r+0x1a>
 8009e8a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8009e8e:	4299      	cmp	r1, r3
 8009e90:	d002      	beq.n	8009e98 <__sflush_r+0x94>
 8009e92:	4628      	mov	r0, r5
 8009e94:	f7ff f9f6 	bl	8009284 <_free_r>
 8009e98:	2000      	movs	r0, #0
 8009e9a:	6360      	str	r0, [r4, #52]	; 0x34
 8009e9c:	e7c0      	b.n	8009e20 <__sflush_r+0x1c>
 8009e9e:	2301      	movs	r3, #1
 8009ea0:	4628      	mov	r0, r5
 8009ea2:	47b0      	blx	r6
 8009ea4:	1c41      	adds	r1, r0, #1
 8009ea6:	d1c8      	bne.n	8009e3a <__sflush_r+0x36>
 8009ea8:	682b      	ldr	r3, [r5, #0]
 8009eaa:	2b00      	cmp	r3, #0
 8009eac:	d0c5      	beq.n	8009e3a <__sflush_r+0x36>
 8009eae:	2b1d      	cmp	r3, #29
 8009eb0:	d001      	beq.n	8009eb6 <__sflush_r+0xb2>
 8009eb2:	2b16      	cmp	r3, #22
 8009eb4:	d101      	bne.n	8009eba <__sflush_r+0xb6>
 8009eb6:	602f      	str	r7, [r5, #0]
 8009eb8:	e7b1      	b.n	8009e1e <__sflush_r+0x1a>
 8009eba:	89a3      	ldrh	r3, [r4, #12]
 8009ebc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009ec0:	81a3      	strh	r3, [r4, #12]
 8009ec2:	e7ad      	b.n	8009e20 <__sflush_r+0x1c>
 8009ec4:	690f      	ldr	r7, [r1, #16]
 8009ec6:	2f00      	cmp	r7, #0
 8009ec8:	d0a9      	beq.n	8009e1e <__sflush_r+0x1a>
 8009eca:	0793      	lsls	r3, r2, #30
 8009ecc:	680e      	ldr	r6, [r1, #0]
 8009ece:	bf08      	it	eq
 8009ed0:	694b      	ldreq	r3, [r1, #20]
 8009ed2:	600f      	str	r7, [r1, #0]
 8009ed4:	bf18      	it	ne
 8009ed6:	2300      	movne	r3, #0
 8009ed8:	eba6 0807 	sub.w	r8, r6, r7
 8009edc:	608b      	str	r3, [r1, #8]
 8009ede:	f1b8 0f00 	cmp.w	r8, #0
 8009ee2:	dd9c      	ble.n	8009e1e <__sflush_r+0x1a>
 8009ee4:	6a21      	ldr	r1, [r4, #32]
 8009ee6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8009ee8:	4643      	mov	r3, r8
 8009eea:	463a      	mov	r2, r7
 8009eec:	4628      	mov	r0, r5
 8009eee:	47b0      	blx	r6
 8009ef0:	2800      	cmp	r0, #0
 8009ef2:	dc06      	bgt.n	8009f02 <__sflush_r+0xfe>
 8009ef4:	89a3      	ldrh	r3, [r4, #12]
 8009ef6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009efa:	81a3      	strh	r3, [r4, #12]
 8009efc:	f04f 30ff 	mov.w	r0, #4294967295
 8009f00:	e78e      	b.n	8009e20 <__sflush_r+0x1c>
 8009f02:	4407      	add	r7, r0
 8009f04:	eba8 0800 	sub.w	r8, r8, r0
 8009f08:	e7e9      	b.n	8009ede <__sflush_r+0xda>
 8009f0a:	bf00      	nop
 8009f0c:	dfbffffe 	.word	0xdfbffffe

08009f10 <_fflush_r>:
 8009f10:	b538      	push	{r3, r4, r5, lr}
 8009f12:	690b      	ldr	r3, [r1, #16]
 8009f14:	4605      	mov	r5, r0
 8009f16:	460c      	mov	r4, r1
 8009f18:	b913      	cbnz	r3, 8009f20 <_fflush_r+0x10>
 8009f1a:	2500      	movs	r5, #0
 8009f1c:	4628      	mov	r0, r5
 8009f1e:	bd38      	pop	{r3, r4, r5, pc}
 8009f20:	b118      	cbz	r0, 8009f2a <_fflush_r+0x1a>
 8009f22:	6a03      	ldr	r3, [r0, #32]
 8009f24:	b90b      	cbnz	r3, 8009f2a <_fflush_r+0x1a>
 8009f26:	f7fe f8d3 	bl	80080d0 <__sinit>
 8009f2a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009f2e:	2b00      	cmp	r3, #0
 8009f30:	d0f3      	beq.n	8009f1a <_fflush_r+0xa>
 8009f32:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8009f34:	07d0      	lsls	r0, r2, #31
 8009f36:	d404      	bmi.n	8009f42 <_fflush_r+0x32>
 8009f38:	0599      	lsls	r1, r3, #22
 8009f3a:	d402      	bmi.n	8009f42 <_fflush_r+0x32>
 8009f3c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009f3e:	f7fe fb16 	bl	800856e <__retarget_lock_acquire_recursive>
 8009f42:	4628      	mov	r0, r5
 8009f44:	4621      	mov	r1, r4
 8009f46:	f7ff ff5d 	bl	8009e04 <__sflush_r>
 8009f4a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8009f4c:	07da      	lsls	r2, r3, #31
 8009f4e:	4605      	mov	r5, r0
 8009f50:	d4e4      	bmi.n	8009f1c <_fflush_r+0xc>
 8009f52:	89a3      	ldrh	r3, [r4, #12]
 8009f54:	059b      	lsls	r3, r3, #22
 8009f56:	d4e1      	bmi.n	8009f1c <_fflush_r+0xc>
 8009f58:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009f5a:	f7fe fb09 	bl	8008570 <__retarget_lock_release_recursive>
 8009f5e:	e7dd      	b.n	8009f1c <_fflush_r+0xc>

08009f60 <__swhatbuf_r>:
 8009f60:	b570      	push	{r4, r5, r6, lr}
 8009f62:	460c      	mov	r4, r1
 8009f64:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009f68:	2900      	cmp	r1, #0
 8009f6a:	b096      	sub	sp, #88	; 0x58
 8009f6c:	4615      	mov	r5, r2
 8009f6e:	461e      	mov	r6, r3
 8009f70:	da0d      	bge.n	8009f8e <__swhatbuf_r+0x2e>
 8009f72:	89a3      	ldrh	r3, [r4, #12]
 8009f74:	f013 0f80 	tst.w	r3, #128	; 0x80
 8009f78:	f04f 0100 	mov.w	r1, #0
 8009f7c:	bf0c      	ite	eq
 8009f7e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8009f82:	2340      	movne	r3, #64	; 0x40
 8009f84:	2000      	movs	r0, #0
 8009f86:	6031      	str	r1, [r6, #0]
 8009f88:	602b      	str	r3, [r5, #0]
 8009f8a:	b016      	add	sp, #88	; 0x58
 8009f8c:	bd70      	pop	{r4, r5, r6, pc}
 8009f8e:	466a      	mov	r2, sp
 8009f90:	f000 f848 	bl	800a024 <_fstat_r>
 8009f94:	2800      	cmp	r0, #0
 8009f96:	dbec      	blt.n	8009f72 <__swhatbuf_r+0x12>
 8009f98:	9901      	ldr	r1, [sp, #4]
 8009f9a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8009f9e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8009fa2:	4259      	negs	r1, r3
 8009fa4:	4159      	adcs	r1, r3
 8009fa6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009faa:	e7eb      	b.n	8009f84 <__swhatbuf_r+0x24>

08009fac <__smakebuf_r>:
 8009fac:	898b      	ldrh	r3, [r1, #12]
 8009fae:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009fb0:	079d      	lsls	r5, r3, #30
 8009fb2:	4606      	mov	r6, r0
 8009fb4:	460c      	mov	r4, r1
 8009fb6:	d507      	bpl.n	8009fc8 <__smakebuf_r+0x1c>
 8009fb8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8009fbc:	6023      	str	r3, [r4, #0]
 8009fbe:	6123      	str	r3, [r4, #16]
 8009fc0:	2301      	movs	r3, #1
 8009fc2:	6163      	str	r3, [r4, #20]
 8009fc4:	b002      	add	sp, #8
 8009fc6:	bd70      	pop	{r4, r5, r6, pc}
 8009fc8:	ab01      	add	r3, sp, #4
 8009fca:	466a      	mov	r2, sp
 8009fcc:	f7ff ffc8 	bl	8009f60 <__swhatbuf_r>
 8009fd0:	9900      	ldr	r1, [sp, #0]
 8009fd2:	4605      	mov	r5, r0
 8009fd4:	4630      	mov	r0, r6
 8009fd6:	f7ff f9c9 	bl	800936c <_malloc_r>
 8009fda:	b948      	cbnz	r0, 8009ff0 <__smakebuf_r+0x44>
 8009fdc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009fe0:	059a      	lsls	r2, r3, #22
 8009fe2:	d4ef      	bmi.n	8009fc4 <__smakebuf_r+0x18>
 8009fe4:	f023 0303 	bic.w	r3, r3, #3
 8009fe8:	f043 0302 	orr.w	r3, r3, #2
 8009fec:	81a3      	strh	r3, [r4, #12]
 8009fee:	e7e3      	b.n	8009fb8 <__smakebuf_r+0xc>
 8009ff0:	89a3      	ldrh	r3, [r4, #12]
 8009ff2:	6020      	str	r0, [r4, #0]
 8009ff4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009ff8:	81a3      	strh	r3, [r4, #12]
 8009ffa:	9b00      	ldr	r3, [sp, #0]
 8009ffc:	6163      	str	r3, [r4, #20]
 8009ffe:	9b01      	ldr	r3, [sp, #4]
 800a000:	6120      	str	r0, [r4, #16]
 800a002:	b15b      	cbz	r3, 800a01c <__smakebuf_r+0x70>
 800a004:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a008:	4630      	mov	r0, r6
 800a00a:	f000 f81d 	bl	800a048 <_isatty_r>
 800a00e:	b128      	cbz	r0, 800a01c <__smakebuf_r+0x70>
 800a010:	89a3      	ldrh	r3, [r4, #12]
 800a012:	f023 0303 	bic.w	r3, r3, #3
 800a016:	f043 0301 	orr.w	r3, r3, #1
 800a01a:	81a3      	strh	r3, [r4, #12]
 800a01c:	89a3      	ldrh	r3, [r4, #12]
 800a01e:	431d      	orrs	r5, r3
 800a020:	81a5      	strh	r5, [r4, #12]
 800a022:	e7cf      	b.n	8009fc4 <__smakebuf_r+0x18>

0800a024 <_fstat_r>:
 800a024:	b538      	push	{r3, r4, r5, lr}
 800a026:	4d07      	ldr	r5, [pc, #28]	; (800a044 <_fstat_r+0x20>)
 800a028:	2300      	movs	r3, #0
 800a02a:	4604      	mov	r4, r0
 800a02c:	4608      	mov	r0, r1
 800a02e:	4611      	mov	r1, r2
 800a030:	602b      	str	r3, [r5, #0]
 800a032:	f7f8 f844 	bl	80020be <_fstat>
 800a036:	1c43      	adds	r3, r0, #1
 800a038:	d102      	bne.n	800a040 <_fstat_r+0x1c>
 800a03a:	682b      	ldr	r3, [r5, #0]
 800a03c:	b103      	cbz	r3, 800a040 <_fstat_r+0x1c>
 800a03e:	6023      	str	r3, [r4, #0]
 800a040:	bd38      	pop	{r3, r4, r5, pc}
 800a042:	bf00      	nop
 800a044:	20004f6c 	.word	0x20004f6c

0800a048 <_isatty_r>:
 800a048:	b538      	push	{r3, r4, r5, lr}
 800a04a:	4d06      	ldr	r5, [pc, #24]	; (800a064 <_isatty_r+0x1c>)
 800a04c:	2300      	movs	r3, #0
 800a04e:	4604      	mov	r4, r0
 800a050:	4608      	mov	r0, r1
 800a052:	602b      	str	r3, [r5, #0]
 800a054:	f7f8 f843 	bl	80020de <_isatty>
 800a058:	1c43      	adds	r3, r0, #1
 800a05a:	d102      	bne.n	800a062 <_isatty_r+0x1a>
 800a05c:	682b      	ldr	r3, [r5, #0]
 800a05e:	b103      	cbz	r3, 800a062 <_isatty_r+0x1a>
 800a060:	6023      	str	r3, [r4, #0]
 800a062:	bd38      	pop	{r3, r4, r5, pc}
 800a064:	20004f6c 	.word	0x20004f6c

0800a068 <_sbrk_r>:
 800a068:	b538      	push	{r3, r4, r5, lr}
 800a06a:	4d06      	ldr	r5, [pc, #24]	; (800a084 <_sbrk_r+0x1c>)
 800a06c:	2300      	movs	r3, #0
 800a06e:	4604      	mov	r4, r0
 800a070:	4608      	mov	r0, r1
 800a072:	602b      	str	r3, [r5, #0]
 800a074:	f7f8 f84c 	bl	8002110 <_sbrk>
 800a078:	1c43      	adds	r3, r0, #1
 800a07a:	d102      	bne.n	800a082 <_sbrk_r+0x1a>
 800a07c:	682b      	ldr	r3, [r5, #0]
 800a07e:	b103      	cbz	r3, 800a082 <_sbrk_r+0x1a>
 800a080:	6023      	str	r3, [r4, #0]
 800a082:	bd38      	pop	{r3, r4, r5, pc}
 800a084:	20004f6c 	.word	0x20004f6c

0800a088 <__assert_func>:
 800a088:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a08a:	4614      	mov	r4, r2
 800a08c:	461a      	mov	r2, r3
 800a08e:	4b09      	ldr	r3, [pc, #36]	; (800a0b4 <__assert_func+0x2c>)
 800a090:	681b      	ldr	r3, [r3, #0]
 800a092:	4605      	mov	r5, r0
 800a094:	68d8      	ldr	r0, [r3, #12]
 800a096:	b14c      	cbz	r4, 800a0ac <__assert_func+0x24>
 800a098:	4b07      	ldr	r3, [pc, #28]	; (800a0b8 <__assert_func+0x30>)
 800a09a:	9100      	str	r1, [sp, #0]
 800a09c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a0a0:	4906      	ldr	r1, [pc, #24]	; (800a0bc <__assert_func+0x34>)
 800a0a2:	462b      	mov	r3, r5
 800a0a4:	f000 f844 	bl	800a130 <fiprintf>
 800a0a8:	f000 f854 	bl	800a154 <abort>
 800a0ac:	4b04      	ldr	r3, [pc, #16]	; (800a0c0 <__assert_func+0x38>)
 800a0ae:	461c      	mov	r4, r3
 800a0b0:	e7f3      	b.n	800a09a <__assert_func+0x12>
 800a0b2:	bf00      	nop
 800a0b4:	20000068 	.word	0x20000068
 800a0b8:	0800a6bf 	.word	0x0800a6bf
 800a0bc:	0800a6cc 	.word	0x0800a6cc
 800a0c0:	0800a6fa 	.word	0x0800a6fa

0800a0c4 <_calloc_r>:
 800a0c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a0c6:	fba1 2402 	umull	r2, r4, r1, r2
 800a0ca:	b94c      	cbnz	r4, 800a0e0 <_calloc_r+0x1c>
 800a0cc:	4611      	mov	r1, r2
 800a0ce:	9201      	str	r2, [sp, #4]
 800a0d0:	f7ff f94c 	bl	800936c <_malloc_r>
 800a0d4:	9a01      	ldr	r2, [sp, #4]
 800a0d6:	4605      	mov	r5, r0
 800a0d8:	b930      	cbnz	r0, 800a0e8 <_calloc_r+0x24>
 800a0da:	4628      	mov	r0, r5
 800a0dc:	b003      	add	sp, #12
 800a0de:	bd30      	pop	{r4, r5, pc}
 800a0e0:	220c      	movs	r2, #12
 800a0e2:	6002      	str	r2, [r0, #0]
 800a0e4:	2500      	movs	r5, #0
 800a0e6:	e7f8      	b.n	800a0da <_calloc_r+0x16>
 800a0e8:	4621      	mov	r1, r4
 800a0ea:	f7fe f96d 	bl	80083c8 <memset>
 800a0ee:	e7f4      	b.n	800a0da <_calloc_r+0x16>

0800a0f0 <__ascii_mbtowc>:
 800a0f0:	b082      	sub	sp, #8
 800a0f2:	b901      	cbnz	r1, 800a0f6 <__ascii_mbtowc+0x6>
 800a0f4:	a901      	add	r1, sp, #4
 800a0f6:	b142      	cbz	r2, 800a10a <__ascii_mbtowc+0x1a>
 800a0f8:	b14b      	cbz	r3, 800a10e <__ascii_mbtowc+0x1e>
 800a0fa:	7813      	ldrb	r3, [r2, #0]
 800a0fc:	600b      	str	r3, [r1, #0]
 800a0fe:	7812      	ldrb	r2, [r2, #0]
 800a100:	1e10      	subs	r0, r2, #0
 800a102:	bf18      	it	ne
 800a104:	2001      	movne	r0, #1
 800a106:	b002      	add	sp, #8
 800a108:	4770      	bx	lr
 800a10a:	4610      	mov	r0, r2
 800a10c:	e7fb      	b.n	800a106 <__ascii_mbtowc+0x16>
 800a10e:	f06f 0001 	mvn.w	r0, #1
 800a112:	e7f8      	b.n	800a106 <__ascii_mbtowc+0x16>

0800a114 <__ascii_wctomb>:
 800a114:	b149      	cbz	r1, 800a12a <__ascii_wctomb+0x16>
 800a116:	2aff      	cmp	r2, #255	; 0xff
 800a118:	bf85      	ittet	hi
 800a11a:	238a      	movhi	r3, #138	; 0x8a
 800a11c:	6003      	strhi	r3, [r0, #0]
 800a11e:	700a      	strbls	r2, [r1, #0]
 800a120:	f04f 30ff 	movhi.w	r0, #4294967295
 800a124:	bf98      	it	ls
 800a126:	2001      	movls	r0, #1
 800a128:	4770      	bx	lr
 800a12a:	4608      	mov	r0, r1
 800a12c:	4770      	bx	lr
	...

0800a130 <fiprintf>:
 800a130:	b40e      	push	{r1, r2, r3}
 800a132:	b503      	push	{r0, r1, lr}
 800a134:	4601      	mov	r1, r0
 800a136:	ab03      	add	r3, sp, #12
 800a138:	4805      	ldr	r0, [pc, #20]	; (800a150 <fiprintf+0x20>)
 800a13a:	f853 2b04 	ldr.w	r2, [r3], #4
 800a13e:	6800      	ldr	r0, [r0, #0]
 800a140:	9301      	str	r3, [sp, #4]
 800a142:	f7ff fd45 	bl	8009bd0 <_vfiprintf_r>
 800a146:	b002      	add	sp, #8
 800a148:	f85d eb04 	ldr.w	lr, [sp], #4
 800a14c:	b003      	add	sp, #12
 800a14e:	4770      	bx	lr
 800a150:	20000068 	.word	0x20000068

0800a154 <abort>:
 800a154:	b508      	push	{r3, lr}
 800a156:	2006      	movs	r0, #6
 800a158:	f000 f82c 	bl	800a1b4 <raise>
 800a15c:	2001      	movs	r0, #1
 800a15e:	f7f7 ff5f 	bl	8002020 <_exit>

0800a162 <_raise_r>:
 800a162:	291f      	cmp	r1, #31
 800a164:	b538      	push	{r3, r4, r5, lr}
 800a166:	4604      	mov	r4, r0
 800a168:	460d      	mov	r5, r1
 800a16a:	d904      	bls.n	800a176 <_raise_r+0x14>
 800a16c:	2316      	movs	r3, #22
 800a16e:	6003      	str	r3, [r0, #0]
 800a170:	f04f 30ff 	mov.w	r0, #4294967295
 800a174:	bd38      	pop	{r3, r4, r5, pc}
 800a176:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800a178:	b112      	cbz	r2, 800a180 <_raise_r+0x1e>
 800a17a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800a17e:	b94b      	cbnz	r3, 800a194 <_raise_r+0x32>
 800a180:	4620      	mov	r0, r4
 800a182:	f000 f831 	bl	800a1e8 <_getpid_r>
 800a186:	462a      	mov	r2, r5
 800a188:	4601      	mov	r1, r0
 800a18a:	4620      	mov	r0, r4
 800a18c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a190:	f000 b818 	b.w	800a1c4 <_kill_r>
 800a194:	2b01      	cmp	r3, #1
 800a196:	d00a      	beq.n	800a1ae <_raise_r+0x4c>
 800a198:	1c59      	adds	r1, r3, #1
 800a19a:	d103      	bne.n	800a1a4 <_raise_r+0x42>
 800a19c:	2316      	movs	r3, #22
 800a19e:	6003      	str	r3, [r0, #0]
 800a1a0:	2001      	movs	r0, #1
 800a1a2:	e7e7      	b.n	800a174 <_raise_r+0x12>
 800a1a4:	2400      	movs	r4, #0
 800a1a6:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800a1aa:	4628      	mov	r0, r5
 800a1ac:	4798      	blx	r3
 800a1ae:	2000      	movs	r0, #0
 800a1b0:	e7e0      	b.n	800a174 <_raise_r+0x12>
	...

0800a1b4 <raise>:
 800a1b4:	4b02      	ldr	r3, [pc, #8]	; (800a1c0 <raise+0xc>)
 800a1b6:	4601      	mov	r1, r0
 800a1b8:	6818      	ldr	r0, [r3, #0]
 800a1ba:	f7ff bfd2 	b.w	800a162 <_raise_r>
 800a1be:	bf00      	nop
 800a1c0:	20000068 	.word	0x20000068

0800a1c4 <_kill_r>:
 800a1c4:	b538      	push	{r3, r4, r5, lr}
 800a1c6:	4d07      	ldr	r5, [pc, #28]	; (800a1e4 <_kill_r+0x20>)
 800a1c8:	2300      	movs	r3, #0
 800a1ca:	4604      	mov	r4, r0
 800a1cc:	4608      	mov	r0, r1
 800a1ce:	4611      	mov	r1, r2
 800a1d0:	602b      	str	r3, [r5, #0]
 800a1d2:	f7f7 ff15 	bl	8002000 <_kill>
 800a1d6:	1c43      	adds	r3, r0, #1
 800a1d8:	d102      	bne.n	800a1e0 <_kill_r+0x1c>
 800a1da:	682b      	ldr	r3, [r5, #0]
 800a1dc:	b103      	cbz	r3, 800a1e0 <_kill_r+0x1c>
 800a1de:	6023      	str	r3, [r4, #0]
 800a1e0:	bd38      	pop	{r3, r4, r5, pc}
 800a1e2:	bf00      	nop
 800a1e4:	20004f6c 	.word	0x20004f6c

0800a1e8 <_getpid_r>:
 800a1e8:	f7f7 bf02 	b.w	8001ff0 <_getpid>

0800a1ec <_init>:
 800a1ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a1ee:	bf00      	nop
 800a1f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a1f2:	bc08      	pop	{r3}
 800a1f4:	469e      	mov	lr, r3
 800a1f6:	4770      	bx	lr

0800a1f8 <_fini>:
 800a1f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a1fa:	bf00      	nop
 800a1fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a1fe:	bc08      	pop	{r3}
 800a200:	469e      	mov	lr, r3
 800a202:	4770      	bx	lr
